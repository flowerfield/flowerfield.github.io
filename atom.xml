<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>花田半亩</title>
  
  <subtitle>文顶顶的Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://weibo.com/u/3800117445/"/>
  <updated>2018-11-15T01:21:14.667Z</updated>
  <id>https://weibo.com/u/3800117445/</id>
  
  <author>
    <name>文顶顶</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>javaScript系列 [08]-javaScript和JSON (进阶)</title>
    <link href="https://weibo.com/u/3800117445/2018/11/11/javaScript%E7%B3%BB%E5%88%97%20%5B08%5D-javaScript%E5%92%8CJSON(%E8%BF%9B%E9%98%B6)/"/>
    <id>https://weibo.com/u/3800117445/2018/11/11/javaScript系列 [08]-javaScript和JSON(进阶)/</id>
    <published>2018-11-11T00:20:13.000Z</published>
    <updated>2018-11-15T01:21:14.667Z</updated>
    
    <content type="html"><![CDATA[<div class="tip">在<a href="http://wendingding.com/2018/04/16/javaScript%E7%B3%BB%E5%88%97%20[05]-javaScript%E5%92%8CJSON/" target="_blank" rel="external">javaScript和JSON</a>这篇博文中已经对JSON的基础知识进行了系统的介绍，此文是JSON知识的<strong>进阶内容</strong>，本文输出和JSON有关的以下内容：</div><blockquote><p>❐  JSON核心<br>❐  JSON的校验(JSON Schema)</p></blockquote><h3 id="JSON核心"><a href="#JSON核心" class="headerlink" title="JSON核心"></a>JSON核心</h3><p>JSON是一种数据交换格式，是当前网络通信中使用的主流数据格式。</p><p><span style="color:#000">JSON本身并不局限(依赖)于某项特定的技术，非私有且可移植，几乎所有的现代编程语言(<code>javaScript</code> | <code>java</code> | <code>Ruby</code> | <code>C#</code> | <code>PHP</code> | <code>Object-C</code>等)和平台都支持对JSON数据的序列化和反序列化处理，JSON主要应用在<strong><code>网络通信的数据格式</code>、<code>Node用来存储项目元数据</code>、<code>Kafka类似的消息平台</code></strong>以及<strong><code>MongoDB等NoSQL数据库</code></strong>中。</span></p><p><span style="border:1px solid #000;padding:5px 20px;"><strong>JSON流行的主要原因</strong></span></p><ul><li><strong>JavaScript语言的复兴和崛起</strong>。</li><li><strong>JSON自身数据结构的简洁和紧凑特性</strong>。</li><li><strong>基于JSON的RESTful API呈现大规模增长</strong>。</li><li><strong>Ecma国际和IETF相关的标准化工作让JSON获得行业认可</strong>。</li></ul><p>JSON的作者<a href="https://en.wikipedia.org/wiki/Douglas_Crockford" target="_blank" rel="external">Douglas Crockford</a>在创作时借鉴了JavaScript对象字面量的语法，也就是说JSON本身就是JavaScript对象字面量表示法的一个子集和JavaScript开发能够无缝融合，而JavaScript编程语言的复兴和崛起(<code>前端 + Node后端生态</code>)极大的推动了JSON的流行。</p><p>JSON的数据表示方式非常简洁，结构紧凑易于阅读而且其本身的结构与高级编程语言中的<code>对象|字典|数组</code>结构天然一致，与XML相比更适合面向对象的设计和开发。此外，JSON格式的文档通常比相同内容的XML文档更小，因此在进行网络传输和处理的时候更快、效率更高，JSON本身的这些特性加上相关技术环境的发展让它逐步替代XML成为互联网中主要的数据交换格式。 </p><p>近些年，基于JSON的RESTful API呈现大规模爆炸式增长，包括LinkedIn、Github、Twitter、Facebook、Tumblr和Amazon等公司都提供基于JSON的RESTful API(<strong><code>备注</code></strong> 相关API可以访问<a href="https://www.programmableweb.com" target="_blank" rel="external">programmableweb</a>查询)。</p><p>JSON的标准化(成为一项技术标准)，让JSON获得了行业内的认可，下面简单列出主要的标准化进程。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">2001 年 JSON由Douglas Crockford提出。</div><div class="line">2006 年 JSON由IETF通过RFC 4627进行首次标准化。</div><div class="line">2013 年 Ecma国际通过ECMA 404 将JSON正式标准化。</div><div class="line">2014 年 Tim Bray发布了RFC 7158和RFC 7159作为原始标准的改进版本(主要修正了4627标准中的一些错误)。</div></pre></td></tr></table></figure></p><p><span style="border:1px solid #000;padding:5px 20px;"><strong>JSON数值的类型</strong></span></p><p>JSON数值的类型主要指的是在JSON文档中，键值对冒号(:)后侧值的数据类型，主要包括：</p><ul><li><span style="color:#196"><strong>null</strong></span></li><li><span style="color:#196"><strong>数值</strong></span></li><li><span style="color:#196"><strong>对象</strong></span></li><li><span style="color:#196"><strong>数组</strong></span></li><li><span style="color:#196"><strong>字符串</strong></span></li><li><span style="color:#196"><strong>布尔值</strong></span></li></ul><p><strong><code>null</code></strong>是JSON中的一个特殊值，用来表示某个key(属性)没有值用作占位符，注意不能由引号括起来。</p><p><strong><code>数值</code></strong>遵循JavaScript双精度浮点数格式，支持指数形式，但仅支持十进制数不支持8进制和16进制数。</p><p><strong><code>对象</code></strong>由 { 和 } 把键值对(key-value)括起来，允许设置为空对象，可以内嵌在其他的对象或者是数组中。</p><p><strong><code>数组</code></strong>由 [ 和 ] 把元素括起来，允许设置为空数组且不限制类型，可以内嵌在其他的对象或者是数组中。</p><p><strong><code>字符串</code></strong>由包含在双引号间的N(&gt;=0)个Unicode字符组成可包含由转义字符，但<span style="color:#972">单引号字符串是非法的</span>。</p><p><strong><code>布尔值</code></strong>只存在true和false这两种值，且不能用引号把它们括起来，需注意JSON中没有为<strong>undefined</strong>值。</p><p><span style="border:1px solid #000;padding:5px 20px;"><strong>More …</strong></span></p><p><strong>版本 ➤</strong>JSON的核心标准不会再有新的版本，适用”无版本”理念。</p><p><strong>类型 ➤</strong>JSON数据在文件系统中存储的标准文件类型为.json，IANA为JSON文档指定的MIME(媒体类型)为<span style="color:red">application/json</span>。</p><p><strong>缩进 ➤</strong>JSON的编码规范并不存在与JSON数据缩进相关的话题，主要因为JSON本身是一种序列化格式而非呈现格式，所以缩进对JSON本身而言意义不大，在优化JSON现实的时候，常见的缩进方案是两格缩进或四格缩进。</p><p><strong>工具 ➤</strong> </p><p>在线生成合法JSON文档的工具(1)  <a href="http://jsonmate.com" target="_blank" rel="external">JSONmate</a><br>在线生成合法JSON文档的工具(2)  <a href="https://jsoneditoronline.org" target="_blank" rel="external">JSON Editor Online</a><br>在线校验JSON文档是否合法的工具(1) <a href="http://json-schema.org" target="_blank" rel="external">JSON Schema</a><br>在线校验JSON文档是否合法的工具(2) <a href="http://jsonvalidate.com" target="_blank" rel="external">JSON Validate</a><br>快速生成大量测试JSON数据的工具推荐 <a href="https://www.json-generator.com" target="_blank" rel="external">JSON Generator</a><br>在线对复杂JSON数据格式化的工具推荐 <a href="http://tool.oschina.net/codeformat/json" target="_blank" rel="external">JSON 在线格式化</a></p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/json_01.png?raw=true"></p><div class="tip">创建|编辑JSON文件的时候，建议使用<a href="https://jsoneditoronline.org" target="_blank" rel="external">JSON Editor Online</a>在线工具，上图是其基本工作界面。</div><h3 id="JSON-Schema"><a href="#JSON-Schema" class="headerlink" title="JSON Schema"></a>JSON Schema</h3><p><a href="http://json-schema.org" target="_blank" rel="external">JSON Schema</a>是对JSON文档中的内容、结构和格式进行的声明，用于校验JSON文档。区别于普通的JSON校验工具，JSON Schema能够对JSON文档执行<strong>语法校验</strong>和严格的<strong>语义校验</strong>。<a href="http://json-schema.org" target="_blank" rel="external">JSON Schema</a>这种能够用于校验JSON文档内容和语义的工具能够有效提供服务的安全性，在消息系统中的应用能够确保数据格式的正确性，在API设计领域还能够帮助定义API协议等。</p><p><strong>建议</strong> 从零开始对JSON文档的内容进行声明非常麻烦也没有必要，建议先使用<a href="https://jsonschema.net" target="_blank" rel="external">JSONSchema.net网站</a>来根据已有的JSON文档生成对应的Schema文档，然后再根据具体的校验规则来逐步修缮。</p><p><span style="border:1px solid #000;padding:5px 20px;"><strong>基本示例</strong></span></p><p>这里先给出一份简单的JSON文档和对该文档的JSON Schema描述，然后再介绍<code>JSON Schema的核心关键词</code>和具体规则。<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"># 文件名 demo.json 注意该行不作为json文件的内容</div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="attr">"name"</span>: <span class="string">"wendingding"</span>,</div><div class="line">    <span class="attr">"age"</span>: <span class="number">18</span>,</div><div class="line">    <span class="attr">"email"</span>: <span class="string">"wendingding_ios@126.com"</span>,</div><div class="line">    <span class="attr">"height"</span>: <span class="number">1.73</span>,</div><div class="line">    <span class="attr">"isGoodMan"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="attr">"tags"</span>: [</div><div class="line">        <span class="string">"javaScript"</span>,</div><div class="line">        <span class="string">"object-C"</span>,</div><div class="line">        <span class="string">"C++"</span>,</div><div class="line">        <span class="string">"swift"</span>,</div><div class="line">        <span class="string">"php"</span></div><div class="line">    ],</div><div class="line">    <span class="attr">"car"</span>: &#123;</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"A"</span>,</div><div class="line">        <span class="attr">"number"</span>: <span class="string">"粤A 66666"</span>,</div><div class="line">        <span class="attr">"price"</span>: <span class="number">21344.88</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"># 文件名 demo-schema.json 注意该行不作为json文件的内容</div><div class="line">&#123;</div><div class="line">  <span class="attr">"$schema"</span>: <span class="string">"http://json-schema.org/draft-07/schema#"</span>,</div><div class="line">  <span class="attr">"type"</span>: <span class="string">"object"</span>,</div><div class="line">  <span class="attr">"required"</span>: [<span class="string">"name"</span>,<span class="string">"age"</span>,<span class="string">"email"</span>,<span class="string">"height"</span>,<span class="string">"isGoodMan"</span>,<span class="string">"tags"</span>,<span class="string">"car"</span>],</div><div class="line">  <span class="attr">"properties"</span>: &#123;</div><div class="line">    <span class="attr">"name"</span>: &#123;</div><div class="line">      <span class="attr">"type"</span>: <span class="string">"string"</span>,</div><div class="line">      <span class="attr">"examples"</span>: [ <span class="string">"wendingding"</span> ],</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"age"</span>: &#123;</div><div class="line">      <span class="attr">"type"</span>: <span class="string">"integer"</span>,</div><div class="line">      <span class="attr">"examples"</span>: [ <span class="number">18</span> ]</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"email"</span>: &#123;</div><div class="line">      <span class="attr">"type"</span>: <span class="string">"string"</span>,</div><div class="line">      <span class="attr">"examples"</span>: [<span class="string">"wendingding_ios@126.com"</span>],</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"height"</span>: &#123;</div><div class="line">      <span class="attr">"type"</span>: <span class="string">"number"</span>,</div><div class="line">      <span class="attr">"examples"</span>: [ <span class="number">1.73</span> ]</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"isGoodMan"</span>: &#123;</div><div class="line">      <span class="attr">"type"</span>: <span class="string">"boolean"</span>,</div><div class="line">      <span class="attr">"examples"</span>: [ <span class="literal">true</span>]</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"tags"</span>: &#123;</div><div class="line">      <span class="attr">"type"</span>: <span class="string">"array"</span>,</div><div class="line">      <span class="attr">"items"</span>: &#123;</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"string"</span>,</div><div class="line">        <span class="attr">"examples"</span>: [<span class="string">"javaScript"</span>, <span class="string">"object-C"</span>, <span class="string">"C++"</span>,<span class="string">"swift"</span>,<span class="string">"php"</span>]  </div><div class="line">      &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"car"</span>: &#123;</div><div class="line">      <span class="attr">"type"</span>: <span class="string">"object"</span>,</div><div class="line">      <span class="attr">"required"</span>: [<span class="string">"type"</span>,<span class="string">"number"</span>, <span class="string">"price"</span>],</div><div class="line">      <span class="attr">"properties"</span>: &#123;</div><div class="line">        <span class="attr">"type"</span>: &#123;</div><div class="line">          <span class="attr">"type"</span>: <span class="string">"string"</span>,</div><div class="line">          <span class="attr">"examples"</span>: [<span class="string">"A"</span>] </div><div class="line">        &#125;,</div><div class="line">        <span class="attr">"number"</span>: &#123;</div><div class="line">          <span class="attr">"type"</span>: <span class="string">"string"</span>,</div><div class="line">          <span class="attr">"examples"</span>: [<span class="string">"粤A 66666"</span>]   </div><div class="line">        &#125;,</div><div class="line">        <span class="attr">"price"</span>: &#123;</div><div class="line">          <span class="attr">"type"</span>: <span class="string">"number"</span>,</div><div class="line">          <span class="attr">"examples"</span>: [<span class="number">21344.88</span> ] </div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>推荐使用命令行工具的validate模块来使用Schema对准备好的JSON文档进行校验，列出执行细节：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">wendingding$ npm install -g ujs-jsonvalidate</div><div class="line">/usr/<span class="built_in">local</span>/bin/validaten -&gt; /usr/<span class="built_in">local</span>/lib/node_modules/ujs-jsonvalidate/bin/validaten</div><div class="line">/usr/<span class="built_in">local</span>/bin/validate -&gt; /usr/<span class="built_in">local</span>/lib/node_modules/ujs-jsonvalidate/bin/validate</div><div class="line">+ ujs-jsonvalidate@0.1.2</div><div class="line">added 4 packages <span class="keyword">in</span> 7.353s</div><div class="line">wendingding$ validate demo.json demo-schema.json </div><div class="line">JSON content <span class="keyword">in</span> file demo.json is valid</div></pre></td></tr></table></figure><p>因为在Schema文档中name字段是必要的，这里尝试删除demo.json文档中的<code>name:&quot;wendingding&quot;</code>部分，然后重新执行校验会发现提示错误信息。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">wendingding$ cat demo.json</div><div class="line">&#123;</div><div class="line">  <span class="string">"age"</span>: 18,</div><div class="line">  <span class="string">"email"</span>: <span class="string">"wendingding_ios@126.com"</span>,</div><div class="line">  <span class="string">"height"</span>: 1.73,</div><div class="line">  <span class="string">"isGoodMan"</span>: <span class="literal">true</span>,</div><div class="line">  <span class="string">"tags"</span>: [</div><div class="line">    <span class="string">"javaScript"</span>,</div><div class="line">    <span class="string">"object-C"</span>,</div><div class="line">    <span class="string">"C++"</span>,</div><div class="line">    <span class="string">"swift"</span>,</div><div class="line">    <span class="string">"php"</span></div><div class="line">  ],</div><div class="line">  <span class="string">"car"</span>: &#123;</div><div class="line">    <span class="string">"type"</span>: <span class="string">"A"</span>,</div><div class="line">    <span class="string">"number"</span>: <span class="string">"粤A 66666"</span>,</div><div class="line">    <span class="string">"price"</span>: 21344.88</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">wendingding$ validate demo.json demo-schema.json </div><div class="line">Invalid: Missing required property: name</div><div class="line">JSON Schema element: /required/0</div><div class="line">JSON Content path:</div></pre></td></tr></table></figure></p><p><span style="border:1px solid #000;padding:5px 20px;"><strong>核心关系词说明</strong></span></p><p><strong><code>type</code></strong> 声明对应字段的类型。<br><strong><code>pattern</code></strong> 使用正则表达式来限定字段的值。<br><strong><code>properties</code></strong> 声明对象中的字段，其中包含具体字段的type值等信息。<br><strong><code>$schema</code></strong> 声明遵循的<a href="http://json-schema.org" target="_blank" rel="external">JSON Schema</a>标准版本，校验文档时使用该版本的规则。</p><p><strong><code>items</code></strong> 如果字段是数组类型(array)，那么对数组元素的类型等进行限定。<br><strong><code>minimum | maximum</code></strong> 如果是数值类型(number)，那么限定其取值的范围。<br><strong><code>minItems | maxItems</code></strong> 用于校验数组成员的数目，设定最小数目和最大数目。<br><strong><code>examples</code></strong> 提供该字段对应值的示例，在创建schema文档的时候通常根据JSON模板文件的内容生成。<br><strong><code>enum</code></strong> 定义固定的枚举值来限制数组元素的取值，即数组的元素值只能是enum限定集合中的数据。</p><p><strong><code>additionalProperties</code></strong> 将该字段设置为false可以禁止JSON文档当前节点中出现额外的字段。<br><strong><code>required</code></strong> 该数组用于声明JSON文档中所有的必需字段，即必需包含这些字段，否则视为非法文档。<br><strong><code>dependencies</code></strong> 设置字段的依赖关系，即JSON文档中出现了某个字段的出现必须依赖某个特定字段。<br><strong><code>patternProperties</code></strong> 模式属性可以基于正则表达式来声明部分重复的字段名，如<code>^string[1-3]$</code>。</p><div class="tip"><strong>建议</strong> 在工作中如果需要对JSON数据进行严格的语法和语义校验，那么建议先使用典型的JSON文档利用<a href="http://json-schema.org" target="_blank" rel="external">JSON Schema在线工具</a>自动生成对应的Schema校验文件，然后再对该文件进行二次编辑，这样效率会更高一些。</div><p>这里给出<code>JSON Schema在线工具</code>的使用示例。<br><img src="https://github.com/flowerField/Source/blob/master/Blog/json_02.gif?raw=true"></p><p><strong>扩展</strong> 前文中在对JSON文档和对应Schema进行校验的时候，在命令行中使用的是<code>validate模块</code>，该模块是<a href="http://jsonvalidate.com" target="_blank" rel="external">JSON Validate</a>网站所对应的npm包，具体使用的是名为<a href="https://www.npmjs.com/package/ujs-jsonvalidate" target="_blank" rel="external">ujs-jsonvalidate</a>的处理器。此外，<a href="https://github.com/epoberezkin/ajv" target="_blank" rel="external">ajv</a>也是Node中优秀的一款JSON校验类库，它本身很简洁且兼容性很好，更多信息可以参考链接地址。</p><hr><ul><li>Posted by 博客园·<a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a> | <a href="http://wendingding.com" target="_blank" rel="external">花田半亩</a></li><li>联系作者 简书·<a href="http://www.jianshu.com/users/c5703017b9f5/latest_articleshttp://www.jianshu.com/users/c5703017b9f5/latest_articles" target="_blank" rel="external">文顶顶</a> 新浪微博·<a href="http://weibo.com/p/1005053800117445/home?from=page_100505&amp;mod=TAB#place">Coder_文顶顶</a></li><li>原创文章，版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;tip&quot;&gt;在&lt;a href=&quot;http://wendingding.com/2018/04/16/javaScript%E7%B3%BB%E5%88%97%20[05]-javaScript%E5%92%8CJSON/&quot; target=&quot;_blank&quot; r
      
    
    </summary>
    
    
      <category term="javaScript系列" scheme="https://weibo.com/u/3800117445/tags/javaScript%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序实战[03]-衣橱商城首页功能实现</title>
    <link href="https://weibo.com/u/3800117445/2018/10/24/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98%5B03%5D-%E8%A1%A3%E6%A9%B1%E5%95%86%E5%9F%8E%E9%A6%96%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/"/>
    <id>https://weibo.com/u/3800117445/2018/10/24/微信小程序实战[03]-衣橱商城首页功能实现/</id>
    <published>2018-10-24T10:30:39.000Z</published>
    <updated>2018-11-11T13:30:01.175Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文简单说明衣橱商城首页界面的实现过程，包括对商城首页的结构分析、首页各个区域模块的数据处理以及模块化的抽取等内容。</p></blockquote><h3 id="1-0-最终实现效果"><a href="#1-0-最终实现效果" class="headerlink" title="1.0 最终实现效果"></a>1.0 最终实现效果</h3><p>这里先给出最终实现效果图，并贴出首页(<code>home/index.wxml</code>和<code>home/index.wxss</code>)文件中的代码结构。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx50.gif?raw=true"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">//(1) home/index.wxml文件内容</div><div class="line"><span class="comment">&lt;!-- 000 引入模板文件 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">src</span>=<span class="string">'../../src/lib/template/bannerSwiper/bannerSwiper.wxml'</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">src</span>=<span class="string">'../../src/lib/template/timeLimit/timeLimit.wxml'</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">src</span>=<span class="string">'../../src/lib/template/hotCategory/hotCategory.wxml'</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">src</span>=<span class="string">'../../src/lib/template/mustBuy/mustBuy.wxml'</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">src</span>=<span class="string">'../../src/lib/template/weekly/weekly.wxml'</span>/&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 001 首页头部视图的处理 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">'bannerSwiperTemplate'</span> <span class="attr">data</span>=<span class="string">'&#123;&#123;banners&#125;&#125;'</span>&gt;</span><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 002 首页我的订单等(自定义组件) --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">i-tabview</span> <span class="attr">itemArray</span>=<span class="string">'&#123;&#123; itemArray &#125;&#125;'</span>&gt;</span><span class="tag">&lt;/<span class="name">i-tabview</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 003 限时优惠模块 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">'timeLimitViewTemplate'</span> <span class="attr">data</span>=<span class="string">'&#123;&#123;timeLimitListData&#125;&#125;'</span>&gt;</span><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 004 每周推荐模块 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">'weeklyViewTemplate'</span> <span class="attr">data</span>=<span class="string">'&#123;&#123;weeklyData&#125;&#125;'</span>&gt;</span><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 005 必买爆品模块 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">'mustBuyTemplate'</span> <span class="attr">data</span>=<span class="string">'&#123;&#123;topListObj&#125;&#125;'</span>&gt;</span><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 006 热门分类模块 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">'hotViewTemplate'</span> <span class="attr">data</span>=<span class="string">'&#123;&#123;hotListData&#125;&#125;'</span>&gt;</span><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">//(2) home/index.wxss文件内容</div><div class="line"></div><div class="line"><span class="comment">/* 引入模板对应的样式文件 */</span></div><div class="line">@<span class="keyword">import</span> <span class="string">"../../src/lib/style/headerView.wxss"</span>;</div><div class="line">@<span class="keyword">import</span> <span class="string">"../../src/lib/template/timeLimit/timeLimit.wxss"</span>;</div><div class="line">@<span class="keyword">import</span> <span class="string">"../../src/lib/template/hotCategory/hotCategory.wxss"</span>;</div><div class="line">@<span class="keyword">import</span> <span class="string">"../../src/lib/template/mustBuy/mustBuy.wxss"</span>;</div><div class="line">@<span class="keyword">import</span> <span class="string">"../../src/lib/template/weekly/weekly.wxss"</span>;</div><div class="line">@<span class="keyword">import</span> <span class="string">"../../src/lib/template/bannerSwiper/bannerSwiper.wxss"</span>;</div></pre></td></tr></table></figure><p><strong>总结</strong> <strong>我们在做任何应用的时候，其实要做的无非两件事件，<span style="color:red">界面处理和业务逻辑处理</span></strong>。简单来说我们可以把任何的需求拆分成<code>UI界面效果</code>和<code>数据处理</code>两部分，通常UI界面效果需要根据特定的数据来实现，或者UI界面由数据进行驱动。如果还要再加一点能力，那也许就是拆分的能力了，即把大的模块拆分成一个个小的适合处理模块的能力。比如这个商城项目，我们首先把整个应用划分为<code>首页商品展示</code>、<code>购物车</code>、<code>订单和支付</code>等大的模块，然后每个大的模块中都包含一堆页面，这样就划分到具体页面的粒度了，如果页面相对来说比较复杂，那么还可以继续拆分。</p><p>这里我们需要实现首页这个模块，需要设计并实现首页的UI视图，该视图需要根据服务器端提供的数据来显示，下文将主要从<strong>UI界面的处理</strong>和<strong>服务器端数据</strong>处理两个维度来说明具体的实现过程。</p><h3 id="2-0-首页数据的处理"><a href="#2-0-首页数据的处理" class="headerlink" title="2.0 首页数据的处理"></a>2.0 首页数据的处理</h3><p>首页的数据处理相对简单，大概可以分成几个步骤。</p><blockquote><p>❏ 开通云开发功能创建环境并在文件存储模块保存图片资源<br>❏ 在数据库中创建界面中需要用到的数据集合，并把具体数据以记录的方式保存<br>❏ 在小程序前端js文件中通过调用云开发平台的API来对数据库中的数据进行操作<br>❏ 获取数据后通过调用this.setData方法来设置属性并重新渲染页面</p></blockquote><p>这里简单给出首页视图和需要用到数据之间的对应关系。<br><img src="https://github.com/flowerField/Source/blob/master/Blog/wx51.png?raw=true"></p><p>在实现首页的时候，我们可以把整个页面简单划分为：<code>(1) 顶部bannaer区域</code>、<code>(2) 订单|售后区域</code>、<code>(3) 限时优惠区域</code>、<code>(4) 每周推荐区域</code>、<code>(5) 必买爆品区域</code>以及<code>(6)热门分类</code>等6个模块。这些模块中除<code>订单|售后区域</code>使用之前封装的自定义组件传递itemArray数组外，其它模块的数据都需要通过和服务器端数据库进行通信来进行获取，其中部分数据在获取后可能还需要做额外的处理。这里贴出js文件中对应的业务逻辑处理相关代码。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// pages/home/index.js</span></div><div class="line">Page(&#123;</div><div class="line">  data: &#123;</div><div class="line">    hotListData: [],</div><div class="line">    timeLimitListData:[],</div><div class="line">    banners: [],</div><div class="line">    itemArray: [</div><div class="line">      &#123;</div><div class="line">        srcImg: <span class="string">"../../../../src/img/order.png"</span>,</div><div class="line">        des: <span class="string">"我的订单"</span></div><div class="line">      &#125;,</div><div class="line">      &#123;</div><div class="line">        srcImg: <span class="string">"../../../../src/img/size.png"</span>,</div><div class="line">        des: <span class="string">"衣物尺寸"</span></div><div class="line">      &#125;,</div><div class="line">      &#123;</div><div class="line">        srcImg: <span class="string">"../../../../src/img/service.png"</span>,</div><div class="line">        des: <span class="string">"售后服务"</span></div><div class="line">      &#125;,</div><div class="line">    ],</div><div class="line">    weeklyData:[],</div><div class="line">    topListObj:&#123;&#125;</div><div class="line">  &#125;,</div><div class="line"></div><div class="line">  onLoad: <span class="function"><span class="keyword">function</span> (<span class="params">options</span>) </span>&#123;</div><div class="line">    <span class="comment">//生命周期函数--监听页面加载</span></div><div class="line"></div><div class="line">    <span class="keyword">var</span> that = <span class="keyword">this</span>;  <span class="comment">//保存全局的this指针</span></div><div class="line">    wx.cloud.init();  <span class="comment">//初始化操作</span></div><div class="line"></div><div class="line">    <span class="keyword">const</span> db = wx.cloud.database(); <span class="comment">//连接数据库</span></div><div class="line"></div><div class="line">    <span class="comment">//000 获取数据库中banners中对应的数据</span></div><div class="line">    db.collection(<span class="string">"banners"</span>).get(&#123;</div><div class="line">      success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</div><div class="line">        <span class="comment">//请求成功那么就使用得到的数据来设置渲染界面</span></div><div class="line">        that.setData(&#123;</div><div class="line">          banners:res.data</div><div class="line">        &#125;)</div><div class="line">      &#125;</div><div class="line">    &#125;)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">PrefixInteger</span>(<span class="params">num, length</span>) </span>&#123;</div><div class="line">      <span class="keyword">return</span> (<span class="built_in">Array</span>(length).join(<span class="string">'0'</span>) + num).slice(-length);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//001 获取数据库中timeLimt中对应的数据</span></div><div class="line">    db.collection(<span class="string">"timeLimitList"</span>).doc(<span class="string">"5bcbf152b91567be916f95ce"</span>).get(&#123;</div><div class="line">      success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</div><div class="line"></div><div class="line">        <span class="keyword">var</span> data = res.data.timeLimitList</div><div class="line"></div><div class="line">        <span class="comment">//请求成功那么就使用得到的数据来设置渲染界面</span></div><div class="line">        that.setData(&#123;</div><div class="line">          timeLimitListData: data</div><div class="line">        &#125;)</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.length ; i++)</div><div class="line">        &#123;</div><div class="line"></div><div class="line">         (<span class="function"><span class="keyword">function</span>(<span class="params">j</span>)</span>&#123;</div><div class="line"></div><div class="line">           <span class="keyword">var</span> endTimeStr = data[j].end;</div><div class="line">           <span class="keyword">var</span> startTimeStr = data[j].start;</div><div class="line">           <span class="keyword">var</span> timer = <span class="string">'timeLimitListData['</span> + j + <span class="string">'].timer'</span></div><div class="line">           <span class="keyword">var</span> isStart = <span class="string">'timeLimitListData['</span> + j + <span class="string">'].isStart'</span></div><div class="line"></div><div class="line">           <span class="comment">//设置倒计时</span></div><div class="line">           setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line"></div><div class="line">             <span class="keyword">var</span> resultIsStart = <span class="literal">true</span>;</div><div class="line">             <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime(); <span class="comment">//获取当前时间</span></div><div class="line">             <span class="keyword">var</span> end = <span class="keyword">new</span> <span class="built_in">Date</span>(endTimeStr).getTime(); <span class="comment">// //设置截止时间</span></div><div class="line">             <span class="keyword">var</span> start = <span class="keyword">new</span> <span class="built_in">Date</span>(startTimeStr).getTime(); <span class="comment">// //设置开始时间</span></div><div class="line"></div><div class="line">             <span class="keyword">if</span>(now - start &lt; <span class="number">0</span>) &#123;</div><div class="line">               resultIsStart = <span class="literal">false</span>;</div><div class="line">             &#125;</div><div class="line"></div><div class="line">             <span class="comment">//定义变量 d,h,m,s保存倒计时的时间</span></div><div class="line">             <span class="keyword">var</span> d, h, m, s, timeResult = <span class="string">"已结束"</span>;</div><div class="line">             <span class="keyword">var</span> leftTime = end - now;    <span class="comment">//计算时间差</span></div><div class="line">             <span class="keyword">if</span> (leftTime &gt;= <span class="number">0</span>) &#123;</div><div class="line">               h = PrefixInteger(<span class="built_in">Math</span>.floor(leftTime / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> % <span class="number">24</span>), <span class="number">2</span>);</div><div class="line">               m = PrefixInteger(<span class="built_in">Math</span>.floor(leftTime / <span class="number">1000</span> / <span class="number">60</span> % <span class="number">60</span>), <span class="number">2</span>);</div><div class="line">               s = PrefixInteger(<span class="built_in">Math</span>.floor(leftTime / <span class="number">1000</span> % <span class="number">60</span>), <span class="number">2</span>);</div><div class="line">               timeResult = <span class="string">"距结束"</span> + h + <span class="string">":"</span> + m + <span class="string">":"</span> + s;</div><div class="line">             &#125;</div><div class="line"></div><div class="line">             that.setData(&#123;</div><div class="line">               [timer]: timeResult,</div><div class="line">               [isStart]: resultIsStart,</div><div class="line">             &#125;);</div><div class="line"></div><div class="line">           &#125;, <span class="number">1000</span>);</div><div class="line"></div><div class="line">         &#125;)(i)</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;)</div><div class="line"></div><div class="line">    <span class="comment">//002 获取数据库中weeklyData中对应的数据</span></div><div class="line">    db.collection(<span class="string">"weeklyData"</span>).doc(<span class="string">"5bcaa4acb91567be916f204a"</span>).get(&#123;</div><div class="line">      success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</div><div class="line">        <span class="comment">//请求成功那么就使用得到的数据来设置渲染界面</span></div><div class="line">        that.setData(&#123;</div><div class="line">          weeklyData: res.data.weeklyData</div><div class="line">        &#125;)</div><div class="line">        <span class="comment">// console.log("---", res.data.weeklyData);</span></div><div class="line">      &#125;</div><div class="line">    &#125;)</div><div class="line"></div><div class="line">    <span class="comment">//003 获取数据库中topList中对应的数据</span></div><div class="line">    db.collection(<span class="string">"topList"</span>).doc(<span class="string">"5bcae5eeb91567be916f3837"</span>).get(&#123;</div><div class="line">      success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</div><div class="line">        <span class="comment">//请求成功那么就使用得到的数据来设置渲染界面</span></div><div class="line">        that.setData(&#123;</div><div class="line">          topListObj: res.data,</div><div class="line">        &#125;)</div><div class="line">      &#125;</div><div class="line">    &#125;)</div><div class="line"></div><div class="line">    <span class="comment">//004 获取数据库中hotList中对应的数据</span></div><div class="line">    db.collection(<span class="string">"hotList"</span>).doc(<span class="string">"5bcb3457b91567be916f5510"</span>).get(&#123;</div><div class="line">      success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</div><div class="line">        <span class="comment">//请求成功那么就使用得到的数据来设置渲染界面</span></div><div class="line">        that.setData(&#123;</div><div class="line">          hotListData: res.data.hotList,</div><div class="line">        &#125;)</div><div class="line">      &#125;</div><div class="line">    &#125;)</div><div class="line">  &#125;,</div><div class="line">  onReady: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">//生命周期函数--监听页面初次渲染完成</span></div><div class="line">  &#125;,</div><div class="line">  onShow: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">//生命周期函数--监听页面显示</span></div><div class="line">  &#125;,</div><div class="line">  onHide: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">//生命周期函数--监听页面隐藏</span></div><div class="line">  &#125;,</div><div class="line">  onUnload: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">//生命周期函数--监听页面卸载</span></div><div class="line">  &#125;,</div><div class="line">  onPullDownRefresh: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">//页面相关事件处理函数--监听用户下拉动作</span></div><div class="line">  &#125;,</div><div class="line">  onReachBottom: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">//页面上拉触底事件的处理函数</span></div><div class="line">  &#125;,</div><div class="line">  onShareAppMessage: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">//用户点击右上角分享</span></div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p><p><strong>代码说明</strong> 代码中在设置页面数据的时候调用的是<code>that.setData</code>方法，为什么不用<code>this.setData</code>呢？需要注意的是因为JavaScript语言本身的特性，导致<strong>success回调函数中this的指向跟页面中全局this不同</strong>，所以如果直接使用this来调用setData方法是不正确的。上面的代码中我们先把全局的this保存给that变量，然后当我们需要修改data属性中数据的时候都通过调用<code>that.setData</code>方法实现。还有一个注意点，就是在调用API访问数据库中数据的时候<span style="color:#195">一定要保证拥有对当前数据的操作权限</span>，切记。</p><h3 id="3-0-首页界面的处理"><a href="#3-0-首页界面的处理" class="headerlink" title="3.0 首页界面的处理"></a>3.0 首页界面的处理</h3><p>UI界面的处理其实也很简单，给出建议的处理流程：</p><blockquote><p>❏  <strong><code>拆分</code></strong> 根据最终效果图(高保真图片)来对UI整体界面进行拆分，拆分成更小的模块。<br>❏  <strong><code>标签</code></strong> 先分析每个模块(小的视图结构)需要用到的标签(组件)情况，写具体的标签。<br>❏  <strong><code>样式</code></strong> 根据最终效果图来为标签添加样式完成布局等操作，每个模块都进行处理，写样式。<br>❏  <strong><code>数据</code></strong> 使用js中对应的数据(可以是data中写好的数据 | 网络请求得到的数据)来完成数据填充。<br>❏  <strong><code>事件</code></strong> 如果当前视图拥有交互和事件，则还需给对应标签绑定事件并在js文件中进行逻辑处理。</p></blockquote><p>因为首页的UI界面本身比较复杂，所以这里我尝试以如下的方式进行拆分，再各个击破。<br><img src="https://github.com/flowerField/Source/blob/master/Blog/wx52.png?raw=true"></p><p>在前文中相信大家已经看到最终的时候我是把每个小的模块都抽取成了模板，然后在<code>home/index.wxml</code>和<code>home/index.wxss</code>文件中导入模板(模板的样式)，使用模板并传递参数来实现的。这是简单优化后的代码，我自己在实现的时候开始其实是把所有代码都写在一坨的，<strong>建议大家在开发的时候直接一步到位多使用模板和自定义组件的方式来组织代码</strong>，这样会更清晰，可读性也更好。</p><p>在所有的这些模块中，我个人认为<code>限时优惠模块</code>、<code>每周推荐模块</code>和<code>必买爆品模块</code>是稍微复杂一点的，其中最难处理的应该要数<code>限时优惠模块</code>，因为该模块中用到的组件相对较多，而且数据处理的js代码也会更多一些。该项目中所有的代码您都可以在我文末提供的源码中获取，所以这里就不一个劲的贴代码了。我仅仅指出比较复杂或者需要注意的地方。</p><p><strong>复杂UI界面和数据处理：</strong> 限时优惠的进度限时和倒计时处理、 每周推荐模块的UI处理等。</p><p>这里简单贴一下现在项目的文件结构吧。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">bogon:weapp wendingding$ tree -L 5</div><div class="line">.</div><div class="line">├── app.js</div><div class="line">├── app.json</div><div class="line">├── app.wxss</div><div class="line">├── pages</div><div class="line">│   ├── cart</div><div class="line">│   ├── category</div><div class="line">│   ├── home</div><div class="line">│   │   ├── index.js</div><div class="line">│   │   ├── index.json</div><div class="line">│   │   ├── index.wxml</div><div class="line">│   │   └── index.wxss</div><div class="line">│   └── mine</div><div class="line">├── project.config.json</div><div class="line">├── src</div><div class="line">│   ├── img</div><div class="line">│   │   ├── cart.png</div><div class="line">|   |   | ... 省略</div><div class="line">│   │   ├── size.png</div><div class="line">│   │   └── stayPayment.png</div><div class="line">│   └── lib</div><div class="line">│       ├── component</div><div class="line">│       │   ├── iview</div><div class="line">│       │   └── tabview</div><div class="line">│       │       ├── tabview.js</div><div class="line">│       │       ├── tabview.json</div><div class="line">│       │       ├── tabview.wxml</div><div class="line">│       │       └── tabview.wxss</div><div class="line">│       ├── style</div><div class="line">│       │   └── headerView.wxss</div><div class="line">│       └── template</div><div class="line">│           ├── bannerSwiper</div><div class="line">│           │   ├── bannerSwiper.wxml</div><div class="line">│           │   └── bannerSwiper.wxss</div><div class="line">│           ├── hotCategory</div><div class="line">│           │   ├── hotCategory.wxml</div><div class="line">│           │   └── hotCategory.wxss</div><div class="line">│           ├── mustBuy</div><div class="line">│           │   ├── mustBuy.wxml</div><div class="line">│           │   └── mustBuy.wxss</div><div class="line">│           ├── timeLimit</div><div class="line">│           │   ├── timeLimit.wxml</div><div class="line">│           │   └── timeLimit.wxss</div><div class="line">│           └── weekly</div><div class="line">│               ├── weekly.wxml</div><div class="line">│               └── weekly.wxss</div><div class="line">└── utils</div><div class="line">    └── util.js</div></pre></td></tr></table></figure></p><p><a href="https://github.com/flowerField/weapp-yichu" target="_blank" rel="external">点击获取项目源码仓库</a></p><hr><ul><li>Posted by 博客园·<a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a> | <a href="http://wendingding.com" target="_blank" rel="external">花田半亩</a></li><li>联系作者 简书·<a href="http://www.jianshu.com/users/c5703017b9f5/latest_articleshttp://www.jianshu.com/users/c5703017b9f5/latest_articles" target="_blank" rel="external">文顶顶</a> 新浪微博·<a href="http://weibo.com/p/1005053800117445/home?from=page_100505&amp;mod=TAB#place">Coder_文顶顶</a></li><li>原创文章，版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文简单说明衣橱商城首页界面的实现过程，包括对商城首页的结构分析、首页各个区域模块的数据处理以及模块化的抽取等内容。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;1-0-最终实现效果&quot;&gt;&lt;a href=&quot;#1-0-最终实现效果&quot; class
      
    
    </summary>
    
    
      <category term="微信小程序序列" scheme="https://weibo.com/u/3800117445/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%8F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>javaScript系列 [07]-Date日期类型和定时器方法</title>
    <link href="https://weibo.com/u/3800117445/2018/10/22/javaScript%E7%B3%BB%E5%88%97%20%5B07%5D-%E6%97%A5%E6%9C%9F%E7%B1%BB%E5%9E%8B%E5%92%8C%E8%AE%A1%E6%97%B6%E5%99%A8/"/>
    <id>https://weibo.com/u/3800117445/2018/10/22/javaScript系列 [07]-日期类型和计时器/</id>
    <published>2018-10-22T05:41:37.000Z</published>
    <updated>2018-11-11T13:30:01.184Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文介绍JavaScript语言中的<code>Date日期类型</code>，常见的日期格式处理方式以及计时器相关方法(主要包含<code>setInterval</code>以及<code>setTimeOut</code>)。</p></blockquote><p><span style="border:1px solid #000;padding:5px 20px;"><strong>倒计时实现</strong> </span></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=<span class="string">"en"</span>&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</div><div class="line">    &lt;title&gt;Title&lt;<span class="regexp">/title&gt;</span></div><div class="line"><span class="regexp">&lt;/</span>head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;div id=<span class="string">"timeID"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line">&lt;script&gt;</div><div class="line"></div><div class="line">   <span class="keyword">var</span> endTimeStr = <span class="string">"2018/10/30 20:00:00"</span>;</div><div class="line">   <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.querySelector(<span class="string">"#timeID"</span>);</div><div class="line"></div><div class="line">   <span class="function"><span class="keyword">function</span> <span class="title">count</span>(<span class="params"></span>) </span>&#123;</div><div class="line"></div><div class="line">       <span class="comment">//获取当前时间</span></div><div class="line">       <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</div><div class="line">       <span class="comment">//获取截止时间</span></div><div class="line">       <span class="keyword">var</span> end = <span class="keyword">new</span> <span class="built_in">Date</span>(endTimeStr).getTime();</div><div class="line"></div><div class="line">       <span class="comment">//计算时间差</span></div><div class="line">       <span class="keyword">var</span> leftTime = end - now;</div><div class="line"></div><div class="line">       <span class="comment">//定义变量 d,h,m,s保存倒计时的时间</span></div><div class="line">       <span class="keyword">var</span> d, h, m, s, timeResult = <span class="string">"已结束"</span>;</div><div class="line"></div><div class="line">       <span class="keyword">if</span> (leftTime &gt;= <span class="number">0</span>) &#123;</div><div class="line"></div><div class="line">        d = <span class="built_in">Math</span>.floor(leftTime / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>);</div><div class="line">        h = <span class="built_in">Math</span>.floor(leftTime / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> % <span class="number">24</span>);</div><div class="line">        m = <span class="built_in">Math</span>.floor(leftTime / <span class="number">1000</span> / <span class="number">60</span> % <span class="number">60</span>);</div><div class="line">        s = <span class="built_in">Math</span>.floor(leftTime / <span class="number">1000</span> % <span class="number">60</span>);</div><div class="line">        timeResult=<span class="string">"距离结束的时间为："</span> + d + <span class="string">" 天 "</span> + h + <span class="string">" 小时 "</span> + m + <span class="string">" 分钟 "</span> + s + <span class="string">" 秒"</span></div><div class="line">       &#125;</div><div class="line"></div><div class="line">       <span class="comment">//更新页面信息</span></div><div class="line">       oDiv.innerHTML = timeResult;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   setInterval(count,<span class="number">1000</span>);</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div><div class="line"><span class="regexp">&lt;/</span>body&gt;</div><div class="line">&lt;<span class="regexp">/html&gt;</span></div></pre></td></tr></table></figure><p>这里给出实现的效果</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/date_01.gif?raw=true"></p><p><span style="border:1px solid #000;padding:5px 20px;"><strong>数据填充 |  补零处理</strong> </span></p><p>我们在真实的开发场景中可能需要在对一些数据进行处理的时候进行<span style="color:#195">补零操作</span>。什么意思呢，譬如在上面实现倒计时效果的案例中如果我需要得到的倒计时效果是：<code>05天 04小时 27分钟 32秒</code>的格式，那么就需要在最后进行拼接之前再进行额外的格式化处理。</p><p>我们在显示一个数字的时候(<code>比如是5</code>)，那么想要呈现出的结果可以是<code>5</code>也可以是<code>05</code>，这里我们主要探讨后一种情况。这里给出三种具体的实现方案，推荐使用最后一种(更高效也更直接)。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//参数说明：</span></div><div class="line"><span class="comment">//第一个参数:num   要具体处理的数据</span></div><div class="line"><span class="comment">//第二个参数:length  目标数据的长度</span></div><div class="line"></div><div class="line"><span class="comment">// 第一种实现方案</span></div><div class="line"><span class="comment">// function PrefixInteger(num, length) &#123;</span></div><div class="line"><span class="comment">//     return (num/Math.pow(10,length)).toFixed(length).substr(2);</span></div><div class="line"><span class="comment">// &#125;</span></div><div class="line"></div><div class="line"><span class="comment">//第二种实现方案</span></div><div class="line"><span class="comment">// function PrefixInteger(num, length) &#123;</span></div><div class="line"><span class="comment">//     return ( "0000000000000000" + num ).substr( -length );</span></div><div class="line"><span class="comment">// &#125;</span></div><div class="line"></div><div class="line"><span class="comment">//第三种实现方案</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">PrefixInteger</span>(<span class="params">num, length</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> (<span class="built_in">Array</span>(length).join(<span class="string">'0'</span>) + num).slice(-length);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(PrefixInteger(<span class="number">4</span>, <span class="number">2</span>));       <span class="comment">//04</span></div><div class="line"><span class="built_in">console</span>.log(PrefixInteger(<span class="number">41</span>, <span class="number">10</span>));     <span class="comment">//0000000041</span></div></pre></td></tr></table></figure></p><p>如果前面示例程序中倒计时中具体的时间数值需要2位对齐，不够两位的补零，那么就可以考虑在最终拼接之前调用<code>PrefixInteger方法</code>并指定<code>length的值为2</code>来进行格式化操作。这里给出对具体时间进行格式化的调用代码和结果示例。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">d = PrefixInteger(<span class="built_in">Math</span>.floor(leftTime / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>),<span class="number">2</span>);</div><div class="line">h = PrefixInteger(<span class="built_in">Math</span>.floor(leftTime / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> % <span class="number">24</span>),<span class="number">2</span>);</div><div class="line">m = PrefixInteger(<span class="built_in">Math</span>.floor(leftTime / <span class="number">1000</span> / <span class="number">60</span> % <span class="number">60</span>),<span class="number">2</span>);</div><div class="line">s = PrefixInteger(<span class="built_in">Math</span>.floor(leftTime / <span class="number">1000</span> % <span class="number">60</span>),<span class="number">2</span>);</div><div class="line"></div><div class="line">timeResult = <span class="string">"距离结束的时间为："</span> + d + <span class="string">" 天 "</span> + h + <span class="string">" 小时 "</span> + m + <span class="string">" 分钟 "</span> + s + <span class="string">" 秒"</span>;</div><div class="line"></div><div class="line"><span class="comment">//timeResult的结果示例：距离结束的时间为：08 天 04 小时 27 分钟 07 秒</span></div></pre></td></tr></table></figure><hr><ul><li>Posted by 博客园·<a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a> | <a href="http://wendingding.com" target="_blank" rel="external">花田半亩</a></li><li>联系作者 简书·<a href="http://www.jianshu.com/users/c5703017b9f5/latest_articleshttp://www.jianshu.com/users/c5703017b9f5/latest_articles" target="_blank" rel="external">文顶顶</a> 新浪微博·<a href="http://weibo.com/p/1005053800117445/home?from=page_100505&amp;mod=TAB#place">Coder_文顶顶</a></li><li>原创文章，版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文介绍JavaScript语言中的&lt;code&gt;Date日期类型&lt;/code&gt;，常见的日期格式处理方式以及计时器相关方法(主要包含&lt;code&gt;setInterval&lt;/code&gt;以及&lt;code&gt;setTimeOut&lt;/code&gt;)。&lt;/p&gt;
&lt;/b
      
    
    </summary>
    
    
      <category term="javaScript系列" scheme="https://weibo.com/u/3800117445/tags/javaScript%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序实战[02]-衣橱商城云开发数据处理</title>
    <link href="https://weibo.com/u/3800117445/2018/10/19/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98%5B02%5D-%E8%A1%A3%E6%A9%B1%E5%95%86%E5%9F%8E%E4%BA%91%E5%BC%80%E5%8F%91%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    <id>https://weibo.com/u/3800117445/2018/10/19/微信小程序实战[02]-衣橱商城云开发数据处理/</id>
    <published>2018-10-19T10:30:39.000Z</published>
    <updated>2018-11-11T13:30:01.336Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文简单说明衣橱商城小程序开发过程中的服务器端和数据处理方式。</p></blockquote><h3 id="1-0-服务器端和数据处理方式说明"><a href="#1-0-服务器端和数据处理方式说明" class="headerlink" title="1.0 服务器端和数据处理方式说明"></a>1.0 服务器端和数据处理方式说明</h3><p>在做小程序开发的时候，基本都需要进行服务器端和数据的处理。</p><p>目前来看，服务器端的处理可以有两种方式，一种是自己搭建服务器来处理(可以使用<code>Node</code>、<code>Apache</code>等)也可以选择直接使用小程序开发工具中已经集成的<a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/getting-started.html" target="_blank" rel="external">云开发</a>来处理。</p><p>在<a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/getting-started.html" target="_blank" rel="external">小程序.云开发官方文档</a>中有如下描写。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">开发者在开发小程序、小游戏时，无需搭建服务器，即可使用云端能力。</div><div class="line">云开发为开发者提供完整的云端支持，弱化了后端和运维的概念，无需搭建服务器。</div><div class="line">只需要使用平台提供的 API 进行核心业务开发，即可实现快速上线和迭代，同时这与云服务相互兼容。</div></pre></td></tr></table></figure></p><p><strong>云开发提供3种基础能力支持</strong></p><blockquote><p>❏ <strong>云函数</strong> &nbsp;&nbsp;&nbsp;云端运行的代码，微信私有协议天然鉴权，只需编写业务逻辑代码<br>❏ <strong>数据库</strong> &nbsp;&nbsp;&nbsp;支持既能在小程序前端操作，也能在云函数中读写的 JSON 数据库<br>❏ <strong>文件存储</strong> 支持小程序前端直接上传/下载云端文件，在云开发控制台可视化管理</p></blockquote><div class="tip"> 使用云开发功能必须填写 AppID，且云开发能力从基础库 2.2.3 开始支持，需要考虑兼容性问题。APPID可以在登录微信公众平台后的设置 → 开发者设置中获取。</div><h3 id="2-0-开始使用云开发"><a href="#2-0-开始使用云开发" class="headerlink" title="2.0 开始使用云开发"></a>2.0 开始使用云开发</h3><p><strong>001 开通云开发功能</strong></p><p>当<code>使用APPID新建微信小程序项目</code>后，在开发者工具工具栏左侧，点击 “云开发” 按钮即可开通云开发。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx40.png?raw=true"></p><p><strong>002 创建云开发环境</strong></p><p>开通后我们能获得一套云开发环境，各个环境相互隔离，每个环境都包含独立的数据库实例、存储空间、云函数配置等资源。每个环境都有唯一的环境 ID 标识，初始创建的环境自动成为默认环境。</p><p>在创建开发环境的时候需要填写：<code>环境的名称</code>和<code>环境的ID</code>。其中<span style="color:#195">环境的ID 是在使用云服务时需要用到的全局唯一标识符，一经创建便不可修改</span>。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx41.png?raw=true"></p><div class="tip"><strong>注意</strong> 每个小程序帐号可免费创建两个环境，环境的ID可以直接使用系统默认生成的。在实际开发中，建议每一个正式环境都搭配一个测试环境，所有功能先在测试环境测试完毕后再上到正式环境。</div><p><strong>003 云开发控制台说明</strong></p><p>当云开发环境创建好之后，我们将能够看到如下图所示的功能界面。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx42.png?raw=true"></p><p>云开发控制台是管理云开发资源的地方，主要提供以下支持:</p><blockquote><p>❏ <strong>概览</strong>        &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;查看云开发的基础使用数据。<br>❏ <strong>云函数</strong>    &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;查看云函数列表、配置、日志和监控。<br>❏ <strong>数据库</strong>   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;管理数据库，支持对数据进行增删改查、管理索引和数据库访问权限等操作。<br>❏ <strong>统计分析</strong> &nbsp;&nbsp;查看云开发资源具体使用的统计信息，包括<code>API调用图表</code>以及<code>存储容量和CDN浏览</code>等。<br>❏ <strong>存储管理</strong>  &nbsp;&nbsp;管理存储空间，可用于保存图片等资源，支持创建文件夹、批量上传和删除等操作。<br>❏ <strong>用户管理</strong>  &nbsp;&nbsp;查看小程序用户的具体信息，包括<code>头像</code>、<code>昵称</code>、<code>城市</code>、<code>最后一次进入时间</code>等信息。</p></blockquote><h3 id="3-0-数据库和文件存储"><a href="#3-0-数据库和文件存储" class="headerlink" title="3.0 数据库和文件存储"></a>3.0 数据库和文件存储</h3><p><span style="border:1px solid #000;padding:5px 20px;"><strong>数据库说明</strong> </span></p><p>云开发环境为我们提供了一个 <code>JSON 数据库</code>，与典型的关系型数据库所不同的是<span style="color:#195">JSON数据库中的每条记录都是一个 JSON 格式的对象</span>。一个数据库可以有多个集合（相当于关系型数据中的表），集合可看做一个 JSON 数组，数组中的每个对象就是一条记录，记录的格式是 JSON 对象。<strong>[备注]</strong> 关于json相关知识点可以参考<a href="http://wendingding.com/2018/04/16/javaScript%E7%B3%BB%E5%88%97%20[05]-javaScript%E5%92%8CJSON/" target="_blank" rel="external">javaScript和JSON</a>这篇文章。</p><p><strong> ✧ 云开发环境中对数据库的操作</strong></p><p>云开发环境中的数据库对<span style="color:red"><strong>集合</strong></span>(相当于关系型数据库中的表)的操作主要有：<strong>添加集合</strong>、<strong>删除集合</strong>。</p><p>在添加集合的时候需要给集合设置一个名称，对某个特定集合的操作主要有：<code>添加记录</code>、<code>编辑记录</code>、<code>删除记录</code>等操作，每条记录中可以包含多个字段。其中记录就相当于是关系型数据库中的某一行，而字段则相当于是关系型数据库中的某一列。</p><p>在添加记录的时候支持手动创建也支持直接导入<code>json</code>或<code>csv</code>文件，因为小程序中需要使用到的数据通常都会比较大，所以建议在具体处理的时候选择直接导入文件会更方便一些。这里给出手动创建和导入json文件两种具体的操作示例。</p><p><strong><code>001 手动创建</code></strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">(1) 新建集合</div><div class="line">(2) 添加记录</div><div class="line">(3) 添加字段，选择字段类型，设置值</div><div class="line">(4) 确定保存</div></pre></td></tr></table></figure></p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx43.gif?raw=true"></p><p><strong><code>002 直接导入</code></strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">(1) 新建集合</div><div class="line">(2) 提前准备好json文件(动图中已提前准备好demo.json文件)</div><div class="line">(3) 导入文件，选择文件路径(导入)</div><div class="line">(4) 确定保存</div></pre></td></tr></table></figure></p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx44.gif?raw=true"></p><p><strong> ✧ 小程序端对数据库的操作</strong></p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx45.png?raw=true"></p><p>云开发环境中的数据库其主要作用是为前端的小程序应用提供具体的数据。</p><p>这部分主要介绍在具体写小程序代码时，如何连接到对应的数据库并通过代码的方式来对数据库中的数据进行操作。在小程序的js文件中我们可以通过直接调用云开发中数据库相关的API即可对数据库中的数据进行增删改查操作，更多的细节可以参考<a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/guide/database.html" target="_blank" rel="external">官方文档</a>的说明。这里仅简单说明连接和操作数据库的基本流程并给出示例代码。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx46.png?raw=true"></p><p><strong>小程序端操作数据库的基本流程</strong></p><blockquote><p>① <strong>云能力初始化</strong><br>② <strong>获取数据库的引用</strong><br>③ <strong>获取数据库指定集合的引用</strong><br>④ <strong>调用相关API执行CRUD操作</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//001 初始化操作(云能力)</span></div><div class="line">wx.cloud.init();</div><div class="line"></div><div class="line"><span class="comment">//002 连接数据库</span></div><div class="line"><span class="keyword">const</span> db = wx.cloud.database();</div><div class="line"></div><div class="line"><span class="comment">//003 获取数据库中指定的集合并查询获取所有的内容返回</span></div><div class="line">db.collection(<span class="string">"banners"</span>).get(&#123;</div><div class="line"></div><div class="line"><span class="comment">//004 请求成功的回调</span></div><div class="line">success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">//打印查看返回的数据(默认已转换为js数据)</span></div><div class="line">    <span class="built_in">console</span>.log(res);  <span class="comment">//&#123;data:[...],errMsg:"collection.get.ok'"&#125;</span></div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><p><strong>代码说明</strong></p><p>注意用到的<code>wx.cloud.init</code>和<code>wx.cloud.database</code>等方法都是小程序提供的系统API，您可以通过查看<a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/reference-client-api/database/" target="_blank" rel="external">官方API文档</a>来学习这些方法的具体用法。上面的代码中我们首先进行了初始化操作，然后连接上了云开发环境中默认的数据库(<span style="color:#f39">如果存在多套开发环境那么需要通过给函数传递参数的方式来区分</span>)，之后通过<code>collection</code>方法获取默认数据库中<code>banners集合</code>的引用并调用get方法来获取集合中所有的数据。如果调用成功，那么在success回调函数中我们可以通过该回调的参数来获取具体的数据，该数据默认已完成了反序列处理。</p><div class="tip"><br>您在使用上面代码连接和管理数据库中数据的时候，如果操作失败很大可能是因为数据库中对应集合读写权限的问题。<br>在设置集合读写权限的时候，您需要根据具体的场景来处理，调试阶段建议设置为所有用户可读。<br><pre><br><div>数据中每个集合的读写权限有如下情况：</div><br><div>[1] 所有用户可读，仅创建者及管理员可写</div><br><div>[2] 仅创建者及管理员可读写</div><br><div>[3] 所有用户可读，仅管理员可写</div><br><div>[4] 仅管理员可读写</div></pre><br></div><p><strong> ✧ 数据库操作核心API简单说明</strong></p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx47.png?raw=true"></p><p><strong>注意</strong>  数据库API都是懒执行的，也就是说只有真实需要网络请求的 API 调用才会发起网络请求，其余如获 s取数据库、集合、记录的引用、在集合上构造查询条件等都不会触发网络请求。</p><p><strong>这里列出数据库操作中会触发网络请求的 API </strong><br><span class="propWX-green ">remove</span>       删除一个记录数据<br><span class="propWX-green ">update</span>       更新集合/记录数据<br><span class="propWX-green bg-red">set</span>       替换更新一个记录数据<br><span class="propWX-green bg-red">get</span>       获取集合/记录的数据<br><span class="propWX-green ">add</span>       在集合上添加新的记录<br><span class="propWX-green ">count</span>       统计查询语句对应的记录条数</p><p>假设我们在进行小程序开发的过程中，使用了云开发功能并在数据库中拥有名为<code>banners</code>的集合，在该集合中拥有多条记录，其中有一条记录的_id值为<code>W8mGeAIrVDZJFtFt</code>，这里给出一段对数据库中数据操作的示例代码。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//001 初始化操作(云能力)</span></div><div class="line">wx.cloud.init();</div><div class="line"></div><div class="line"><span class="comment">//002 连接数据库</span></div><div class="line"><span class="keyword">const</span> db = wx.cloud.database();</div><div class="line"></div><div class="line"><span class="comment">//演示[01] 查询数据库中指定集合的所有记录数据</span></div><div class="line">db.collection(<span class="string">"banners"</span>).get(&#123;</div><div class="line">  success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"集合数据"</span>,res.data);</div><div class="line">  &#125;</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">//演示[02] 查询数据库中指定集合的特定记录的数据</span></div><div class="line">db.collection(<span class="string">"banners"</span>).doc(<span class="string">"W8mGeAIrVDZJFtFt"</span>).get(&#123;</div><div class="line">  success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"集合中某条记录的数据"</span>,res.data);</div><div class="line">  &#125;</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">//演示[03] 查询数据库中指定集合的特定记录的数据并限定返回字段</span></div><div class="line">db.collection(<span class="string">"banners"</span>)</div><div class="line">  .doc(<span class="string">"W8mGeAIrVDZJFtFt"</span>)</div><div class="line">  .field(&#123;</div><div class="line">      id:<span class="literal">true</span></div><div class="line">  &#125;).get(&#123;</div><div class="line">  success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"限定字段"</span>, res.data);</div><div class="line">  &#125;</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">//演示[04] 使用Promise风格的方式调用</span></div><div class="line">db.collection(<span class="string">'banners'</span>).doc(<span class="string">'W8mGeAIrVDZJFtFt'</span>).get().then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">"Promise风格"</span>,res.data)</div><div class="line">&#125;)</div></pre></td></tr></table></figure><p>给出上面js代码的执行结果<br><img src="https://github.com/flowerField/Source/blob/master/Blog/wx48.png?raw=true"></p><div class="tip">说明：调用api的时候可以选择使用回调函数或Promise风格的方式。</div><p><span style="border:1px solid #000;padding:5px 20px;"><strong>文件存储说明</strong> </span></p><p>小程序的云开发环境<span style="color:#195">支持小程序前端对云端文件直接进行上传和下载的操作，且可以在云开发控制台对文件进行可视化的管理，支持对文件进行访问权限的控制</span>，使用简单而且非常的方便。</p><p>我们可以把项目中需要用到的图片等资源通过云开发控制台直接上传并保存到<strong><code>存储管理模块</code></strong>中，然后在项目中需要用到的地方(或者数据库的对应字段中)直接以URL路径的方式进行引用即可。</p><p>此外，存储管理模块还提供了小程序客户端以及后端对文件进行上传、下载、删除等操作的两组API，直接调用即可。这里简单列出小程序客户端中相关的API操作，更多细节请参考<a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/reference-client-api/storage/" target="_blank" rel="external">官方文档</a>。</p><blockquote><p>❏ 上传文件  <code>uploadFile()</code><br>❏ 下载文件  <code>downloadFile()</code><br>❏ 删除文件  <code>deleteFile()</code><br>❏ 临时换链  <code>getTempFileURL()</code></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//001 文件上传</span></div><div class="line"><span class="comment">//参数说明:</span></div><div class="line"><span class="comment">//success成功回调</span></div><div class="line"><span class="comment">//fail        失败回调</span></div><div class="line"><span class="comment">//complete结束回调</span></div><div class="line"><span class="comment">//cloudPath云存储路径String类型</span></div><div class="line"><span class="comment">//filePath要上传文件资源的路径String类型</span></div><div class="line"><span class="comment">//headerHTTP 请求 Header, header 中不能设置 RefererObject类型</span></div><div class="line">wx.cloud.uploadFile(&#123;</div><div class="line">  cloudPath: <span class="string">'/wendingding.png'</span>,</div><div class="line">  filePath: <span class="string">''</span>, <span class="comment">// 小程序临时文件路径</span></div><div class="line">  success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</div><div class="line">    <span class="comment">// get resource ID</span></div><div class="line">    <span class="built_in">console</span>.log(res.fileID)</div><div class="line">  &#125;,</div><div class="line">  fail: <span class="function"><span class="params">err</span> =&gt;</span> &#123;</div><div class="line">    <span class="comment">// handle error</span></div><div class="line">  &#125;</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">//002 文件下载</span></div><div class="line"><span class="comment">//参数说明:</span></div><div class="line"><span class="comment">//fileID云文件 IDString类型</span></div><div class="line"><span class="comment">//success成功回调</span></div><div class="line"><span class="comment">//   tempFilePath临时文件路径    String类型</span></div><div class="line"><span class="comment">//   statusCode    返回的HTTP状态码Number类型</span></div><div class="line">wx.cloud.downloadFile(&#123;</div><div class="line">  fileID: <span class="string">'a7xzcb'</span>,</div><div class="line">  success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</div><div class="line">    <span class="comment">// get temp file path</span></div><div class="line">    <span class="built_in">console</span>.log(res.tempFilePath)</div><div class="line">  &#125;,</div><div class="line">  fail: <span class="function"><span class="params">err</span> =&gt;</span> &#123;</div><div class="line">    <span class="comment">// handle error</span></div><div class="line">  &#125;</div><div class="line">&#125;)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//003 文件删除</span></div><div class="line"><span class="comment">//参数说明:</span></div><div class="line"><span class="comment">//fileList云文件ID字符串数组</span></div><div class="line">wx.cloud.deleteFile(&#123;</div><div class="line">  fileList: [<span class="string">'a7xzcb'</span>],</div><div class="line">  success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</div><div class="line">    <span class="comment">// handle success</span></div><div class="line">    <span class="built_in">console</span>.log(res.fileList)</div><div class="line">  &#125;,</div><div class="line">  fail: <span class="function"><span class="params">err</span> =&gt;</span> &#123;</div><div class="line">    <span class="comment">// handle error</span></div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><div class="tip">说明：文件操作api的调用同样支持回调函数和Promise两种风格。</div><h3 id="4-0-衣橱商城中部分数据的处理"><a href="#4-0-衣橱商城中部分数据的处理" class="headerlink" title="4.0 衣橱商城中部分数据的处理"></a>4.0 衣橱商城中部分数据的处理</h3><p>前面的篇幅一直在介绍小程序中云开发平台相关的知识点，接下来我们回到衣橱商城这个实际的项目中，该小程序中的所有数据我都暂时直接使用云开发环境来处理。在项目中实际进行处理的时候，主要分成三部分内容。</p><p><strong>001 把项目中需要用到的图片等资源上传并保存到云开发环境的存储管理模块</strong>。支持批量上传，而可以自己创建|设置文件的具体路径，图片上传后点击详情能获取URL地址。</p><p><strong>002 根据项目的情况在云开发环境数据库中创建多个对应的数据集合并添加详细的信息(记录)</strong>。首页模块中需要的数据集合为：<code>banners</code>(顶部轮播图)、<code>hotList</code>(热门分类数据)、<code>timeLimitList</code>(限时优惠数据)、<code>topList</code>(热门商品数据)、<code>weeklyData</code>(每周推荐数据)。</p><p><strong>003 在小程序客户端通过调用对应的api来对数据库的数据进行操作</strong>。这里主要是在首页的javaScript文件(<code>home.js</code>)文件中调用api用来获取数据。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx49.gif?raw=true"></p><hr><ul><li>Posted by 博客园·<a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a> | <a href="http://wendingding.com" target="_blank" rel="external">花田半亩</a></li><li>联系作者 简书·<a href="http://www.jianshu.com/users/c5703017b9f5/latest_articleshttp://www.jianshu.com/users/c5703017b9f5/latest_articles" target="_blank" rel="external">文顶顶</a> 新浪微博·<a href="http://weibo.com/p/1005053800117445/home?from=page_100505&amp;mod=TAB#place">Coder_文顶顶</a></li><li>原创文章，版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文简单说明衣橱商城小程序开发过程中的服务器端和数据处理方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;1-0-服务器端和数据处理方式说明&quot;&gt;&lt;a href=&quot;#1-0-服务器端和数据处理方式说明&quot; class=&quot;headerlink&quot;
      
    
    </summary>
    
    
      <category term="微信小程序序列" scheme="https://weibo.com/u/3800117445/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%8F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序实战[01]-衣橱商城结构和我的页面</title>
    <link href="https://weibo.com/u/3800117445/2018/10/18/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98%5B01%5D-%E8%A1%A3%E6%A9%B1%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE%E6%95%B4%E4%BD%93%E7%BB%93%E6%9E%84/"/>
    <id>https://weibo.com/u/3800117445/2018/10/18/微信小程序实战[01]-衣橱商城项目整体结构/</id>
    <published>2018-10-18T10:30:39.000Z</published>
    <updated>2018-11-11T13:30:01.381Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>因为需要完整的综合项目来贯穿小程序开发中的基础知识，所以我在自己使用的小程序清单中选择了一款优秀小程序(<code>MatchU码尚</code>)来进行实现和学习，项目中用到的数据和图片等资源有部分来源于此，该项目<code>仅做技术演示和个人学习使用</code>。本文先对该综合项目、开发小程序项目前期的准备工作进行说明，然后从零开始构建<code>&quot;衣橱定制商城小程序&quot;</code>，并完成tabbar栏和我的页面视图搭建。</p></blockquote><p><strong>说明</strong> 这是篇说明性博文，不会过多涉及项目的具体代码，该系列文章的源码您可以<a href="https://github.com/flowerField/weapp-yichu" target="_blank" rel="external">点击此处下载</a>。</p><p><strong>1.0 开发前准备</strong></p><p>[1] <a href="https://mp.weixin.qq.com/" target="_blank" rel="external">官网注册微信小程序开发者账号</a>。<br>[2] <a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html" target="_blank" rel="external">官网注册并完善小程序基本信息后，下载微信开发者工具并安装</a>。<br>[3] <a href="">在电脑合适的位置新建空的项目目录，在设置-开发设置中获取APPID初始化项目</a>。</p><p><strong>2.0 项目的功能模块</strong></p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx35.png?raw=true"></p><p><strong>3.0 项目的初始化</strong></p><p>在使用微信开发者工具选择项目目录，输入appID（也可以使用测试的appID）后勾选<code>建立普通快速模板</code>，那么我们将得到一个最简单的项目，该项目的整体结构如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── app.js</div><div class="line">├── app.json</div><div class="line">├── app.wxss</div><div class="line">├── pages</div><div class="line">│   ├── index</div><div class="line">│   │   ├── index.js</div><div class="line">│   │   ├── index.wxml</div><div class="line">│   │   └── index.wxss</div><div class="line">│   └── logs</div><div class="line">│       ├── logs.js</div><div class="line">│       ├── logs.json</div><div class="line">│       ├── logs.wxml</div><div class="line">│       └── logs.wxss</div><div class="line">├── project.config.json</div><div class="line">└── utils</div><div class="line">    └── util.js</div></pre></td></tr></table></figure><p>对默认的项目结构进行调整。具体调整内容为:</p><pre><code>001 删除默认的两个页面 index 和 logs文件夹。 002 在pages文件夹中新建home、cart、mine和category文件夹并创建对应的pages页面(命名为index)。 003 在项目根目录下面新建src目录，该目录用于存放项目中需要用到的资源，并调整app.json文件的配置项。 004 在src目录下新建img目录用于存储项目中需要用到的图片资源，新建lib目录用于存放需要用到的第三方库和组件。</code></pre><p>调整后的项目文件结构如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── app.js</div><div class="line">├── app.json</div><div class="line">├── app.wxss</div><div class="line">├── pages</div><div class="line">│   ├── cart</div><div class="line">│   │   ├── index.js</div><div class="line">│   │   ├── index.json</div><div class="line">│   │   ├── index.wxml</div><div class="line">│   │   └── index.wxss</div><div class="line">│   ├── category</div><div class="line">│   │   ├── index.js</div><div class="line">│   │   ├── index.json</div><div class="line">│   │   ├── index.wxml</div><div class="line">│   │   └── index.wxss</div><div class="line">│   ├── home</div><div class="line">│   │   ├── index.js</div><div class="line">│   │   ├── index.json</div><div class="line">│   │   ├── index.wxml</div><div class="line">│   │   └── index.wxss</div><div class="line">│   └── mine</div><div class="line">│       ├── index.js</div><div class="line">│       ├── index.json</div><div class="line">│       ├── index.wxml</div><div class="line">│       └── index.wxss</div><div class="line">├── project.config.json</div><div class="line">├── src</div><div class="line">│   ├── img</div><div class="line">│   └── lib</div><div class="line">└── utils</div><div class="line">    └── util.js</div><div class="line"></div><div class="line">9 directories, 31 files</div></pre></td></tr></table></figure></p><p><strong>4.0 项目tabbar实现</strong></p><p>[1] 准备好项目tabbar部分需要的图标，存放到src/img目录下，这些图标可以在<a href="http://iconfont.cn/collections/detail?cid=918" target="_blank" rel="external">iconfont</a>网站获取。</p><p>[2] <code>对app.json</code>文件的字段进行配置，主要设置项目的导航背景、标题文字以及设置tabBar选项信息。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">//app.json文件中的部分配置项</div><div class="line">&#123;</div><div class="line">  <span class="attr">"pages"</span>: [</div><div class="line">    <span class="string">"pages/home/index"</span>,</div><div class="line">     ...省略</div><div class="line">  ],</div><div class="line">  <span class="attr">"window"</span>: &#123;</div><div class="line">    <span class="attr">"backgroundTextStyle"</span>: <span class="string">"light"</span>,</div><div class="line">    <span class="attr">"navigationBarBackgroundColor"</span>: <span class="string">"#110e1e"</span>,</div><div class="line">    <span class="attr">"navigationBarTitleText"</span>: <span class="string">"衣橱商城"</span>,</div><div class="line">    <span class="attr">"navigationBarTextStyle"</span>: <span class="string">"white"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"tabBar"</span>: &#123;</div><div class="line">    <span class="attr">"selectedColor"</span>: <span class="string">"#000000"</span>,</div><div class="line">    <span class="attr">"list"</span>: [</div><div class="line">      &#123;</div><div class="line">        <span class="attr">"pagePath"</span>: <span class="string">"pages/home/index"</span>,</div><div class="line">        <span class="attr">"text"</span>: <span class="string">"首页"</span>,</div><div class="line">        <span class="attr">"iconPath"</span>: <span class="string">"src/img/home.png"</span>,</div><div class="line">        <span class="attr">"selectedIconPath"</span>: <span class="string">"src/img/homeSelected.png"</span></div><div class="line">      &#125;</div><div class="line">      ....省略</div><div class="line">    ]</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx36.gif?raw=true"></p><p><strong>5.0 我的页面视图实现</strong></p><p>在项目的整体结构和tabbar选项卡配置好之后，先尝试实现<code>我的</code>页面视图。</p><p>先给出<code>我的</code>页面的整体界面实现效果。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx37.gif?raw=true"></p><p>因为该页面的布局相对来说比较简单，而且要处理的数据也相对较少，这里在页面中需要用到数据的地方我们先暂时使用假数据来代替，稍微后面一点的时候再进行具体的优化。通过观察上面的实现效果，我们可以把<code>我的</code>页面分解成几个组成部分，每个部分则采用不同的策略来进行实现。</p><blockquote><p>❏  <span style="color:#195"><strong>头部视图</strong></span><br>    采用小程序中的基础组件<code>text</code>、<code>image</code>、<code>view</code>等并设置样式来实现。</p><p>❏  <span style="color:#195"><strong>cell视图(多组)</strong></span><br>    采用第三方组件库来实现，这里使用到的是iview中的<code>cell</code>和<code>panel</code>以及<code>cell-group</code>组件。<br>    <strong>[步骤]</strong> 把第三方库下载并导入到项目中(<code>src/lib/iview</code>) → 在json文件中配置<code>usingComponents</code> → 在wxml中使用组件并设置属性。</p><p>❏  <span style="color:#195"><strong>待付款、已付款区域视图</strong></span><br>    因为该视图在首页中也有用到，所以这里考虑把这一块的视图封装成自定义组件来处理。<br>    <strong>[步骤]</strong> 自定义组件(<code>src/lib/tabview</code>) →  在json文件中配置 -&gt; 在wxml中使用自定义组件。</p></blockquote><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx39.png?raw=true"></p><p><strong><code>附录01: tabview自定义组件内部实现细节</code></strong><br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">001 自定义组件的基本操作</div><div class="line">    (1) 在项目的src/lib目录下新建tabview文件夹。</div><div class="line">    (2) 在<span class="selector-tag">tabview</span>目录下新建<span class="selector-tag">component</span>文件并命名为<span class="selector-tag">tabview</span>。</div><div class="line">    (3) 新建<span class="selector-tag">component</span>的时候会默认生成<span class="selector-tag">js</span>\<span class="selector-tag">wxml</span>\<span class="selector-tag">json</span>\<span class="selector-tag">wxss</span>四个文件，其中<span class="selector-tag">json</span>文件中已配置<span class="selector-tag">component</span>为<span class="selector-tag">true</span>.</div><div class="line">    (4) 在<span class="selector-tag">wxml</span>文件中编辑内容。</div><div class="line">    (5) 在<span class="selector-tag">wxss</span>文件中设置样式。</div><div class="line">    (6) 在<span class="selector-tag">js</span>文件中设置初始数据和事件方法。</div><div class="line"></div><div class="line"></div><div class="line">002 <span class="selector-tag">wxml</span>文件中的内容</div><div class="line">&lt;view class='content-view'&gt;</div><div class="line">    &lt;view class='content-view-cell' wx:for='&#123;&#123;itemArray&#125;&#125;'&gt;</div><div class="line">      &lt;image class='content-view-cell-img' src='&#123;&#123;item.srcImg&#125;&#125;'&gt;&lt;/image&gt;</div><div class="line">      &lt;text  class='content-view-cell-des'&gt;&#123;&#123;item.des&#125;&#125;&lt;/text&gt;</div><div class="line">    &lt;/view&gt;</div><div class="line">&lt;/view&gt;</div><div class="line"></div><div class="line">003 <span class="selector-tag">wxss</span>文件中的内容</div><div class="line"><span class="selector-class">.content-view</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">  <span class="attribute">height</span>: <span class="number">150</span>rpx;</div><div class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</div><div class="line">  <span class="attribute">margin-top</span>: <span class="number">40</span>rpx;</div><div class="line">  <span class="attribute">display</span>: flex;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.content-view-cell</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">height</span>: <span class="number">150</span>rpx;</div><div class="line">  <span class="attribute">line-height</span>: <span class="number">150</span>rpx;</div><div class="line">  <span class="attribute">flex-grow</span>: <span class="number">1</span>;</div><div class="line">  <span class="attribute">position</span>: relative;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.content-view-cell-img</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">width</span>: <span class="number">70</span>rpx;</div><div class="line">  <span class="attribute">height</span>: <span class="number">70</span>rpx;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">  <span class="attribute">left</span>: <span class="number">30</span>rpx;</div><div class="line">  <span class="attribute">top</span>: <span class="number">40</span>rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.content-view-cell-des</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">  <span class="attribute">left</span>: <span class="number">120</span>rpx;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">30</span>rpx;</div><div class="line">  <span class="attribute">line-height</span>: <span class="number">150</span>rpx;</div><div class="line">  <span class="attribute">height</span>: <span class="number">150</span>rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line">004 <span class="selector-tag">js</span>文件中内容</div><div class="line"><span class="selector-tag">Component</span>(&#123;</div><div class="line">  //设置自定义组件的属性列表</div><div class="line">  <span class="selector-tag">properties</span>: &#123;</div><div class="line">    <span class="attribute">itemArray</span>:&#123;</div><div class="line">      type:Array</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p><p><strong><code>附录02: mine页面wxml文件内容</code></strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">&lt;!-- 001 头部视图区域 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'mine-info'</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'mine-info-left'</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">'mine-info-left-name'</span>&gt;</span>&#123;&#123; userName &#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">image</span>  <span class="attr">class</span>=<span class="string">'mine-info-left-edit'</span> <span class="attr">src</span>=<span class="string">'../../src/img/edit.png'</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">'mine-info-left-des'</span>&gt;</span>衣橱，定制您成功的起点。<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'mine-info-right'</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">'&#123;&#123; userPic &#125;&#125;'</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 002 cell视图处理[第一组] --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">i-panel</span> <span class="attr">title</span>=<span class="string">" "</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">i-cell</span> <span class="attr">value</span>=<span class="string">'全部订单'</span> <span class="attr">title</span>=<span class="string">"我的订单"</span> <span class="attr">is-link</span> &gt;</span><span class="tag">&lt;/<span class="name">i-cell</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">i-panel</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 003 自定义组件处理 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">i-tabview</span> <span class="attr">itemArray</span>=<span class="string">'&#123;&#123;itemArray&#125;&#125;'</span>&gt;</span><span class="tag">&lt;/<span class="name">i-tabview</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 004 cell视图处理[第二组] --&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">i-panel</span> <span class="attr">title</span>=<span class="string">" "</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">i-cell-group</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">i-cell</span>  <span class="attr">title</span>=<span class="string">"心意卡"</span> <span class="attr">is-link</span> &gt;</span><span class="tag">&lt;/<span class="name">i-cell</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">i-cell</span>  <span class="attr">title</span>=<span class="string">"优惠券"</span> <span class="attr">is-link</span> &gt;</span><span class="tag">&lt;/<span class="name">i-cell</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">i-cell-group</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">i-panel</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 005 cell视图处理[都三组] --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">i-panel</span> <span class="attr">title</span>=<span class="string">" "</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">i-cell-group</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">i-cell</span>  <span class="attr">title</span>=<span class="string">"我的地址"</span> <span class="attr">is-link</span> &gt;</span><span class="tag">&lt;/<span class="name">i-cell</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">i-cell</span>  <span class="attr">title</span>=<span class="string">"我的尺寸"</span> <span class="attr">is-link</span> &gt;</span><span class="tag">&lt;/<span class="name">i-cell</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">i-cell</span>  <span class="attr">title</span>=<span class="string">"关于我们"</span> <span class="attr">is-link</span> &gt;</span><span class="tag">&lt;/<span class="name">i-cell</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">i-cell-group</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">i-panel</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 006 退出功能模块 --&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'mine-logout'</span>&gt;</span>退出<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div></pre></td></tr></table></figure></p><hr><ul><li>Posted by 博客园·<a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a> | <a href="http://wendingding.com" target="_blank" rel="external">花田半亩</a></li><li>联系作者 简书·<a href="http://www.jianshu.com/users/c5703017b9f5/latest_articleshttp://www.jianshu.com/users/c5703017b9f5/latest_articles" target="_blank" rel="external">文顶顶</a> 新浪微博·<a href="http://weibo.com/p/1005053800117445/home?from=page_100505&amp;mod=TAB#place">Coder_文顶顶</a></li><li>原创文章，版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;因为需要完整的综合项目来贯穿小程序开发中的基础知识，所以我在自己使用的小程序清单中选择了一款优秀小程序(&lt;code&gt;MatchU码尚&lt;/code&gt;)来进行实现和学习，项目中用到的数据和图片等资源有部分来源于此，该项目&lt;code&gt;仅做技术演示和个人学
      
    
    </summary>
    
    
      <category term="微信小程序序列" scheme="https://weibo.com/u/3800117445/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%8F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>网络编程系列 术语</title>
    <link href="https://weibo.com/u/3800117445/2018/10/16/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E7%B3%BB%E5%88%97-%E5%9F%BA%E6%9C%AC%E6%9C%AF%E8%AF%AD/"/>
    <id>https://weibo.com/u/3800117445/2018/10/16/网络编程系列-基本术语/</id>
    <published>2018-10-16T01:31:25.000Z</published>
    <updated>2018-11-11T13:30:01.390Z</updated>
    
    <content type="html"><![CDATA[<p><span class="item-class">Web</span> <code>World Wide Web</code>，万维网(<code>www</code>)。</p><p><span class="item-class">W3C</span> <code>World Wide Web Consortium</code>，万维网联盟。</p><p><span class="item-class">DOM</span> <code>Document Object Model</code>，文档对象模型。</p><p><span class="item-class">BOM</span> <code>Browser Object Model</code>，浏览器对象模型。</p><p><span class="item-class">js</span> <code>javaScript</code>，我们常说的 js 文件其实指的是JavaScript文件。</p><p><span class="item-class">HTML</span> <code>HyperText Markup Language</code>，超文本标记语言(Web技术的核心)。</p><p><span class="item-class">XML</span> <code>Extensible Markup Language</code>，可扩展标记语言(一种标准的数据格式)。</p><p><span class="item-class">CSS</span> <code>Cascading Style Sheets</code>，层叠样式表(用于给HTML或XML设置样式和布局的语言)。</p><p><span class="item-class">Api</span> <code>Application Programming Interface</code>，应用程序编程接口（一堆有用函数的名称）。</p><p><span class="item-class">HTTP</span> <code>HyperText Transfer Protocol</code>，超文本传协议(互联网中应用最广泛的的协议之一)。</p><p><span class="item-class">SSL</span> <code>Secure Sockets Layer</code>，安全套接层协议(对网络连接进行加密处理)。</p><p><span class="item-class">TLS</span> <code>Transport Layer Security</code>，安全传输层协议(同SSL，由记录协议和握手协议组成)。</p><p><span class="item-class">HTTPS</span> <code>HyperText Transfer Protocol over Secure Socket Layer</code>，<span style="color:#195"><strong>HTTPS = HTTP + SSL</strong></span>。</p><p><span class="item-class">URN</span> <code>Uniform Resource Name</code>，统一资源名称(唯一标识实体但无位置信息)。</p><p><span class="item-class">URL</span> <code>Uniform Resource Locator</code>，统一资源定位符(互联网资源的身份证，唯一标识)。</p><p><span class="item-class">URI</span> <code>Uniform Resource Identifier</code>，统一资源标识符(标识网络资源)，<span style="color:#195"><strong>URI = URN + URL</strong></span>。</p><p><span class="item-class">WXSS</span> <code>WeiXin Style sheets</code>，微信小程序中基于CSS扩展的样式语言。</p><p><span class="item-class">WXML</span> <code>WeiXin Markup Language</code>，微信小程序中专用的标记语言(类似HTML)。</p><p><span class="item-class">JSON</span> <code>JavaScript Object Notation</code>，JavaScript对象表示法，用于表示和传输数据。</p><p><span class="item-class">Ajax</span> <code>Asynchronous Javascript And XML</code>，异步JavaScript和XML用于异步请求和局部刷新。</p><p><span class="item-class">npm</span> <code>Node Package Manager</code>，基于Node.js的包管理和分发工具。</p><p><span class="item-class">LAMP</span> <code>Linux Apache MySQL 和 PHP/Python/Perl</code>，用于搭建Web服务器的开源软件。</p><p><span class="item-class">MAMP</span> <code>Mac Apache MySQL 和 PHP Server</code>，Mac中构建网站和搭建Web服务器的开源软件。</p><p><span class="item-class">WAMP</span> <code>Windows Apache MySQL 和 PHP Server</code>，用于构建网站和搭建Web服务器的开源软件。</p><p><span class="item-class">SPA</span> <code>Single Page Application</code>，单页应用程序，主要特点是轻量级请求和局部更新。</p><p><span class="item-class">ORM</span> <code>Object Relational Mapping</code>，对象关系映射(数据转换)。</p><p><span class="item-class">MEAN</span> <code>MongoDB Express Angular Node</code>，前端开发中常用的技术栈。</p><p><span class="item-class">MERN</span> <code>MongoDB Express React Node</code>，常用的技术栈，React为Facebook推出的前端框架。</p><p><span class="item-class">CRUD</span> <code>Create Read Update Delete</code>，对数据库的常规操作(<span style="color:#195">创建|添加、读取、更新和删除</span>)。</p><p><span class="item-class">BFC</span> <code>Block Formatting Context</code>，块级格式化上下文。</p><p><span class="item-class">OO</span> <code>Object Oriented</code>，面向对象。</p><p><span class="item-class">OOD</span> <code>Object Oriented Design</code>，面向对象设计。</p><p><span class="item-class">OOP</span> <code>Object Oriented Programming</code>，面向对象编程。</p><p><span class="item-class">OOA</span> <code>Object Oriented Analysis</code>，面向对象分析方法。</p><p><span class="item-class">UML</span> <code>Unified Modeling Language</code>，统一(标准)建模语言。</p><p><span class="item-class">NoSQL</span> <code>Not only SQL</code>，非关系型数据库，譬如<code>redis</code>，<code>memcache</code>，<code>MongoDb</code>等。</p><p><span class="item-class">REPL</span> <code>Request-Eval-Print-Loop</code>，读取-求值-输出-循环结构(Node解释器)。</p><p><span class="item-class">TDD</span> <code>Test-Driven Development</code>，测试驱动开发(用单元测试来驱动开发的一种策略)。</p><p><span class="item-class">BDD</span> <code>Behavior-Driven Development</code>，行为驱动开发(用验收标准来驱动开发的一种策略)。</p><p><span class="item-class">Mustache</span> 经典(重要 | 基础)的前端模板引擎，也指模板使用的那种无逻辑的模板语法。</p><p><span class="item-class">Handlebars</span> 经典(重要 | 基础)的前端模板引擎，同Mustache类似。</p><p><span class="item-class">JSON Schema</span> 表示对JSON文档的内容、结构和格式的声明，用于对JSON文档进行严格校验(语义)。</p><p><span class="item-class">MongoDB</span> MongoDB是一种NoSQL数据库，允许开发人员以文档(JSON)的形式存储数据。</p><p><span class="item-class">BSON</span> <code>Binary JSON</code> 二进制的JSON数据，用于序列化JSON文档的一种二进制数据格式。</p><hr><ul><li>Posted by 博客园·<a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a> | <a href="http://wendingding.com" target="_blank" rel="external">花田半亩</a></li><li>联系作者 简书·<a href="http://www.jianshu.com/users/c5703017b9f5/latest_articleshttp://www.jianshu.com/users/c5703017b9f5/latest_articles" target="_blank" rel="external">文顶顶</a> 新浪微博·<a href="http://weibo.com/p/1005053800117445/home?from=page_100505&amp;mod=TAB#place">Coder_文顶顶</a></li><li>原创文章，版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;span class=&quot;item-class&quot;&gt;Web&lt;/span&gt; &lt;code&gt;World Wide Web&lt;/code&gt;，万维网(&lt;code&gt;www&lt;/code&gt;)。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;item-class&quot;&gt;W3C&lt;/span&gt; &lt;code&gt;W
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>微信小程序基础[13]-小程序中的基础组件(五)</title>
    <link href="https://weibo.com/u/3800117445/2018/10/14/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%8F%E5%88%97%5B13%5D-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6(%E4%BA%94)/"/>
    <id>https://weibo.com/u/3800117445/2018/10/14/微信小程序序列[13]-小程序中的基础组件(五)/</id>
    <published>2018-10-14T10:36:08.000Z</published>
    <updated>2018-11-11T13:30:01.403Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文介绍小程序中的基础组件，主要包括picker滚动选择器、checkbox多项选择器和progress进度条等组件的基本使用和综合示例。</p></blockquote><h4 id="1-0-progress组件"><a href="#1-0-progress组件" class="headerlink" title="1.0 progress组件"></a>1.0 progress组件</h4><p><a href="https://developers.weixin.qq.com/miniprogram/dev/component/progress.html" target="_blank" rel="external">progress组件</a>就是进度条。</p><p><strong>这里列出progress组件的主要属性</strong></p><p><span class="propWX-green ">color</span>     进度条的颜色(activeColor)。<br><span class="propWX-green ">activeColor</span>     已执行的进度条的颜色。<br><span class="propWX-green ">backgroundColor</span>     尚未执行的进度条的颜色。<br><span class="propWX-green bg-red">percent</span>     百分比的数值，取值范围是0~100。<br><span class="propWX-green ">show-info</span>     在进度条的右侧是否显示百分比，布尔类型，默认值为false。<br><span class="propWX-green ">stroke-width</span>     进度条线的宽度，数值类型，默认值为6，单位是px。<br><span class="propWX-green ">active</span>     是否设置进度条从左到右的动画，布尔类型，默认值为false。<br><span class="propWX-green ">active-mode</span>     设置动画执行的方式，<code>backwards</code>表示 从头播放；<code>forwards</code>表示从上次结束点接着播放。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">&lt;!-- 默认的progress样式 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">progress</span>&gt;</span><span class="tag">&lt;/<span class="name">progress</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- percent：进度值 --&gt;</span></div><div class="line"><span class="comment">&lt;!-- color|activeColor：已完成部分的进度颜色 --&gt;</span></div><div class="line"><span class="comment">&lt;!-- backgroundColor：  未完成部分的进度颜色--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">progress</span> <span class="attr">color</span>=<span class="string">'pink'</span> <span class="attr">percent</span>=<span class="string">'30'</span>&gt;</span><span class="tag">&lt;/<span class="name">progress</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">progress</span> <span class="attr">activeColor</span>=<span class="string">'#802314'</span> <span class="attr">percent</span>=<span class="string">'30'</span>&gt;</span><span class="tag">&lt;/<span class="name">progress</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">progress</span> <span class="attr">color</span>=<span class="string">'#195'</span> <span class="attr">percent</span>=<span class="string">'50'</span>&gt;</span><span class="tag">&lt;/<span class="name">progress</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">progress</span> <span class="attr">color</span>=<span class="string">'#195'</span> <span class="attr">percent</span>=<span class="string">'50'</span> <span class="attr">backgroundColor</span>=<span class="string">'#004'</span>&gt;</span><span class="tag">&lt;/<span class="name">progress</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- show-info：在进度条的右侧显示百分比 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">progress</span> <span class="attr">color</span>=<span class="string">'#195'</span> <span class="attr">percent</span>=<span class="string">'70'</span> <span class="attr">backgroundColor</span>=<span class="string">'#004'</span> <span class="attr">show-info</span>&gt;</span><span class="tag">&lt;/<span class="name">progress</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- stroke-width:设置进度条的宽度 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">progress</span> <span class="attr">color</span>=<span class="string">'#3504a5'</span> <span class="attr">percent</span>=<span class="string">'70'</span>  <span class="attr">show-info</span>  <span class="attr">stroke-width</span>=<span class="string">'20'</span> &gt;</span><span class="tag">&lt;/<span class="name">progress</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- active：是否开启动画效果 --&gt;</span></div><div class="line"><span class="comment">&lt;!-- active-mode：动画模式，可选值有[backwards][forwards]--&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">progress</span> <span class="attr">active</span> <span class="attr">color</span>=<span class="string">'#195'</span> <span class="attr">percent</span>=<span class="string">'70'</span> <span class="attr">show-info</span>  <span class="attr">stroke-width</span>=<span class="string">'20'</span> &gt;</span><span class="tag">&lt;/<span class="name">progress</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">progress</span>  <span class="attr">active</span> <span class="attr">active-mode</span>=<span class="string">'forwards'</span> <span class="attr">color</span>=<span class="string">'#195'</span> <span class="attr">percent</span>=<span class="string">'90'</span> <span class="attr">show-info</span>  <span class="attr">stroke-width</span>=<span class="string">'20'</span> &gt;</span><span class="tag">&lt;/<span class="name">progress</span>&gt;</span></div></pre></td></tr></table></figure><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx28.png?raw=true"></p><h4 id="2-0-多项选择器组件-checkbox-group-和-checkbox"><a href="#2-0-多项选择器组件-checkbox-group-和-checkbox" class="headerlink" title="2.0 多项选择器组件( checkbox-group 和 checkbox )"></a>2.0 多项选择器组件( checkbox-group 和 checkbox )</h4><p><a href="https://developers.weixin.qq.com/miniprogram/dev/component/checkbox.html" target="_blank" rel="external">多项选择器组件</a>由<code>checkbox-group</code>和<code>checkbox</code>两个具体的组件构成，其中<code>checkbox组件</code>表示的是每一个的多选项目，而<code>checkbox-group</code>用来包裹住多个多选项目。通过观察和对比，我们可以发现多项选择器和单项选择器的结构和用法基本是一致的。</p><p><span style="border:1px solid #000;padding:0 10px;background:#F0FFFF"><strong>checkbox组件</strong></span><br><span class="propWX-green bg-red">value</span>     当前选项的值。<br><span class="propWX-green ">color</span>     选择框选中时的颜色。<br><span class="propWX-green ">disabled</span>     当前选择框是否被禁用，布尔类型，默认值为false。<br><span class="propWX-green ">checked</span>     当前选择框是否被选中，布尔类型，具有排它性会覆盖。</p><p><span style="border:1px solid #000;padding:0 10px;background:#F0FFFF"><strong>checkbox-group组件</strong></span><br><span class="propWX-green ">bindchange</span>    当选中项发生变化时触发<code>change事件</code>并执行绑定的方法，可通过事件对象来获取当前选中项的值<code>(事件对象.detail</code>)。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">//001 wxml文件中的内容</div><div class="line"><span class="comment">&lt;!-- 演示checkbox的主要属性 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">checkbox-group</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">value</span>=<span class="string">'韩寒'</span> <span class="attr">color</span>=<span class="string">'red'</span>&gt;</span>韩寒<span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">value</span>=<span class="string">'张爱玲'</span> <span class="attr">checked</span>&gt;</span>张爱玲<span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">value</span>=<span class="string">'余华'</span>&gt;</span>余华<span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">value</span>=<span class="string">'张悦然'</span>&gt;</span>张悦然<span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">value</span>=<span class="string">'钱钟书'</span> <span class="attr">disabled</span>&gt;</span>钱钟书<span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">checkbox-group</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>数据绑定<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 数据绑定 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">checkbox-group</span> <span class="attr">bindchange</span>=<span class="string">'changeClick'</span> <span class="attr">name</span>=<span class="string">'key'</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">'&#123;&#123;dataArr&#125;&#125;'</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">value</span>=<span class="string">'&#123;&#123;item.name&#125;&#125;'</span> <span class="attr">checked</span>=<span class="string">'&#123;&#123;item.isChecked&#125;&#125;'</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">block</span>&gt;</span></div></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">//002 wxss文件中的内容</div><div class="line"><span class="selector-tag">checkbox</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">width</span>: <span class="number">500</span>rpx;</div><div class="line">  <span class="attribute">margin-bottom</span>: <span class="number">20</span>rpx;</div><div class="line">  <span class="attribute">margin-left</span>: <span class="number">20</span>rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">view</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">height</span>: <span class="number">100</span>rpx;</div><div class="line">  <span class="attribute">line-height</span>: <span class="number">100</span>rpx;</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//003 js文件中的内容</span></div><div class="line">Page(&#123;</div><div class="line">  data: &#123;</div><div class="line">    dataArr:[</div><div class="line">      &#123; <span class="attr">name</span>: <span class="string">"韩寒"</span>, <span class="attr">isChecked</span>: <span class="literal">false</span>&#125;,</div><div class="line">      &#123; <span class="attr">name</span>: <span class="string">"鲁迅"</span>, <span class="attr">isChecked</span>: <span class="literal">false</span> &#125;,</div><div class="line">      &#123; <span class="attr">name</span>: <span class="string">"余华"</span>, <span class="attr">isChecked</span>: <span class="literal">false</span> &#125;,</div><div class="line">      &#123; <span class="attr">name</span>: <span class="string">"冯唐"</span>, <span class="attr">isChecked</span>: <span class="literal">true</span> &#125;,</div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  changeClick:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"多项选择框的值发生了变化--changeClick"</span>);</div><div class="line">    <span class="built_in">console</span>.log(e.detail);</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><p>这里贴出上面代码的实现效果图。<br><img src="https://github.com/flowerField/Source/blob/master/Blog/wx29.gif?raw=true"></p><h4 id="3-0-picker组件-滚动选择器组件"><a href="#3-0-picker组件-滚动选择器组件" class="headerlink" title="3.0 picker组件(滚动选择器组件)"></a>3.0 picker组件(滚动选择器组件)</h4><p><a href="https://developers.weixin.qq.com/miniprogram/dev/component/picker.html" target="_blank" rel="external">picker组件</a>是从页面底部弹出的滚动选择器组件，支持下面五种具体的选择器，通过mode属性的值来进行区分，如果没有设置mode属性，那么默认为普通选择器。</p><blockquote><p>❏  时间选择器(<code>time</code>)<br>❏  日期选择器(<code>date</code>)<br>❏  普通选择器(<code>selector</code>)<br>❏  省市区选择器(<code>region</code>)<br>❏  多列选择器(<code>multiSelector</code>)</p></blockquote><p>这里给出五种选择器均拥有的属性，对于特点选择器才拥有的属性，我们稍后单独说明。<br><span class="propWX-green ">mode</span>     picker组件的类型。<br><span class="propWX-green ">bindchange</span>     当value值改变时触发change事件。<br><span class="propWX-green ">bindcancel</span>     当点击取消选择的时候触发cancel事件。<br><span class="propWX-green ">disabled</span>         控制是否禁用、布尔类型的值，默认为false。</p><p><span style="border:1px solid #000;padding:5px 20px;"><strong>001 普通选择器</strong> </span></p><p>在上面列出的是所有滚动选择器类型的组件都拥有的公共属性外，此外普通选择器还拥有<code>range</code>、<code>value</code>和<code>range-key</code>属性，其中range对应的数据可以是简单数组，也可以对象数组。下面列出普通选择器(<code>mode=selector</code> | 默认)组件的主要属性。并提供一个简短的demo演示。</p><p><span class="propWX-green bg-red">range</span>     可供选择的数据内容(<code>数组</code> | <code>对象数组</code>)。<br><span class="propWX-green bg-red">value</span>   表示默认选择的是可选数据中的第几项，索引从0开始。<br><span class="propWX-green ">range-key</span>     当可供选择的数据是对象数组时，通过该属性指定对象元素中作为具体显示内容的key。</p><p><strong><code>ex 普通选择器组件(默认)的代码示例</code></strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">//001 wxml文件的内容</div><div class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>普通数组<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">picker</span> <span class="attr">mode</span>=<span class="string">'selector'</span> <span class="attr">range</span>=<span class="string">'&#123;&#123; dataArray &#125;&#125;'</span> <span class="attr">value</span>=<span class="string">'&#123;&#123; dataArrayIndex &#125;&#125;'</span> <span class="attr">bindchange</span>=<span class="string">'changeClick1'</span>&gt;</span></div><div class="line">当前选择的是：&#123;&#123; dataArray[dataArrayIndex] &#125;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">picker</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>对象数组<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">picker</span> <span class="attr">mode</span>=<span class="string">'selector'</span> <span class="attr">range</span>=<span class="string">'&#123;&#123; dataArrayObject &#125;&#125;'</span> <span class="attr">value</span>=<span class="string">'&#123;&#123; dataArrayObjectIndex &#125;&#125;'</span> <span class="attr">bindchange</span>=<span class="string">'changeClick2'</span> <span class="attr">range-key</span>=<span class="string">'name'</span>&gt;</span></div><div class="line">当前选择的是：&#123;&#123; dataArrayObject[dataArrayObjectIndex]["name"] &#125;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">picker</span>&gt;</span></div></pre></td></tr></table></figure></p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">//002 wxss文件的内容</div><div class="line"><span class="selector-tag">view</span>&#123;</div><div class="line">  <span class="attribute">height</span>: <span class="number">44</span>rpx;</div><div class="line">  <span class="attribute">line-height</span>: <span class="number">44</span>rpx;</div><div class="line">  <span class="attribute">width</span>: <span class="number">200</span>rpx;</div><div class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</div><div class="line">  <span class="attribute">margin</span>: <span class="number">20</span>rpx <span class="number">10</span>rpx;</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//003 js文件的内容</span></div><div class="line"><span class="comment">// pages/picker/index.js</span></div><div class="line">Page(&#123;</div><div class="line">  data: &#123;</div><div class="line">    dataArray:[</div><div class="line">      <span class="string">"张三"</span>,</div><div class="line">      <span class="string">"李四"</span>,</div><div class="line">      <span class="string">"老王"</span></div><div class="line">    ],</div><div class="line">    dataArrayIndex:<span class="number">0</span>,</div><div class="line">    dataArrayObject: [</div><div class="line">      &#123; <span class="attr">name</span>: <span class="string">"文顶顶"</span> &#125;,</div><div class="line">      &#123; <span class="attr">name</span>: <span class="string">"沫子也"</span> &#125;,</div><div class="line">      &#123; <span class="attr">name</span>: <span class="string">"米桃儿"</span> &#125;</div><div class="line">    ],</div><div class="line">    dataArrayObjectIndex:<span class="number">0</span></div><div class="line">  &#125;,</div><div class="line">  changeClick1:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> index = e.detail.value;</div><div class="line">    <span class="keyword">this</span>.setData(&#123; <span class="attr">dataArrayIndex</span>: e.detail.value &#125;);</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"Click1---"</span>, <span class="keyword">this</span>.data.dataArray[index]);</div><div class="line">  &#125;,</div><div class="line">  changeClick2: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> index = e.detail.value;</div><div class="line">    <span class="keyword">this</span>.setData(&#123; <span class="attr">dataArrayObjectIndex</span>: index &#125;)</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"Click2--"</span>, <span class="keyword">this</span>.data.dataArrayObject[index][<span class="string">"name"</span>]);</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><p>这里给出上面代码运行情况的示意图。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx30.gif?raw=true"></p><p><span style="border:1px solid #000;padding:5px 20px;"><strong>002 多列选择器</strong> </span></p><p>在使用picker组件的时候，如果<code>mode属性的值为multiSelector</code>那么表示这是一个多列选择器，多列选择器相对普通选择器而言相对复杂一些，因为它的数据源为<code>二维数组</code>,也就是数组中的每个元素都是数组(<span style="color:red">可以是普通数组也可以是对象数组</span>)。</p><p><strong>多列选择器的主要属性</strong></p><p><span class="propWX-green ">value</span>         表示默认选择的是可选数据中的第几项，索引从0开始。<br><span class="propWX-green bg-red">range</span>     可供选择的数据内容(<code>普通数组</code> | <code>对象数组</code>构成的二维数组)。<br><span class="propWX-green ">range-key</span>     当数据是<code>二维对象数组</code>时，指定对象元素中作为显示内容的key。<br><span class="propWX-green ">bindcolumnchange</span>     某列值改变时触发，其中<code>column 表示列数，</code>value` 表示变更值的下标。</p><p><strong><code>ex 多列选择器组件(mode=multiSelector)的代码示例</code></strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">//001 wxml文件中的内容</div><div class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>二维数组(普通数组)<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">picker</span> <span class="attr">mode</span>=<span class="string">'multiSelector'</span> <span class="attr">range</span>=<span class="string">'&#123;&#123; multiArray &#125;&#125;'</span> <span class="attr">bindchange</span>=<span class="string">'changeClick1'</span>&gt;</span></div><div class="line"></div><div class="line">当前选择的是：&#123;&#123;multiArray[0][multiIndex[0]]&#125;&#125;,&#123;&#123;multiArray[1][multiIndex[1]]&#125;&#125;,&#123;&#123;multiArray[2][multiIndex[2]]&#125;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">picker</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>二维数组(对象数组)<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">picker</span> <span class="attr">mode</span>=<span class="string">'multiSelector'</span> <span class="attr">range</span>=<span class="string">'&#123;&#123; multiArrayObject &#125;&#125;'</span> <span class="attr">range-key</span>=<span class="string">'&#123;&#123; key &#125;&#125;'</span> <span class="attr">bindchange</span>=<span class="string">'changeClick2'</span>&gt;</span></div><div class="line"></div><div class="line">当前选择的是：&#123;&#123;multiArrayObject[0][multiObjectIndex[0]][key]&#125;&#125;,&#123;&#123;multiArrayObject[1][multiObjectIndex[1]][key]&#125;&#125;,&#123;&#123;multiArrayObject[2][multiObjectIndex[2]][key]&#125;&#125;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">picker</span>&gt;</span></div></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">//002 wxss文件中的内容</div><div class="line"><span class="selector-tag">view</span>&#123;</div><div class="line">  <span class="attribute">height</span>: <span class="number">44</span>rpx;</div><div class="line">  <span class="attribute">line-height</span>: <span class="number">44</span>rpx;</div><div class="line">  <span class="attribute">text-align</span>: center;</div><div class="line">  <span class="attribute">width</span>: <span class="number">400</span>rpx;</div><div class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</div><div class="line">  <span class="attribute">margin</span>: <span class="number">50</span>rpx <span class="number">10</span>rpx;</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//003 js文件中的数据和对应的方法</span></div><div class="line">Page(&#123;</div><div class="line">  data:&#123;</div><div class="line">    key: <span class="string">"name"</span>,</div><div class="line">    multiArray:[</div><div class="line">      [<span class="string">"作家"</span>,<span class="string">"导演"</span>],</div><div class="line">      [<span class="string">"韩寒"</span>, <span class="string">"龙应台"</span>, <span class="string">"余华"</span>,<span class="string">"张艺谋"</span>],</div><div class="line">      [<span class="string">"他的国"</span>,<span class="string">"目送"</span>, <span class="string">"兄弟"</span>, <span class="string">"活着"</span>,<span class="string">"英雄"</span>],</div><div class="line">    ],</div><div class="line">    multiIndex:[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],</div><div class="line">    multiObjectIndex: [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</div><div class="line">    multiArrayObject: [</div><div class="line">      [</div><div class="line">        &#123;<span class="attr">name</span>:<span class="string">"作家"</span>,<span class="attr">id</span>:<span class="number">0</span>&#125;,</div><div class="line">        &#123;<span class="attr">name</span>:<span class="string">"导演"</span>,<span class="attr">id</span>:<span class="number">1</span>&#125;</div><div class="line">      ],</div><div class="line">      [</div><div class="line">        &#123;<span class="attr">name</span>:<span class="string">"韩寒"</span>&#125;,</div><div class="line">        &#123;<span class="attr">name</span>:<span class="string">"龙应台"</span>&#125;,</div><div class="line">        &#123;<span class="attr">name</span>:<span class="string">"余华"</span>&#125;,</div><div class="line">        &#123;<span class="attr">name</span>:<span class="string">"张艺谋"</span>&#125;</div><div class="line">       ],</div><div class="line">      [</div><div class="line">        &#123;<span class="attr">name</span>:<span class="string">"他的国"</span>&#125;,</div><div class="line">        &#123;<span class="attr">name</span>:<span class="string">"目送"</span>&#125;,</div><div class="line">        &#123;<span class="attr">name</span>:<span class="string">"活着"</span>&#125;,</div><div class="line">        &#123;<span class="attr">name</span>:<span class="string">"英雄"</span>&#125;</div><div class="line">      ],</div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  changeClick1:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">//获取事件对象中的数据</span></div><div class="line">    <span class="keyword">var</span> indexArr = e.detail.value;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"changeClick1--"</span>,indexArr);</div><div class="line"></div><div class="line">    <span class="comment">//打印输出</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"选择的数据为："</span> + <span class="keyword">this</span>.data.multiArray[<span class="number">0</span>][indexArr[<span class="number">0</span>]] + <span class="string">","</span> + <span class="keyword">this</span>.data.multiArray[<span class="number">1</span>][indexArr[<span class="number">1</span>]] +<span class="string">","</span> + <span class="keyword">this</span>.data.multiArray[<span class="number">2</span>][indexArr[<span class="number">2</span>]])</div><div class="line"></div><div class="line">    <span class="comment">//更新数据</span></div><div class="line">    <span class="keyword">this</span>.setData(&#123;</div><div class="line">      multiIndex:indexArr</div><div class="line">    &#125;)</div><div class="line"></div><div class="line">  &#125;,</div><div class="line">  changeClick2:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> indexArr = e.detail.value;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"changeClick1--"</span>, indexArr);</div><div class="line"></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"选择的数据为："</span> + <span class="keyword">this</span>.data.multiArrayObject[<span class="number">0</span>][indexArr[<span class="number">0</span>]][<span class="string">"name"</span>] + <span class="string">","</span> + <span class="keyword">this</span>.data.multiArrayObject[<span class="number">1</span>][indexArr[<span class="number">1</span>]][<span class="string">"name"</span>] + <span class="string">","</span> + <span class="keyword">this</span>.data.multiArrayObject[<span class="number">2</span>][indexArr[<span class="number">2</span>]][<span class="string">"name"</span>])</div><div class="line"></div><div class="line">    <span class="keyword">this</span>.setData(&#123;</div><div class="line">      multiObjectIndex: indexArr</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><p>这里给出上面代码运行情况的示意图。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx32.gif?raw=true"></p><p><strong>说明</strong> 上面的代码中演示了多列选择器的基本使用，并且提供了数据源是<code>普通二维数组 以及</code>每个元素是对象数组这种特殊二维数组`两种情况的使用做对照，需要特别注意的是如果二维对象数组，那么必须通过range-key来指定显示的具体内容。</p><p>另外在上面的演示代码中，提供的案例里面并没有<span style="color:red">数据联动</span>的需求。如果在进行多列选择的时候数据需要联动那么我们的数据源以及代码设计可能会更复杂一些，下面给出一个稍微复杂点的示例。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//001 wxml文件中的内容</div><div class="line"><span class="tag">&lt;<span class="name">picker</span> <span class="attr">mode</span>=<span class="string">"multiSelector"</span> <span class="attr">bindchange</span>=<span class="string">"bindMultiPickerChange"</span> <span class="attr">bindcolumnchange</span>=<span class="string">"bindMultiPickerColumnChange"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123;multiIndex&#125;&#125;"</span> <span class="attr">range</span>=<span class="string">"&#123;&#123;multiArray&#125;&#125;"</span>&gt;</span></div><div class="line"></div><div class="line">      当前选择：&#123;&#123;multiArray[0][multiIndex[0]]&#125;&#125;，&#123;&#123;multiArray[1][multiIndex[1]]&#125;&#125;，&#123;&#123;multiArray[2][multiIndex[2]]&#125;&#125;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">picker</span>&gt;</span></div></pre></td></tr></table></figure></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line">Page(&#123;</div><div class="line"></div><div class="line">  data: &#123;</div><div class="line">    multiArray: [</div><div class="line">        [<span class="string">'作家'</span>, <span class="string">'导演'</span>],</div><div class="line">        [<span class="string">'莫言'</span>, <span class="string">'韩寒'</span>, <span class="string">'冯唐'</span>, <span class="string">'鲁迅'</span>, <span class="string">'张爱玲'</span>],</div><div class="line">        [<span class="string">'红高粱家族'</span>, <span class="string">'蛙'</span>, <span class="string">'酒国'</span>,<span class="string">'丰臀肥乳'</span>]</div><div class="line">    ],</div><div class="line">    multiIndex: [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</div><div class="line">  &#125;,</div><div class="line">    bindMultiPickerChange: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line"></div><div class="line">      <span class="keyword">this</span>.setData(&#123; <span class="attr">multiIndex</span>: e.detail.value &#125;)</div><div class="line">      <span class="built_in">console</span>.log(<span class="string">'picker发送选择改变，携带值为'</span>, e.detail.value)</div><div class="line"></div><div class="line">    &#125;,</div><div class="line">    bindMultiPickerColumnChange: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line"></div><div class="line">      <span class="built_in">console</span>.log(<span class="string">'修改的列为'</span>, e.detail.column, <span class="string">'，对应的值为'</span>, e.detail.value);</div><div class="line"></div><div class="line">      <span class="comment">//001 字面量方式创建对象</span></div><div class="line">      <span class="keyword">var</span> data = &#123;</div><div class="line">        multiArray: <span class="keyword">this</span>.data.multiArray,</div><div class="line">        multiIndex: <span class="keyword">this</span>.data.multiIndex</div><div class="line">      &#125;;</div><div class="line"></div><div class="line">      <span class="comment">//002 获取当前选择的数据(数组)</span></div><div class="line">      data.multiIndex[e.detail.column] = e.detail.value;</div><div class="line"></div><div class="line">      <span class="comment">//003 设置数据联动</span></div><div class="line">      <span class="keyword">switch</span> (e.detail.column) &#123;</div><div class="line">        <span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">          <span class="keyword">switch</span> (data.multiIndex[<span class="number">0</span>]) &#123;</div><div class="line">            <span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">              data.multiArray[<span class="number">1</span>] = [<span class="string">'莫言'</span>, <span class="string">'韩寒'</span>, <span class="string">'冯唐'</span>, <span class="string">'鲁迅'</span>, <span class="string">'张爱玲'</span>];</div><div class="line">              data.multiArray[<span class="number">2</span>] = [<span class="string">'红高粱家族'</span>, <span class="string">'蛙'</span>, <span class="string">'酒国'</span>, <span class="string">'丰臀肥乳'</span>];</div><div class="line">              <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">              data.multiArray[<span class="number">1</span>] = [<span class="string">'张艺谋'</span>, <span class="string">'贾樟柯'</span>, <span class="string">'韩寒'</span>];</div><div class="line">              data.multiArray[<span class="number">2</span>] = [<span class="string">'英雄'</span>, <span class="string">'活着'</span>,<span class="string">'红高粱'</span>,<span class="string">'大红灯笼高高挂'</span>];</div><div class="line">              <span class="keyword">break</span>;</div><div class="line">          &#125;</div><div class="line">          data.multiIndex[<span class="number">1</span>] = <span class="number">0</span>;</div><div class="line">          data.multiIndex[<span class="number">2</span>] = <span class="number">0</span>;</div><div class="line">          <span class="keyword">break</span>;</div><div class="line"></div><div class="line">        <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">          <span class="keyword">switch</span> (data.multiIndex[<span class="number">0</span>]) &#123;</div><div class="line"></div><div class="line">            <span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">              <span class="keyword">switch</span> (data.multiIndex[<span class="number">1</span>]) &#123;</div><div class="line">                <span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">                  data.multiArray[<span class="number">2</span>] = [<span class="string">'红高粱家族'</span>, <span class="string">'蛙'</span>, <span class="string">'酒国'</span>, <span class="string">'丰臀肥乳'</span>];</div><div class="line">                  <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">                  data.multiArray[<span class="number">2</span>] = [<span class="string">'三重门'</span>,<span class="string">'一座城池'</span>,<span class="string">'零下一度'</span>,<span class="string">'他的国'</span>,<span class="string">'杂的文'</span>];</div><div class="line">                  <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">                  data.multiArray[<span class="number">2</span>] = [<span class="string">'女神一号'</span>, <span class="string">'18岁请给我一个姑娘'</span>,<span class="string">'三十六大'</span>];</div><div class="line">                  <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">                  data.multiArray[<span class="number">2</span>] = [<span class="string">'朝花夕拾'</span>, <span class="string">'彷徨'</span>, <span class="string">'呐喊'</span>];</div><div class="line">                  <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> <span class="number">4</span>:</div><div class="line">                  data.multiArray[<span class="number">2</span>] = [<span class="string">'红玫瑰与白玫瑰'</span>, <span class="string">'倾城之恋'</span>, <span class="string">'色戒'</span>, <span class="string">'半生缘'</span>];</div><div class="line">                  <span class="keyword">break</span>;</div><div class="line">              &#125;</div><div class="line">              <span class="keyword">break</span>;</div><div class="line"></div><div class="line">            <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">              <span class="keyword">switch</span> (data.multiIndex[<span class="number">1</span>]) &#123;</div><div class="line">                <span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">                  data.multiArray[<span class="number">2</span>] = [<span class="string">'英雄'</span>, <span class="string">'活着'</span>, <span class="string">'红高粱'</span>, <span class="string">'大红灯笼高高挂'</span>];</div><div class="line">                  <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">                  data.multiArray[<span class="number">2</span>] = [<span class="string">'小武'</span>, <span class="string">'三峡好人'</span>,<span class="string">'天注定'</span>,<span class="string">'江湖儿女'</span>];</div><div class="line">                  <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">                  data.multiArray[<span class="number">2</span>] = [<span class="string">'平凡之路'</span>, <span class="string">'乘风破浪'</span>];</div><div class="line">                  <span class="keyword">break</span>;</div><div class="line">              &#125;</div><div class="line">              <span class="keyword">break</span>;</div><div class="line">          &#125;</div><div class="line">          data.multiIndex[<span class="number">2</span>] = <span class="number">0</span>;</div><div class="line">          <span class="keyword">break</span>;</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">this</span>.setData(data);</div><div class="line">    &#125;,</div><div class="line">&#125;)</div></pre></td></tr></table></figure><p>这里给出上面代码运行情况的示意图。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx33.gif?raw=true"></p><p><span style="border:1px solid #000;padding:5px 20px;"><strong>003 时间选择器</strong> </span></p><p>时间选择器应该picker组件最简单的一种类型了，当<code>mode属性值为time的时候</code>呈现出来的就是时间选择器，从页面底部滚出的时间选择器可以帮助我们来选择并设置具体的时间(<code>几点几分</code>)。这里先列出主要的属性，再给出一个简短的代码示例。</p><p><span class="propWX-green bg-red">value</span>       表示选中的时间，格式为”hh:mm”。<br><span class="propWX-green ">end</span>         表示有效时间范围的结尾，限定结束时间。<br><span class="propWX-green ">start</span>       表示有效时间范围的开始，限定开始时间。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">//001 wxml文件中的内容</div><div class="line"><span class="tag">&lt;<span class="name">picker</span> <span class="attr">mode</span>=<span class="string">"time"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123;time&#125;&#125;"</span> <span class="attr">bindchange</span>=<span class="string">"timeChangeClick"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"picker"</span>&gt;</span></div><div class="line">      当前选择: &#123;&#123;time&#125;&#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">picker</span>&gt;</span></div><div class="line"></div><div class="line">//002 js文件中的内容</div><div class="line">Page(&#123;</div><div class="line">  data: &#123;</div><div class="line">    time:'12:00'</div><div class="line">  &#125;,</div><div class="line">  timeChangeClick:function(e)&#123;</div><div class="line">    console.log("timeChangeClick--",e.detail);</div><div class="line">    this.setData(&#123;</div><div class="line">      time: e.detail.value</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><p><span style="border:1px solid #000;padding:5px 20px;"><strong>004 日期选择器</strong> </span></p><p>当picker组件的<code>mode属性值为date</code>的时候，底部弹出的是日期选择器。</p><p><strong>日期选择器的主要属性</strong></p><p><span class="propWX-green ">value</span>       表示选中的日期，格式为<code>&quot;YYYY-MM-DD&quot;</code>。<br><span class="propWX-green ">end</span>         表示有效日期范围的结束，字符串格式为”YYYY-MM-DD”。<br><span class="propWX-green ">start</span>       表示有效日期范围的开始，字符串格式为”YYYY-MM-DD”。<br><span class="propWX-green bg-red">fields</span>      可取的有效值有 year(年),month(月),day(天)三种，表示选择器的粒度。</p><p><strong><code>ex：日期选择器的代码示例</code></strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">//001 wxml文件中的内容</div><div class="line"><span class="tag">&lt;<span class="name">picker</span> <span class="attr">mode</span>=<span class="string">"date"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123;date&#125;&#125;"</span> <span class="attr">start</span>=<span class="string">"1900-00-01"</span> <span class="attr">end</span>=<span class="string">"2018-10-16"</span> <span class="attr">bindchange</span>=<span class="string">"dateChangeClick"</span>&gt;</span></div><div class="line">      当前选择的是: &#123;&#123;date&#125;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">picker</span>&gt;</span></div><div class="line"></div><div class="line">//002 js文件中的内容</div><div class="line">Page(&#123;</div><div class="line">  data: &#123;</div><div class="line">    date:"2015-07-17"</div><div class="line">  &#125;,</div><div class="line">  dateChangeClick:function(e)&#123;</div><div class="line">    this.setData(&#123;</div><div class="line">      date:e.detail.value</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p><p>这里给出上面代码运行情况的示意图。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx34.gif?raw=true"></p><p><span style="border:1px solid #000;padding:5px 20px;"><strong>005 省市区选择器</strong> </span></p><p>省市区选择器常用于商城类应用的地址管理模块，比如要新建地址或者是编辑地址的时候。当picker组件的<code>mode属性值为region</code>的时候，底部弹出的是省市区选择器。省市区选择器在使用的时候本身也比较简单，主要关注<code>value</code>和<code>custom-item</code>属性和<code>bindchange</code>事件即可。</p><p><span class="propWX-green ">value</span>               表示选中的省市区，默认选中每一列的第一个值。<br><span class="propWX-green ">custom-item</span>         我们可以通过该属性来为每一列的顶部添加一个自定义的项。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">//001 wxml文件的内容</div><div class="line"><span class="tag">&lt;<span class="name">picker</span></span></div><div class="line"><span class="tag"><span class="attr">mode</span>=<span class="string">"region"</span></span></div><div class="line"><span class="tag"><span class="attr">value</span>=<span class="string">"&#123;&#123;region&#125;&#125;"</span></span></div><div class="line"><span class="tag"><span class="attr">custom-item</span>=<span class="string">"&#123;&#123;customItem&#125;&#125;"</span></span></div><div class="line"><span class="tag"><span class="attr">bindchange</span>=<span class="string">"regionChangeClick"</span></span></div><div class="line"><span class="tag"> &gt;</span></div><div class="line">  &#123;&#123;region[0]&#125;&#125;，&#123;&#123;region[1]&#125;&#125;，&#123;&#123;region[2]&#125;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">picker</span>&gt;</span></div><div class="line"></div><div class="line">//002 js文件的内容</div><div class="line">Page(&#123;</div><div class="line">  data: &#123;</div><div class="line">    region: ['广东省', '广州市', '天河区'],</div><div class="line">    customItem:"All"</div><div class="line">  &#125;,</div><div class="line">  regionChangeClick:function(e)&#123;</div><div class="line">    this.setData(&#123;</div><div class="line">      region:e.detail.value</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><hr><ul><li>Posted by 博客园·<a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a> | <a href="http://wendingding.com" target="_blank" rel="external">花田半亩</a></li><li>联系作者 简书·<a href="http://www.jianshu.com/users/c5703017b9f5/latest_articleshttp://www.jianshu.com/users/c5703017b9f5/latest_articles" target="_blank" rel="external">文顶顶</a> 新浪微博·<a href="http://weibo.com/p/1005053800117445/home?from=page_100505&amp;mod=TAB#place">Coder_文顶顶</a></li><li>原创文章，版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文介绍小程序中的基础组件，主要包括picker滚动选择器、checkbox多项选择器和progress进度条等组件的基本使用和综合示例。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;1-0-progress组件&quot;&gt;&lt;a href=&quot;#1-
      
    
    </summary>
    
    
      <category term="微信小程序序列" scheme="https://weibo.com/u/3800117445/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%8F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>jQuery系列 [11]-jQuery框架源码解读[插件]</title>
    <link href="https://weibo.com/u/3800117445/2018/10/12/jQuery%E7%B3%BB%E5%88%97%20%5B11%5D-jQuery%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB%5B%E6%8F%92%E4%BB%B6%5D/"/>
    <id>https://weibo.com/u/3800117445/2018/10/12/jQuery系列 [11]-jQuery框架源码解读[插件]/</id>
    <published>2018-10-12T08:28:47.000Z</published>
    <updated>2018-11-11T13:30:01.193Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这篇文章将主要介绍jQuery框架的插件机制，包括但不限于<code>jQuery.extend</code>和<code>jQuery.fn.extend</code>方法的设计和使用，JavaScript体系中的常用概念以及jQuery插件的使用等。</p></blockquote><h3 id="1-0-源码解读"><a href="#1-0-源码解读" class="headerlink" title="1.0 源码解读"></a>1.0 源码解读</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div></pre></td><td class="code"><pre><div class="line">jQuery.extend = jQuery.fn.extend = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line"><span class="comment">//声明一堆的变量length 为实参的个数</span></div><div class="line"><span class="keyword">var</span> options, name, src, copy, copyIsArray, clone,</div><div class="line">target = <span class="built_in">arguments</span>[ <span class="number">0</span> ] || &#123;&#125;,</div><div class="line">i = <span class="number">1</span>,</div><div class="line">length = <span class="built_in">arguments</span>.length,</div><div class="line">deep = <span class="literal">false</span>;</div><div class="line"></div><div class="line"><span class="comment">// Handle a deep copy situation</span></div><div class="line"><span class="keyword">if</span> ( <span class="keyword">typeof</span> target === <span class="string">"boolean"</span> ) &#123;</div><div class="line">deep = target;</div><div class="line"></div><div class="line"><span class="comment">// Skip the boolean and the target</span></div><div class="line">target = <span class="built_in">arguments</span>[ i ] || &#123;&#125;;</div><div class="line">i++;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Handle case when target is a string or something (possible in deep copy)</span></div><div class="line"><span class="keyword">if</span> ( <span class="keyword">typeof</span> target !== <span class="string">"object"</span> &amp;&amp; !isFunction( target ) ) &#123;</div><div class="line">target = &#123;&#125;;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Extend jQuery itself if only one argument is passed</span></div><div class="line"><span class="keyword">if</span> ( i === length ) &#123;</div><div class="line">target = <span class="keyword">this</span>;</div><div class="line">i--;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">for</span> ( ; i &lt; length; i++ ) &#123;</div><div class="line"></div><div class="line"><span class="comment">// Only deal with non-null/undefined values</span></div><div class="line"><span class="keyword">if</span> ( ( options = <span class="built_in">arguments</span>[ i ] ) != <span class="literal">null</span> ) &#123;</div><div class="line"></div><div class="line"><span class="comment">// Extend the base object</span></div><div class="line"><span class="keyword">for</span> ( name <span class="keyword">in</span> options ) &#123;</div><div class="line">src = target[ name ];</div><div class="line">copy = options[ name ];</div><div class="line"></div><div class="line"><span class="comment">// Prevent never-ending loop</span></div><div class="line"><span class="keyword">if</span> ( target === copy ) &#123;</div><div class="line"><span class="keyword">continue</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Recurse if we're merging plain objects or arrays</span></div><div class="line"><span class="keyword">if</span> ( deep &amp;&amp; copy &amp;&amp; ( jQuery.isPlainObject( copy ) ||</div><div class="line">( copyIsArray = <span class="built_in">Array</span>.isArray( copy ) ) ) ) &#123;</div><div class="line"></div><div class="line"><span class="keyword">if</span> ( copyIsArray ) &#123;</div><div class="line">copyIsArray = <span class="literal">false</span>;</div><div class="line">clone = src &amp;&amp; <span class="built_in">Array</span>.isArray( src ) ? src : [];</div><div class="line"></div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">clone = src &amp;&amp; jQuery.isPlainObject( src ) ? src : &#123;&#125;;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Never move original objects, clone them</span></div><div class="line">target[ name ] = jQuery.extend( deep, clone, copy );</div><div class="line"></div><div class="line"><span class="comment">// Don't bring in undefined values</span></div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ( copy !== <span class="literal">undefined</span> ) &#123;</div><div class="line">target[ name ] = copy;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Return the modified object</span></div><div class="line"><span class="keyword">return</span> target;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">//为jQuery添加一堆工具方法,对象参数中所有的成员都将直接添加在jQuery函数身上成为jQuery的静态方法</span></div><div class="line">jQuery.extend( &#123;</div><div class="line"></div><div class="line"><span class="comment">// Unique for each copy of jQuery on the page</span></div><div class="line"><span class="comment">// 简单测试下得到的结果是：jQuery33104605303773584173</span></div><div class="line"><span class="comment">// 确保页面中的jQuery副本是唯一的，（jQuery + 版本号 + 随机数） =&gt; 格式处理</span></div><div class="line">expando: <span class="string">"jQuery"</span> + ( version + <span class="built_in">Math</span>.random() ).replace( <span class="regexp">/\D/g</span>, <span class="string">""</span> ),</div><div class="line"></div><div class="line"><span class="comment">// Assume jQuery is ready without the ready module</span></div><div class="line"><span class="comment">// 是否已经准备就绪</span></div><div class="line">isReady: <span class="literal">true</span>,</div><div class="line"><span class="comment">//错误处理方法：根据传入的消息创建一个错误对象并抛出异常</span></div><div class="line">error: <span class="function"><span class="keyword">function</span>(<span class="params"> msg </span>) </span>&#123;</div><div class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>( msg );</div><div class="line">&#125;,</div><div class="line"><span class="comment">//空函数</span></div><div class="line">noop: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</div><div class="line"></div><div class="line"><span class="comment">//用于判断指定参数是否是一个纯粹的对象</span></div><div class="line"><span class="comment">//所谓"纯粹的对象"，就是该对象是通过"&#123;&#125;"或"new Object"创建的 .排除了数组、自定义构造函数创建的对象以及函数等类型</span></div><div class="line">isPlainObject: <span class="function"><span class="keyword">function</span>(<span class="params"> obj </span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> proto, Ctor;</div><div class="line"></div><div class="line"><span class="comment">// Detect obvious negatives</span></div><div class="line"><span class="comment">// Use toString instead of jQuery.type to catch host objects</span></div><div class="line"></div><div class="line"><span class="comment">//如果参数为null | undefined 或者在调用Object.prototype.toString.call(参数)的时候得到的结果不是[object Object]则直接返回false</span></div><div class="line"><span class="keyword">if</span> ( !obj || toString.call( obj ) !== <span class="string">"[object Object]"</span> ) &#123;</div><div class="line"><span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//获取当前对象的原型对象，其实是调用了Object.getPrototypeOf(参数) 方法</span></div><div class="line">proto = getProto( obj );</div><div class="line"></div><div class="line"><span class="comment">// Objects with no prototype (e.g., `Object.create( null )`) are plain</span></div><div class="line"><span class="comment">//监测 没有原型对象的最纯净的对象 例如使用Object.create( null )创建的对象</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> ( !proto ) &#123;</div><div class="line"><span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Objects with prototype are plain iff they were constructed by a global Object function</span></div><div class="line"><span class="comment">//如果原型对象上拥有constructor属性(前一句的结果为true) 那么就返回proto.constructor的值</span></div><div class="line"><span class="comment">//如果原型对象是Object.prototype 那么Object.prototype.constructor ==&gt; ƒ Object() &#123; [native code] &#125;</span></div><div class="line">Ctor = hasOwn.call( proto, <span class="string">"constructor"</span> ) &amp;&amp; proto.constructor;</div><div class="line"></div><div class="line"><span class="comment">//检查Ctor是否是函数 且函数字符串是否全等于function Object() &#123; [native code] &#125;</span></div><div class="line"><span class="keyword">return</span> <span class="keyword">typeof</span> Ctor === <span class="string">"function"</span> &amp;&amp; fnToString.call( Ctor ) === ObjectFunctionString;</div><div class="line">&#125;,</div><div class="line"></div><div class="line"><span class="comment">//用于判断指定参数是否是一个空对象</span></div><div class="line"><span class="comment">//所谓"空对象"，即不包括任何可枚举(自定义)的属性。简而言之，就是该对象没有属性可以通过for...in迭代。</span></div><div class="line">isEmptyObject: <span class="function"><span class="keyword">function</span>(<span class="params"> obj </span>) </span>&#123;</div><div class="line"></div><div class="line"><span class="comment">/* eslint-disable no-unused-vars */</span></div><div class="line"><span class="comment">// See https://github.com/eslint/eslint/issues/6125</span></div><div class="line"><span class="keyword">var</span> name;</div><div class="line"></div><div class="line"><span class="keyword">for</span> ( name <span class="keyword">in</span> obj ) &#123;</div><div class="line"><span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">&#125;,</div><div class="line"></div><div class="line"><span class="comment">// Evaluates a script in a global context</span></div><div class="line"><span class="comment">//用于全局性地执行一段JavaScript代码,内部调用DOMEval方法实现</span></div><div class="line"><span class="comment">//其作用与常规的JavaScript eval()函数相似。区别自傲与jQuery.globalEval()执行代码的作用域为全局作用域。</span></div><div class="line">        <span class="comment">//使用示例：$.globalEval( "var a =1" ); 该行代码将在全局作用域中定义变量a</span></div><div class="line">globalEval: <span class="function"><span class="keyword">function</span>(<span class="params"> code </span>) </span>&#123;</div><div class="line">DOMEval( code );</div><div class="line">&#125;,</div><div class="line"></div><div class="line"><span class="comment">//常用的迭代方法，可以用来遍历数组|对象|jQ实例对象(伪数组)</span></div><div class="line"><span class="comment">//该方法同$("xxx").each() 方法保持一致</span></div><div class="line"><span class="comment">//第一个参数：要遍历的对象| 数组 | jQ实例对象</span></div><div class="line">each: <span class="function"><span class="keyword">function</span>(<span class="params"> obj, callback </span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> length, i = <span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="comment">//如果参数是伪数组那么使用普通的for循环来进行遍历</span></div><div class="line"><span class="keyword">if</span> ( isArrayLike( obj ) ) &#123;</div><div class="line">length = obj.length;</div><div class="line"><span class="keyword">for</span> ( ; i &lt; length; i++ ) &#123;</div><div class="line"><span class="comment">//调用回到函数，把当前的value值绑定给函数的this [each方法的回调函数中this--&gt; value值]</span></div><div class="line"><span class="comment">//把当前循环的key和value值(这里是i和obj[i])作为参数传递给callback回调函数</span></div><div class="line"><span class="comment">//检查回调函数的返回值，如果返回的是false，那么就退出循环</span></div><div class="line"><span class="keyword">if</span> ( callback.call( obj[ i ], i, obj[ i ] ) === <span class="literal">false</span> ) &#123;</div><div class="line"><span class="keyword">break</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line"><span class="comment">//如果是普通的对象那么使用for..in循环来进行遍历</span></div><div class="line"><span class="keyword">for</span> ( i <span class="keyword">in</span> obj ) &#123;</div><div class="line"><span class="comment">//同上面的代码保持一致</span></div><div class="line"><span class="keyword">if</span> ( callback.call( obj[ i ], i, obj[ i ] ) === <span class="literal">false</span> ) &#123;</div><div class="line"><span class="keyword">break</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//把遍历的对象返回,链式编程的代码风格</span></div><div class="line"><span class="keyword">return</span> obj;</div><div class="line">&#125;,</div><div class="line"></div><div class="line"><span class="comment">// Support: Android &lt;=4.0 only</span></div><div class="line"><span class="comment">// 工具方法，用于清空字符串前面或者是后面的N个空格</span></div><div class="line"><span class="comment">// 在ES5中js提供了原生的trim方法来清除字符串前后的1个或多个空格</span></div><div class="line"><span class="comment">// 这里主要是通过正则表达式去进行匹配，把匹配到的内容替换为空字符串""</span></div><div class="line">trim: <span class="function"><span class="keyword">function</span>(<span class="params"> text </span>) </span>&#123;</div><div class="line"><span class="keyword">return</span> text == <span class="literal">null</span> ?</div><div class="line"><span class="string">""</span> :</div><div class="line">( text + <span class="string">""</span> ).replace( rtrim, <span class="string">""</span> );</div><div class="line">&#125;,</div><div class="line"></div><div class="line"><span class="comment">// results is for internal usage only</span></div><div class="line"><span class="comment">// 结果仅共内部使用</span></div><div class="line"><span class="comment">// 该函数用于将一个类数组对象(伪数组)转换为真正的数组对象</span></div><div class="line"><span class="comment">// 所谓"类数组对象"就是一个常规的Object对象，但它和数组对象非常相似：具备length属性，并以0、1、2、3……等数字作为属性名。</span></div><div class="line">makeArray: <span class="function"><span class="keyword">function</span>(<span class="params"> arr, results </span>) </span>&#123;</div><div class="line"><span class="comment">// 初始化ret为空数组</span></div><div class="line"><span class="keyword">var</span> ret = results || [];</div><div class="line"></div><div class="line"><span class="keyword">if</span> ( arr != <span class="literal">null</span> ) &#123;</div><div class="line"><span class="comment">//检查传入的参数是否是伪数组</span></div><div class="line"><span class="keyword">if</span> ( isArrayLike( <span class="built_in">Object</span>( arr ) ) ) &#123;</div><div class="line"><span class="comment">//如果是伪数组，那么合并ret和arr 并返回</span></div><div class="line"><span class="comment">//如果arr是字符串那么jQuery.merge(ret,[arr]) ，否则jQuery.merge(ret,arr)</span></div><div class="line">jQuery.merge( ret,</div><div class="line"><span class="keyword">typeof</span> arr === <span class="string">"string"</span> ?</div><div class="line">[ arr ] : arr</div><div class="line">);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line"><span class="comment">//如果参数不是伪数组，那么直接把arr中的每个数据都添加到新的数组中</span></div><div class="line"><span class="comment">//push.call( ret, arr ) 就是是 [].push.call(ret,arr) =&gt; [].push(arr)</span></div><div class="line">push.call( ret, arr );</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">//返回处理完的数组对象</span></div><div class="line"><span class="keyword">return</span> ret;</div><div class="line">&#125;,</div><div class="line"></div><div class="line"><span class="comment">// 该方法用于在数组中搜索指定的值，并返回其索引值。如果数组中不存在该值，则返回 -1。</span></div><div class="line"><span class="comment">// 第一个参数 用于查找的值</span></div><div class="line"><span class="comment">// 第二个参数 指定被查找的数组</span></div><div class="line"><span class="comment">// 第三个参数 指定从数组的指定索引位置开始查找，默认为 0</span></div><div class="line">        <span class="comment">// 如果数组中存在多个相同的值，则以查找到的第一个值的索引为准</span></div><div class="line"><span class="comment">// 使用示例：$.inArray("文顶顶",["demoA","demoB","wendingding.com","文顶顶","demoC","end"],4)</span></div><div class="line"><span class="comment">// 上面的代码表示从数组中索引为4的位置开始查找"文顶顶"这个元素项，返回的结果为-1，最后一个参数不传递则返回3</span></div><div class="line">inArray: <span class="function"><span class="keyword">function</span>(<span class="params"> elem, arr, i </span>) </span>&#123;</div><div class="line"><span class="comment">//如果参数是null或undefined那么直接返回-1</span></div><div class="line"><span class="comment">//否则通过调用indexOf方法实现 indexOf.call( arr, elem, i ) =&gt; arr.indexOf(elem,i)</span></div><div class="line"><span class="keyword">return</span> arr == <span class="literal">null</span> ? <span class="number">-1</span> : indexOf.call( arr, elem, i );</div><div class="line">&#125;,</div><div class="line"></div><div class="line"><span class="comment">// Support: Android &lt;=4.0 only, PhantomJS 1 only</span></div><div class="line"><span class="comment">// push.apply(_, arraylike) throws on ancient WebKit</span></div><div class="line"><span class="comment">//该方法用于合并两个数组</span></div><div class="line">merge: <span class="function"><span class="keyword">function</span>(<span class="params"> first, second </span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> len = +second.length,</div><div class="line">j = <span class="number">0</span>,</div><div class="line">i = first.length;</div><div class="line"></div><div class="line"><span class="keyword">for</span> ( ; j &lt; len; j++ ) &#123;</div><div class="line"><span class="comment">//通过普通的for循环来遍历第二个数组</span></div><div class="line"><span class="comment">//把第二个数组的元素依次追加在第一个数组的后面</span></div><div class="line">first[ i++ ] = second[ j ];</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//更新数组的长度值</span></div><div class="line">first.length = i;</div><div class="line"></div><div class="line"><span class="keyword">return</span> first;</div><div class="line">&#125;,</div><div class="line"></div><div class="line"><span class="comment">// 过滤函数用于过滤数组</span></div><div class="line"><span class="comment">// 参数1 待过滤的数组</span></div><div class="line"><span class="comment">// 参数2 过滤数组的具体函数</span></div><div class="line"><span class="comment">// 参数3 布尔类型的值</span></div><div class="line"><span class="comment">// 为true则函数返回数组中由过滤函数返回 true 的元素</span></div><div class="line"><span class="comment">//      为false则函数返回数组中由过滤函数返回false的元素</span></div><div class="line">grep: <span class="function"><span class="keyword">function</span>(<span class="params"> elems, callback, invert </span>) </span>&#123;</div><div class="line"></div><div class="line"><span class="comment">//初始化一堆的变量</span></div><div class="line"><span class="keyword">var</span> callbackInverse,</div><div class="line">matches = [],   <span class="comment">//空数组</span></div><div class="line">i = <span class="number">0</span>,<span class="comment">//索引值为0</span></div><div class="line">length = elems.length,<span class="comment">//待过滤数组的长度</span></div><div class="line">callbackExpect = !invert;</div><div class="line"></div><div class="line"><span class="comment">// Go through the array, only saving the items</span></div><div class="line"><span class="comment">// that pass the validator function</span></div><div class="line"><span class="keyword">for</span> ( ; i &lt; length; i++ ) &#123;</div><div class="line"><span class="comment">//每循环一次就把当前的元素和对应的索引传递给回调函数，并保存回调函数的返回值取反</span></div><div class="line">callbackInverse = !callback( elems[ i ], i );</div><div class="line"><span class="keyword">if</span> ( callbackInverse !== callbackExpect ) &#123;</div><div class="line"><span class="comment">//把过滤后的元素收集保存到新的数组中</span></div><div class="line">matches.push( elems[ i ] );</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//返回过滤后得到的数据，是一个新的数组</span></div><div class="line"><span class="keyword">return</span> matches;</div><div class="line">&#125;,</div><div class="line"></div><div class="line"><span class="comment">// arg is for internal usage only</span></div><div class="line"><span class="comment">// arg仅用于内部使用的情况</span></div><div class="line"><span class="comment">// 数组映射方法( 将一个数组中的元素转换到另一个数组中 )</span></div><div class="line"><span class="comment">// 参数1 ：待处理的数组</span></div><div class="line"><span class="comment">// 参数2 : 具体的处理函数</span></div><div class="line"><span class="comment">// 参数3 : arg</span></div><div class="line">map: <span class="function"><span class="keyword">function</span>(<span class="params"> elems, callback, arg </span>) </span>&#123;</div><div class="line"></div><div class="line"><span class="comment">//初始化一堆的变量</span></div><div class="line"><span class="keyword">var</span> length, value,</div><div class="line">i = <span class="number">0</span>,<span class="comment">//索引值为0</span></div><div class="line">ret = [];<span class="comment">//ret为空的数组</span></div><div class="line"></div><div class="line"><span class="comment">// Go through the array, translating each of the items to their new values</span></div><div class="line"><span class="comment">// 遍历数组把数组中的每一项都转换为一个新的值</span></div><div class="line"></div><div class="line"><span class="comment">//检查是否是伪数组</span></div><div class="line"><span class="keyword">if</span> ( isArrayLike( elems ) ) &#123;</div><div class="line">length = elems.length;<span class="comment">//获取待处理的伪数组的长度</span></div><div class="line"><span class="keyword">for</span> ( ; i &lt; length; i++ ) &#123;</div><div class="line"><span class="comment">//循环，每循环一次就调用处理函数并把当前的key和value值作为参数传递进去</span></div><div class="line"><span class="comment">//收集回调函数的返回值</span></div><div class="line">value = callback( elems[ i ], i, arg );</div><div class="line"></div><div class="line"><span class="comment">//如果回调函数的范返回值不为空，那么就把该返回值添加到数组中并最终返回</span></div><div class="line"><span class="keyword">if</span> ( value != <span class="literal">null</span> ) &#123;</div><div class="line">ret.push( value );</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Go through every key on the object,</span></div><div class="line"><span class="comment">//如果是普通的对象，那么就使用for...in循环来进行遍历</span></div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line"><span class="keyword">for</span> ( i <span class="keyword">in</span> elems ) &#123;</div><div class="line">value = callback( elems[ i ], i, arg );</div><div class="line"></div><div class="line"><span class="keyword">if</span> ( value != <span class="literal">null</span> ) &#123;</div><div class="line">ret.push( value );</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Flatten any nested arrays</span></div><div class="line"><span class="comment">// 等价于 [].concat(ret) 问题：为什么不直接范湖ret数组呢？</span></div><div class="line"><span class="keyword">return</span> concat.apply( [], ret );</div><div class="line">&#125;,</div><div class="line"></div><div class="line"><span class="comment">// A global GUID counter for objects</span></div><div class="line"><span class="comment">// 全局的GUID计数器</span></div><div class="line">guid: <span class="number">1</span>,</div><div class="line"></div><div class="line"><span class="comment">// jQuery.support is not used in Core but other projects attach their</span></div><div class="line"><span class="comment">// properties to it so it needs to exist.</span></div><div class="line">        <span class="comment">// 就是个空对象 &#123;&#125; 不在核心中使用，但其他项目将它们的属性附加到它，因此它需要存在。</span></div><div class="line">support: support</div><div class="line">&#125; );</div></pre></td></tr></table></figure><h3 id="2-0-jQuery框架的插件处理机制"><a href="#2-0-jQuery框架的插件处理机制" class="headerlink" title="2.0 jQuery框架的插件处理机制"></a>2.0 jQuery框架的插件处理机制</h3><p>jQuery框架中上面列出的这几百行代码主要做了两件事情。</p><blockquote><p>❏ 在jQuery的基础上拓展了<code>jQuery.extend</code>方法和<code>jQuery.fn.extend</code>方法。<br>❏ 调用<code>jQuery.extend</code>方法来为jQuery批量的添加一堆的静态方法(如<code>map</code>和<code>grep</code>等)。</p></blockquote><p><span style="border:1px solid #000;padding:5px 20px;"><strong>jQuery插件方法的实现</strong></span></p><p>jQuery官方框架中在实现<code>jQuery.extend</code>和<code>jQuery.fn.extend</code>这两个方法的时候用了接近80行代码，具体的实现细节比较复杂，这里给出一个简易版本来帮助大家理解这两个方法都做了什么事情。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">jQuery.extend = jQuery.fn.extend = <span class="function"><span class="keyword">function</span> (<span class="params">objT</span>) </span>&#123;</div><div class="line">    <span class="comment">//遍历参数对象，获取对象中的每个成员添加在jQuery或者是jQuery.fn对象。</span></div><div class="line"> <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> objT)</div><div class="line"> &#123;</div><div class="line">     <span class="comment">// 过滤掉原型对象的成员，如果仅仅只处理函数还可以对参数的类型进行判断</span></div><div class="line"> <span class="keyword">if</span> (<span class="built_in">Object</span>.hasOwnProperty(key))</div><div class="line"> &#123;</div><div class="line">     <span class="comment">//this的值由函数的调用方式决定</span></div><div class="line">    <span class="keyword">this</span>[key] = objT[key];</div><div class="line"> &#125;</div><div class="line"> &#125;</div><div class="line">     &#125;;</div></pre></td></tr></table></figure><p><img src="https://github.com/flowerField/Source/blob/master/Blog/jq_03.png?raw=true"></p><p>其实简单点说，这两个的方法的功能就是把传递给他们的参数(对象类型)中的所有成员都添加到对应的对象中(<span style="color:#195">如果是jQuery.fn.extend方法，那么就添加到jQuery的原型对象身上作为原型成员来使用，如果是jQuery.extend方法，则直接添加到jQuery身上作为静态方法来使用</span>)。</p><p>在这两个方法的实现中巧妙利用了this指向的对象由函数调用方式决定这一特点，做到<code>jQuery.extend = jQuery.fn.extend</code>。也因此，虽然在<code>jQuery.extend方法</code>和<code>jQuery.fn.extend方法</code>的函数体相同，但由于内部使用了this的缘故，所以在单独调用这两个方法的时候它们是区分处理的。</p><p><span style="border:1px solid #000;padding:5px 20px;"><strong>jQuery插件方法的调用</strong></span></p><p>这里给出上面代码中jQuery.extend()调用的简化版本。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">jQuery.extend(&#123;</div><div class="line">    <span class="comment">//判断指定参数是否是一个纯粹的对象</span></div><div class="line">    isPlainObject:<span class="function"><span class="keyword">function</span>(<span class="params">obj</span>)</span>&#123;&#125;,</div><div class="line"></div><div class="line">    <span class="comment">//判断指定参数是否是一个空的对象</span></div><div class="line">    isEmptyObject:<span class="function"><span class="keyword">function</span>(<span class="params">obj</span>)</span>&#123;&#125;,</div><div class="line"></div><div class="line">    <span class="comment">//迭代方法，用来遍历对象、数组和伪数组</span></div><div class="line">    each:<span class="function"><span class="keyword">function</span>(<span class="params"> obj, callback</span>)</span>&#123;&#125;,</div><div class="line"></div><div class="line">    <span class="comment">//清除字符串前后的N个空格，同ES5中字符串的trim方法</span></div><div class="line">    trim:<span class="function"><span class="keyword">function</span>(<span class="params">text</span>)</span>&#123;&#125;,</div><div class="line"></div><div class="line">    <span class="comment">//把伪数组对象转换为数组</span></div><div class="line">    makeArray：<span class="function"><span class="keyword">function</span>(<span class="params">arr, results </span>)</span>&#123;&#125;,</div><div class="line"></div><div class="line">    <span class="comment">//该方法用于在数组中搜索指定的值，并返回其索引值。</span></div><div class="line">    inArray:<span class="function"><span class="keyword">function</span>(<span class="params">elem, arr, i</span>) </span>&#123;&#125;,</div><div class="line"></div><div class="line">    <span class="comment">//该方法用于合并两个数组</span></div><div class="line">    merge:<span class="function"><span class="keyword">function</span>(<span class="params">first, second </span>)</span>&#123;&#125;,</div><div class="line"></div><div class="line">    <span class="comment">//这是一个过滤函数，主要用于过滤数组</span></div><div class="line">    grep: <span class="function"><span class="keyword">function</span>(<span class="params"> elems, callback, invert </span>) </span>&#123;&#125;</div><div class="line"></div><div class="line">    <span class="comment">//数组映射方法，把一个数组中的元素转换到另一个数组中</span></div><div class="line">    map:<span class="function"><span class="keyword">function</span>(<span class="params"> elems, callback, arg </span>) </span>&#123;&#125;</div><div class="line"></div><div class="line">&#125;)</div></pre></td></tr></table></figure></p><p><code>jQuery.extend() 和jQuery.fn.extend()</code>这两个方法在jQuery框架中被大量使用，绝大多数的方法均通过调用者两个函数来添加到jQuery身上或者是jQuery的原型对象身上，这种为jQuery和jQuery原型对象拓展方法(功能)的机制被称为<strong>插件机制</strong>。jQuery框架的官方团队维护了一个<a href="https://plugins.jquery.com/" target="_blank" rel="external">jQuery官方插件列表</a>，我们可以在使用jQuery的基础上通过引入对应的jQuery插件来快速实现特定的功能。当然，除jQuery官方团队维护的插件之外，我们还能在互联网上找到很多其它开发人员为jQuery写的一些优秀插件，在具体的开发中可以根据项目的需求来综合评估是否直接使用jQuery插件来实现。</p><p>总体来说，jQuery的插件实现是比较简单的。如果你想要自己写一个jQuery插件，那么只需要创建一个新的js文件，该文件推荐命名为<code>jQuery.xx.js</code>的形式。然后在js代码中通过调用<code>jQuery.extend() 和jQuery.fn.extend()</code>方法来拓展功能即可。</p><div class="tip">常见的插件实现形式是：把对应的代码包裹到闭包中，然后传递jQuery对象。</div><hr><ul><li>Posted by 博客园·<a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a> | <a href="http://wendingding.com" target="_blank" rel="external">花田半亩</a></li><li>联系作者 简书·<a href="http://www.jianshu.com/users/c5703017b9f5/latest_articleshttp://www.jianshu.com/users/c5703017b9f5/latest_articles" target="_blank" rel="external">文顶顶</a> 新浪微博·<a href="http://weibo.com/p/1005053800117445/home?from=page_100505&amp;mod=TAB#place">Coder_文顶顶</a></li><li>原创文章，版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;这篇文章将主要介绍jQuery框架的插件机制，包括但不限于&lt;code&gt;jQuery.extend&lt;/code&gt;和&lt;code&gt;jQuery.fn.extend&lt;/code&gt;方法的设计和使用，JavaScript体系中的常用概念以及jQuery插件的使
      
    
    </summary>
    
    
      <category term="jQuery框架系列" scheme="https://weibo.com/u/3800117445/tags/jQuery%E6%A1%86%E6%9E%B6%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序基础[12]-小程序中的基础组件(四)</title>
    <link href="https://weibo.com/u/3800117445/2018/10/08/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%8F%E5%88%97%5B12%5D-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6(%E5%9B%9B)/"/>
    <id>https://weibo.com/u/3800117445/2018/10/08/微信小程序序列[12]-小程序中的基础组件(四)/</id>
    <published>2018-10-07T16:00:09.000Z</published>
    <updated>2018-11-11T13:30:01.323Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文介绍小程序中的基础组件，主要包括form表单、radio和label等组件的基本使用和综合示例。</p></blockquote><h4 id="1-0-form表单组件"><a href="#1-0-form表单组件" class="headerlink" title="1.0 form表单组件"></a>1.0 form表单组件</h4><p><a href="https://developers.weixin.qq.com/miniprogram/dev/component/form.html" target="_blank" rel="external">form表单组件</a>在小程序开发中常用于收集和获取用户输入(选择)的数据，属于表单类组件，小程序本身的特点决定了我们在对页面进行操作的时候无法像前端开发中那样可以用DOM或一些选择器引擎框架来处理。因此，在特定的场景中form表单组件就成为了必要的几乎也是唯一的选择，它能够将组件内用户输入的<code>switch</code>、<code>input</code>、 <code>checkbox</code>、<code>slider</code>、<code>radio</code>和<code>picker</code>等组件的信息提交，通过触发绑定事件在回调函数的事件对象参数来获取对应的数据。</p><p><strong>这里列出form表单组件的主要属性</strong></p><p><span class="propWX-green bg-red">bindreset</span>     form表单重置时会触发reset事件。<br><span class="propWX-green bg-red">bindsubmit</span>     form表单提交时会触发submit事件。<br><span class="propWX-green ">report-submit</span>     是否返回 formId ，用于发送模板消息，布尔类型，默认值为false。</p><p>在使用的<a href="https://developers.weixin.qq.com/miniprogram/dev/component/form.html" target="_blank" rel="external">form表单组件</a>的时候需要注意，表单组件的<code>submit</code>和<code>reset</code>事件触发的方式比较特殊，需要和整个表单组件中<code>formType 为 submit 或 reset</code>的 <a href="https://developers.weixin.qq.com/miniprogram/dev/component/button.html" target="_blank" rel="external">button组件</a> 相关联。</p><p>也就是说，当form组件内部包含的拥有formType属性且其值为submit的button组件被点击时，才会触发并执行form组件中<code>bindsubmit</code>事件绑定的回调函数，表示要提交整个表单中的数据。这时，我们可以通过在回调函数中事件对象的detail属性来获取这些数据。</p><div class="tip"><br>form组件内部其他表单类型组件的数据在提交的时候总是要以键值对(<code>key-value</code>)的方式进行处理，所以需要给每个表单类型的组件设置name属性来确定其key值。<br></div><h4 id="2-0-单项选择器组件-radio-group-和-radio"><a href="#2-0-单项选择器组件-radio-group-和-radio" class="headerlink" title="2.0 单项选择器组件( radio-group 和 radio )"></a>2.0 单项选择器组件( radio-group 和 radio )</h4><p><a href="https://developers.weixin.qq.com/miniprogram/dev/component/radio.html" target="_blank" rel="external">单项选择器组件</a>其实由<code>radio-group</code>和<code>radio</code>两个具体的组件构成。</p><p><code>radio组件</code>表示的是每一个的单选项目，而<code>radio-group</code>用来包裹住多个单选项目。</p><p><span style="border:1px solid #000;padding:0 10px;background:#FFE7BA"><strong>radio组件</strong></span><br><span class="propWX-green ">color</span>     radio选中的颜色。<br><span class="propWX-green bg-red">value</span>     当前radio选项的值。<br><span class="propWX-green ">disabled</span>     当前radio选项是否被禁用，布尔类型，默认值为false。<br><span class="propWX-green ">checked</span>     当前radio是否被选中，布尔类型，具有排它性会覆盖。</p><p><span style="border:1px solid #000;padding:0 10px;background:#FFE7BA"><strong>radio-group组件</strong></span><br><span class="propWX-green ">bindchange</span>    当选中项发生变化时触发<code>change事件</code>并执行绑定的方法，可通过事件对象来获取当前选中项的值<code>(事件对象.detail</code>)。</p><h4 id="3-0-label组件"><a href="#3-0-label组件" class="headerlink" title="3.0 label组件"></a>3.0 label组件</h4><p><a href="https://developers.weixin.qq.com/miniprogram/dev/component/label.html" target="_blank" rel="external">label组件</a>主要用来改进表单组件的可用性。在label组件中拥有唯一的for属性，通过该属性可以找到对应的id，或者将其他的组件放在该标签下，当点击时对应的组件会被触发。</p><p><span class="propWX-green ">for</span>     该属性值对应为绑定组件的id。</p><p><strong>注意</strong> label组件中for属性的优先级高于内部组件，内部有多个组件的时候默认触发第一个。目前可以绑定的组件有主要有：<code>button</code>组件, <code>checkbox</code>组件, <code>radio</code>组件和 <code>switch</code>组件。</p><p><strong>label组件的使用示例</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">style</span>=<span class="string">'width:100%;height:500rpx;background:#239120'</span> <span class="attr">for</span>=<span class="string">'testID'</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">checkbox-group</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">value</span>=<span class="string">'韩寒'</span>&gt;</span>韩寒<span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">value</span>=<span class="string">'白百何'</span>&gt;</span>白百何<span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">checkbox-group</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">radio-group</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">radio</span> <span class="attr">id</span>=<span class="string">'testID'</span> <span class="attr">value</span>=<span class="string">'男'</span>&gt;</span>男<span class="tag">&lt;/<span class="name">radio</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">radio</span> <span class="attr">value</span>=<span class="string">'女'</span>&gt;</span>女<span class="tag">&lt;/<span class="name">radio</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">radio-group</span>&gt;</span></div><div class="line"></div><div class="line">我是label中的内容</div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div></pre></td></tr></table></figure></p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx28.gif?raw=true"></p><h4 id="4-0-多种组件使用的综合案例"><a href="#4-0-多种组件使用的综合案例" class="headerlink" title="4.0 多种组件使用的综合案例"></a>4.0 多种组件使用的综合案例</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">//001 wxml文件的内容</div><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">bindsubmit</span>=<span class="string">'submitClick'</span> <span class="attr">bindreset</span>=<span class="string">'resetClick'</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">'请输入用户名'</span> <span class="attr">name</span>=<span class="string">'username'</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">'请输入密码'</span> <span class="attr">name</span>=<span class="string">'password'</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">radio-group</span> <span class="attr">name</span>=<span class="string">'director'</span>  <span class="attr">bindchange</span>=<span class="string">"radioChange"</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span>请选择导演<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">bindtap</span>=<span class="string">'labClick'</span> <span class="attr">wx:key</span>=<span class="string">'index'</span> <span class="attr">wx:for</span>=<span class="string">"&#123;&#123;dataArray&#125;&#125;"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">radio</span> <span class="attr">value</span>=<span class="string">"&#123;&#123;item.name&#125;&#125;"</span> <span class="attr">checked</span>=<span class="string">"&#123;&#123;item.checked&#125;&#125;"</span></span></div><div class="line"><span class="tag">     <span class="attr">disabled</span>=<span class="string">'&#123;&#123;item.disabled&#125;&#125;'</span> <span class="attr">color</span>=<span class="string">'&#123;&#123;item.color&#125;&#125;'</span>/&gt;</span> &#123;&#123;item.name&#125;&#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- 注意：此处使用label和block都可以，但是不能把wx:for等指令直接用在radio组件 --&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">radio-group</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">size</span>=<span class="string">'mini'</span> <span class="attr">formType</span>=<span class="string">'submit'</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">size</span>=<span class="string">'mini'</span> <span class="attr">formType</span>=<span class="string">'reset'</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">//002 wxss文件的内容</div><div class="line"><span class="selector-tag">input</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</div><div class="line">  <span class="attribute">margin</span>: <span class="number">10</span>rpx <span class="number">10</span>rpx;</div><div class="line">  <span class="attribute">padding-left</span>: <span class="number">20</span>rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">view</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">height</span>: <span class="number">100</span>rpx;</div><div class="line">  <span class="attribute">line-height</span>: <span class="number">100</span>rpx;</div><div class="line">  <span class="attribute">padding</span>: <span class="number">20</span>rpx <span class="number">20</span>rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">radio-group</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">padding-bottom</span>: <span class="number">40</span>rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">button</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">margin-left</span>: <span class="number">30</span>rpx;</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//003 js文件的内容</span></div><div class="line">Page(&#123;</div><div class="line">  data:&#123;</div><div class="line">    dataArray:[</div><div class="line">      &#123;<span class="attr">name</span>: <span class="string">'黄渤'</span>, <span class="attr">color</span>:<span class="string">"red"</span> &#125;,</div><div class="line">      &#123;<span class="attr">name</span>: <span class="string">'徐峥'</span>, <span class="attr">checked</span>: <span class="string">'true'</span> &#125;,</div><div class="line">      &#123;<span class="attr">name</span>: <span class="string">'韩寒'</span>&#125;,</div><div class="line">      &#123;<span class="attr">name</span>: <span class="string">'吴京'</span>, <span class="attr">disabled</span>:<span class="literal">true</span>&#125;</div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  labClick:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"labClick+++"</span>)</div><div class="line">  &#125;,</div><div class="line">  submitClick:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"表单组件提交事件---submitClick"</span>);</div><div class="line">    <span class="built_in">console</span>.log(e.detail.value);</div><div class="line">  &#125;,</div><div class="line">  resetClick:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"表单组件重置事件---resetClick"</span>);</div><div class="line">  &#125;,</div><div class="line">  radioChange:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"redio-group中的选中项发生变化--radioChange"</span>)</div><div class="line">    <span class="built_in">console</span>.log(e.detail);</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><p>这里贴出上面代码的实现效果图。<br><img src="https://github.com/flowerField/Source/blob/master/Blog/wx27.gif?raw=true"></p><hr><ul><li>Posted by 博客园·<a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a> | <a href="http://wendingding.com" target="_blank" rel="external">花田半亩</a></li><li>联系作者 简书·<a href="http://www.jianshu.com/users/c5703017b9f5/latest_articleshttp://www.jianshu.com/users/c5703017b9f5/latest_articles" target="_blank" rel="external">文顶顶</a> 新浪微博·<a href="http://weibo.com/p/1005053800117445/home?from=page_100505&amp;mod=TAB#place">Coder_文顶顶</a></li><li>原创文章，版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文介绍小程序中的基础组件，主要包括form表单、radio和label等组件的基本使用和综合示例。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;1-0-form表单组件&quot;&gt;&lt;a href=&quot;#1-0-form表单组件&quot; class=&quot;he
      
    
    </summary>
    
    
      <category term="微信小程序序列" scheme="https://weibo.com/u/3800117445/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%8F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序基础[11]-小程序中的基础组件(三)</title>
    <link href="https://weibo.com/u/3800117445/2018/10/07/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%8F%E5%88%97%5B11%5D-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6(%E4%B8%89)/"/>
    <id>https://weibo.com/u/3800117445/2018/10/07/微信小程序序列[11]-小程序中的基础组件(三)/</id>
    <published>2018-10-06T16:00:09.000Z</published>
    <updated>2018-11-11T13:30:01.300Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文介绍小程序中的基础组件，主要包括swiper、scroll-view等组件的基本使用和综合示例。</p></blockquote><h4 id="1-0-swiper组件"><a href="#1-0-swiper组件" class="headerlink" title="1.0 swiper组件"></a>1.0 swiper组件</h4><p><a href="https://developers.weixin.qq.com/miniprogram/dev/component/swiper.html" target="_blank" rel="external">swiper组件</a>是小程序中使用频次最高的组件之一，属于视图容器类组件，它通过对自身属性进行简单配置就可以实现在前端开发中要写很多代码才能完成的轮播图效果。</p><p>随手截取几个小程序中swiper组件的使用情况，给出贴图。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx22.png?raw=true"></p><p><strong>这里列出swiper组件的主要属性</strong></p><p><span class="propWX-green bg-red">autoplay</span>    是否自动切换，布尔类型，默认值为false。<br><span class="propWX-green ">circular</span>    是否采用衔接滑动，布尔类型，默认值为false。<br><span class="propWX-green bg-red">duration</span>    控制滑块的动画时间，数值类型，默认值为500，单位是毫秒。<br><span class="propWX-green bg-red">interval</span>    控制自动切换的时间间隔，数值类型，默认值为5000，单位是毫秒。<br><span class="propWX-green ">vertical</span>    控制滑块是否为纵向，布尔类型，默认值为false，设置为true表示纵向。</p><p><span class="propWX-green ">indicator-color</span>显示面板指示点的默认颜色。<br><span class="propWX-green ">indicator-active-color</span>当前选中(显示)的面板指示点的颜色。<br><span class="propWX-green bg-red">indicator-dots</span>    是否显示面板指示点，布尔类型，默认值为false表示不显示。</p><p><span class="propWX-green ">current</span>当前所在滑块的索引(<code>index</code>)，数值类型，默认值为0，可以指定。<br><span class="propWX-green ">display-multiple-items</span> 能够同时显示的滑块数量，数值类型，默认能同时只能显示1个滑块。<br><span class="propWX-green ">bindchange</span> 当滑块的current改变时会触发该事件并执行绑定的方法，事件类型。<br><span class="propWX-green ">bindanimationfinish</span> 当滑块动画结束的时候会触发该事件并执行绑定的方法，事件类型。</p><p><strong>备注001</strong> 该组件中其它的诸如<code>previous-margin</code>（前边距）| <code>next-margin</code>（后边距） | <code>skip-hidden-item-layout</code>（是否跳过未布局滑块）|<code>current-item-id</code>（当前滑块所在的item-id）等不常用属性请自行查阅<a href="https://developers.weixin.qq.com/miniprogram/dev/component/swiper.html" target="_blank" rel="external">官方文档</a>。</p><p><strong>备注002</strong> <span style="color:red">swiper-item</span> 该组件可以且仅可放置在<swiper>组件中，宽高自动设置为100%。</swiper></p><div class="tip"><strong>注意</strong> 在swiper组件中仅可以直接放置swiper-item组件，否则会导致未定义的行为。如果需要配合使用wx:for等指令那么可以使用<code>block</code>标签来进行包裹。</div><p><strong>这里我们以”花点时间的店”这个小程序的轮播图</strong>的实现为例给出示例代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">//001 wxml文件中的代码</div><div class="line"><span class="tag">&lt;<span class="name">swiper</span> <span class="attr">indicator-dots</span>=<span class="string">"&#123;&#123;indicatorDots&#125;&#125;"</span> <span class="attr">autoplay</span> <span class="attr">interval</span>=<span class="string">"&#123;&#123;interval&#125;&#125;"</span></span></div><div class="line"><span class="tag">   <span class="attr">duration</span>=<span class="string">"&#123;&#123;duration&#125;&#125;"</span> <span class="attr">circular</span>  <span class="attr">indicator-active-color</span>=<span class="string">"&#123;&#123;activeColor&#125;&#125;"</span></span></div><div class="line"><span class="tag">   <span class="attr">bindanimationfinish</span>=<span class="string">'animationFinish'</span> <span class="attr">bindchange</span>=<span class="string">'currentIndexChange'</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">"&#123;&#123;dataArray&#125;&#125;"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">swiper-item</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;item&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"slide-image"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">block</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">swiper</span>&gt;</span></div><div class="line"></div><div class="line">//注释：</div><div class="line">//indicator-dots 该属性控制显示面板知识点</div><div class="line">//interval：动画自动切换的时间，这里设置为3000</div><div class="line">//duration：滑块动画的时间，这里设置为500，其实默认就是500(可以不用设置)</div><div class="line">//circular：使用衔接动画，个人感觉这样效果更好一些，不会跳转到开头重新开始</div><div class="line">//indicator-active-color:给当前滑块的面板知识点设置为红色以区分</div><div class="line">//bindanimationfinish: 注册了动画执行完毕后的事件，对应js文件中的animationFinish方法</div><div class="line">//bindchange:注册了当前滑块切换的事件，对应js文件中的currentIndexChange方法</div></pre></td></tr></table></figure></p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">//002 wxss文件中的样式设置</div><div class="line"><span class="selector-tag">swiper</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">width</span>: <span class="number">750</span>rpx;</div><div class="line">  <span class="attribute">height</span>: <span class="number">750</span>rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.slide-image</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">width</span>: <span class="number">750</span>rpx;</div><div class="line">  <span class="attribute">height</span>: <span class="number">750</span>rpx;</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//003 js文件中的代码</span></div><div class="line">Page(&#123;</div><div class="line">  data: &#123;</div><div class="line">    activeColor:<span class="string">"red"</span>,</div><div class="line">    interval:<span class="number">3000</span>,</div><div class="line">    duration:<span class="number">500</span>,</div><div class="line">    indicatorDots:<span class="literal">true</span>,</div><div class="line">    dataArray:[</div><div class="line">      <span class="string">"https://github.com/flowerField/Source/blob/master/Blog/flower001.jpg?raw=true"</span>,</div><div class="line">      <span class="string">"https://github.com/flowerField/Source/blob/master/Blog/flower002.jpg?raw=true"</span>,</div><div class="line">      <span class="string">"https://github.com/flowerField/Source/blob/master/Blog/flower003.jpg?raw=true"</span>,</div><div class="line">      <span class="string">"https://github.com/flowerField/Source/blob/master/Blog/flower004.jpg?raw=true"</span>,</div><div class="line">      <span class="string">"https://github.com/flowerField/Source/blob/master/Blog/flower005.jpg?raw=true"</span>,</div><div class="line">      <span class="string">"https://github.com/flowerField/Source/blob/master/Blog/flower006.jpg?raw=true"</span>,</div><div class="line">      <span class="string">"https://github.com/flowerField/Source/blob/master/Blog/flower007.jpg?raw=true"</span>,</div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  animationFinish:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(<span class="string">"动画执行完毕---"</span>,e.detail);</div><div class="line">  &#125;,</div><div class="line">  currentIndexChange:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span></div><div class="line"><span class="function">  </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"当前的滑块切换了"</span>, e.detail);</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><p>这里给出上面的代码编译后在小程序中呈现的效果图。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx25.gif?raw=true"></p><h4 id="2-0-scroll-view组件"><a href="#2-0-scroll-view组件" class="headerlink" title="2.0 scroll-view组件"></a>2.0 scroll-view组件</h4><p><a href="https://developers.weixin.qq.com/miniprogram/dev/component/scroll-view.html" target="_blank" rel="external">scroll-view</a>是小程序中的可滚动视图组件，支持竖向滚动和横向滚动，这里给出该组件在商业小程序中的应用示意图。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx24.gif?raw=true"></p><p><strong>列出scroll-view组件的主要属性</strong></p><p><span class="propWX-green bg-red">scroll-x</span>    允许横向滚动，布尔类型，默认值为false。<br><span class="propWX-green">scroll-y</span>    允许纵向滚动，布尔类型，默认值为false。<br><span class="propWX-green">scroll-top</span>    设置竖向滚动条的位置，数值类型。<br><span class="propWX-green">scroll-left</span>    设置横向滚动条的位置，数值类型。</p><p><span class="propWX-green ">scroll-with-animation</span>    在设置滚动条位置时使用动画过渡，布尔类型，默认值为false。<br><span class="propWX-green ">upper-threshold</span>    距顶部/左边多远时（单位px），触发<code>scrolltoupper事件</code>，默认值为50。<br><span class="propWX-green ">lower-threshold</span>    距底部/右边多远时（单位px），触发<code>scrolltolower事件</code>，默认值为50。<br><span class="propWX-green ">scroll-into-view</span>    其值应为某子元素id，表示在特定的方向上滚动到该元素。<br><span class="propWX-green ">enable-back-to-top</span>    iOS点击顶部状态栏、安卓双击标题栏时，滚动条返回顶部，只支持竖向。</p><p><span class="propWX-green bg-red">bindscroll</span>    当组件滚动的时候会触发该事件，相关的数据保存在event.detail对象中。<br><span class="propWX-green bg-red">bindscrolltoupper</span>    当组件滚动到顶部/左边的时候会触发<code>scrolltoupper事件</code>。<br><span class="propWX-green bg-red">bindscrolltolower</span>    当组件滚动到底部/右边的时候会触发<code>scrolltolower事件</code>。</p><p><strong>这里我们给出实现上面滚动效果的代码示例</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">//001 wxml文件中的内容</div><div class="line"><span class="tag">&lt;<span class="name">scroll-view</span> <span class="attr">class</span>=<span class="string">'scroll-view-class'</span>  <span class="attr">scroll-x</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'scroll-cell'</span> <span class="attr">wx:for</span>=<span class="string">'&#123;&#123;productData&#125;&#125;'</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'scroll-cell-view'</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">'&#123;&#123;item.head_pic_url&#125;&#125;'</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'scroll-cell-description'</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'scroll-cell-description-name'</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'scroll-cell-description-top'</span>&gt;</span>top &#123;&#123;index + 1&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'scroll-cell-price'</span>&gt;</span>￥&#123;&#123;item.price&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">scroll-view</span>&gt;</span></div></pre></td></tr></table></figure></p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line">//002 wxss文件中的内容</div><div class="line"></div><div class="line"><span class="selector-tag">page</span>&#123;</div><div class="line">  <span class="attribute">background</span>: <span class="number">#eee</span>;</div><div class="line">  <span class="attribute">display</span>: block;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.scroll-view-class</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">width</span>: <span class="number">750</span>rpx;</div><div class="line">  <span class="attribute">height</span>: <span class="number">500</span>rpx;</div><div class="line">  <span class="attribute">display</span>: flex;</div><div class="line">  <span class="attribute">white-space</span>: nowrap;</div><div class="line">  <span class="attribute">margin-top</span>: <span class="number">20</span>rpx;</div><div class="line">  <span class="attribute">background</span>: <span class="number">#fff</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.scroll-cell</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">width</span>: <span class="number">250</span>rpx;</div><div class="line">  <span class="attribute">height</span>: <span class="number">480</span>rpx;</div><div class="line">  <span class="attribute">display</span>: inline-block;</div><div class="line">  <span class="attribute">margin-right</span>: <span class="number">20</span>rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.scroll-cell-view</span> <span class="selector-tag">image</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">width</span>: <span class="number">250</span>rpx;</div><div class="line">  <span class="attribute">height</span>: <span class="number">300</span>rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.scroll-cell-description</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">width</span>: <span class="number">250</span>rpx;</div><div class="line">  <span class="attribute">height</span>: <span class="number">100</span>rpx;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">25</span>rpx;</div><div class="line">  <span class="attribute">position</span>: relative;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.scroll-cell-description-name</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">width</span>: <span class="number">130</span>rpx;</div><div class="line">  <span class="attribute">height</span>: <span class="number">100</span>rpx;</div><div class="line">  <span class="attribute">line-height</span>: <span class="number">50</span>rpx;</div><div class="line">  <span class="attribute">white-space</span>: normal;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.scroll-cell-description-top</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">width</span>: <span class="number">80</span>rpx;</div><div class="line">  <span class="attribute">height</span>: <span class="number">40</span>rpx;</div><div class="line">  <span class="attribute">border</span>: <span class="number">1</span>rpx solid <span class="number">#333</span>;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">  <span class="attribute">left</span>: <span class="number">150</span>rpx;</div><div class="line">  <span class="attribute">top</span>: <span class="number">30</span>rpx;</div><div class="line">  <span class="attribute">text-align</span>: center;</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//003 js文件中的内容</span></div><div class="line">Page(&#123;</div><div class="line"> data:&#123;</div><div class="line">   productData: [</div><div class="line">     &#123;</div><div class="line">       <span class="string">"id"</span>: <span class="string">"700005"</span>,</div><div class="line">       <span class="string">"head_pic_url"</span>: <span class="string">"https://qnoutbucket.immatchu.com/2018_9_18_058df245-8323-4afa-be14-918344e8db5e.jpg"</span>,</div><div class="line">       <span class="string">"name"</span>: <span class="string">"白色厚款竹纤维衬衫"</span>,</div><div class="line">       <span class="string">"price"</span>: <span class="string">"199.00"</span>,</div><div class="line">       <span class="string">"sales_volume"</span>: <span class="number">10188</span></div><div class="line">     &#125;,</div><div class="line">     &#123;</div><div class="line">       <span class="string">"id"</span>: <span class="string">"700004"</span>,</div><div class="line">       <span class="string">"head_pic_url"</span>: <span class="string">"https://qnoutbucket.immatchu.com/2018_9_18_2d04651f-178a-47a0-8a1b-d76610e61f5d.jpg"</span>,</div><div class="line">       <span class="string">"name"</span>: <span class="string">"藏青色厚款竹纤维衬衫"</span>,</div><div class="line">       <span class="string">"price"</span>: <span class="string">"199.00"</span>,</div><div class="line">       <span class="string">"sales_volume"</span>: <span class="number">6120</span></div><div class="line">     &#125;,</div><div class="line">     &#123;</div><div class="line">       <span class="string">"id"</span>: <span class="string">"700006"</span>,</div><div class="line">       <span class="string">"head_pic_url"</span>: <span class="string">"https://qnoutbucket.immatchu.com/2018_9_18_f2c106ac-3a25-4ec4-b93e-89deb4879152.jpg"</span>,</div><div class="line">       <span class="string">"name"</span>: <span class="string">"黑色厚款竹纤维衬衫"</span>,</div><div class="line">       <span class="string">"price"</span>: <span class="string">"199.00"</span>,</div><div class="line">       <span class="string">"sales_volume"</span>: <span class="number">5742</span></div><div class="line">     &#125;,</div><div class="line">     &#123;</div><div class="line">       <span class="string">"id"</span>: <span class="string">"700007"</span>,</div><div class="line">       <span class="string">"head_pic_url"</span>: <span class="string">"https://qnoutbucket.immatchu.com/2018_9_18_0bade22f-0a02-4ded-b57c-3eba62be59cb.jpg"</span>,</div><div class="line">       <span class="string">"name"</span>: <span class="string">"浅蓝色厚款竹纤维衬衫"</span>,</div><div class="line">       <span class="string">"price"</span>: <span class="string">"199.00"</span>,</div><div class="line">       <span class="string">"sales_volume"</span>: <span class="number">3843</span></div><div class="line">     &#125;,</div><div class="line">     &#123;</div><div class="line">       <span class="string">"id"</span>: <span class="string">"700077"</span>,</div><div class="line">       <span class="string">"head_pic_url"</span>: <span class="string">"https://qiniucdn.immatchu.com/mumall/image/new_head_pic/700077_head.jpg"</span>,</div><div class="line">       <span class="string">"name"</span>: <span class="string">"浅蓝灰经典平绒牛津纺衬衫"</span>,</div><div class="line">       <span class="string">"price"</span>: <span class="string">"199.00"</span>,</div><div class="line">       <span class="string">"sales_volume"</span>: <span class="number">3375</span></div><div class="line">     &#125;,</div><div class="line">     &#123;</div><div class="line">       <span class="string">"id"</span>: <span class="string">"700112"</span>,</div><div class="line">       <span class="string">"head_pic_url"</span>: <span class="string">"https://qiniucdn.immatchu.com/mumall/image/new_head_pic/700112_head.jpg"</span>,</div><div class="line">       <span class="string">"name"</span>: <span class="string">"水磨黑混纺休闲西裤"</span>,</div><div class="line">       <span class="string">"price"</span>: <span class="string">"299.00"</span>,</div><div class="line">       <span class="string">"sales_volume"</span>: <span class="number">2889</span></div><div class="line">     &#125;,</div><div class="line">     &#123;</div><div class="line">       <span class="string">"id"</span>: <span class="string">"700105"</span>,</div><div class="line">       <span class="string">"head_pic_url"</span>: <span class="string">"https://qnoutbucket.immatchu.com/2018_9_20_98795e44-4f2f-4fa6-aaad-ef09e6f1e435.jpg"</span>,</div><div class="line">       <span class="string">"name"</span>: <span class="string">"水墨黑条纹弹力休闲西裤"</span>,</div><div class="line">       <span class="string">"price"</span>: <span class="string">"299.00"</span>,</div><div class="line">       <span class="string">"sales_volume"</span>: <span class="number">2538</span></div><div class="line">     &#125;,</div><div class="line">     &#123;</div><div class="line">       <span class="string">"id"</span>: <span class="string">"75"</span>,</div><div class="line">       <span class="string">"head_pic_url"</span>: <span class="string">"https://qnoutbucket.immatchu.com/2018_9_18_a64e80b0-60b2-4a8a-9b32-6918937ee642.jpg"</span>,</div><div class="line">       <span class="string">"name"</span>: <span class="string">"天蓝竹纤维衬衫"</span>,</div><div class="line">       <span class="string">"price"</span>: <span class="string">"199.00"</span>,</div><div class="line">       <span class="string">"sales_volume"</span>: <span class="number">2412</span></div><div class="line">     &#125;,</div><div class="line">     &#123;</div><div class="line">       <span class="string">"id"</span>: <span class="string">"700100"</span>,</div><div class="line">       <span class="string">"head_pic_url"</span>: <span class="string">"https://qiniucdn.immatchu.com/mumall/image/new_head_pic/700100_2018_9_13_514efbe4-c18b-440e-8e0c-27b44daa7113.jpg"</span>,</div><div class="line">       <span class="string">"name"</span>: <span class="string">"藏青色平纹棉休闲西裤"</span>,</div><div class="line">       <span class="string">"price"</span>: <span class="string">"399.00"</span>,</div><div class="line">       <span class="string">"sales_volume"</span>: <span class="number">2232</span></div><div class="line">     &#125;</div><div class="line">   ]</div><div class="line"> &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><p>这里贴出最终实现的效果图。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx26.gif?raw=true"></p><hr><ul><li>Posted by 博客园·<a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a> | <a href="http://wendingding.com" target="_blank" rel="external">花田半亩</a></li><li>联系作者 简书·<a href="http://www.jianshu.com/users/c5703017b9f5/latest_articleshttp://www.jianshu.com/users/c5703017b9f5/latest_articles" target="_blank" rel="external">文顶顶</a> 新浪微博·<a href="http://weibo.com/p/1005053800117445/home?from=page_100505&amp;mod=TAB#place">Coder_文顶顶</a></li><li>原创文章，版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文介绍小程序中的基础组件，主要包括swiper、scroll-view等组件的基本使用和综合示例。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;1-0-swiper组件&quot;&gt;&lt;a href=&quot;#1-0-swiper组件&quot; class=&quot;he
      
    
    </summary>
    
    
      <category term="微信小程序序列" scheme="https://weibo.com/u/3800117445/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%8F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>网络编程系列 Hexo + Github搭建个人博客</title>
    <link href="https://weibo.com/u/3800117445/2018/10/06/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E7%B3%BB%E5%88%97%20Hexo%20+%20gitub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"/>
    <id>https://weibo.com/u/3800117445/2018/10/06/网络编程系列 Hexo + gitub搭建个人博客教程/</id>
    <published>2018-10-06T05:12:13.000Z</published>
    <updated>2018-11-11T13:30:01.226Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-0-说明"><a href="#1-0-说明" class="headerlink" title="1.0 说明"></a>1.0 说明</h3><p>其实，搭建个人博客的技术方案有很多。</p><p>其实，你能找到的使用<code>Hexo + Github</code>搭建个人博客的教程也有很多。</p><p>所以，其实这是一篇没必要的文章，但因为种种原因我还是写了这篇简单的教程。</p><p>说明，这篇教程以<a href="http://www.wendingding.com" target="_blank" rel="external">我个人的技术博客为例</a>来演示使用<code>Hexo + Github</code>搭建个人博客的基本操作。</p><h3 id="2-0-步骤"><a href="#2-0-步骤" class="headerlink" title="2.0 步骤"></a>2.0 步骤</h3><p><span style="border:1px solid #000;padding:5px 20px;"> <strong>环境准备</strong><span></span></span></p><blockquote><p>❏ 系统中准备好<code>Git</code>的命令行工具。<br>❏ 系统中准备好<code>Node.js</code>和<code>npm</code>环境。<br>❏ 拥有<a href="https://github.com/" target="_blank" rel="external">Github网站</a>的账号，如果没有请登录官网按照提示注册。<br>❏ 若需给博客配置域名那么您可能还需要<a href="https://wanwang.aliyun.com/?spm=5176.8142029.digitalization.2.3dbd6d3eALueFf" target="_blank" rel="external">花一点点钱买个域名</a>，如果没这需求则可以忽略。</p></blockquote><p><strong>Git工具</strong> Windows操作系统可以使用cmd打开自带的命令行工具使用，但个人还是强烈建议您下载并安装<a href="https://git-scm.com/downloads" target="_blank" rel="external">Git for Windows工具</a>使用，下载并安装后在系统中任何文件夹中鼠标右键就可以看到<code>Git Bash Here</code>条目，点击即可打开命令行界面。Mac OSX操作系统中默认已经自带了git命令工具，可以打开终端直接使用。(<strong>备注 </strong> Mac打开终端的快捷方式：<code>control + 空格 + 搜索框输入Terminal + 回车键</code>)。Git工具准备好之后，可以通过<code>git --version</code>命令来查看系统当前安装的Git版本。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wendingding:~ wendingding$ git --version</div><div class="line">git version 2.11.0</div></pre></td></tr></table></figure></p><p><strong>Node和Npm</strong> 安装Node之后Npm会附带一起安装，所以我们只需要到<a href="https://nodejs.org/zh-cn/" target="_blank" rel="external">NodeJS的官网</a>下载对应版本安装到电脑系统中即可。安装完成后，可以使用命令行工具来查看当前版本。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wendingding:~ wendingding$ node --version &amp;&amp; npm -v</div><div class="line">v8.9.3</div><div class="line">5.5.1</div></pre></td></tr></table></figure></p><p><span style="border:1px solid #000;padding:5px 20px;"> <strong>Hexo的安装</strong><span></span></span></p><p>在自己电脑中合适的地方新建文件夹，比如我的路径是：<code>/Users/文顶顶/Blog</code>。然后在命令行工具中通过cd命令进入到该文件目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">wendingding:~ wendingding$ <span class="built_in">pwd</span></div><div class="line">/Users/文顶顶</div><div class="line">wendingding:~ wendingding$ <span class="built_in">cd</span> Desktop/</div><div class="line">wendingding:Desktop wendingding$ mkdir Blog</div><div class="line">wendingding:Desktop wendingding$ <span class="built_in">cd</span> Blog/</div><div class="line">wendingding:Blog wendingding$ <span class="built_in">pwd</span></div><div class="line">/Users/文顶顶/Desktop/Blog</div></pre></td></tr></table></figure><p>创建好文件目录后，接下里我们就可以使用npm来全局安装Hexo到当前的文件目录(Blog目录)了,命令行中的<code>-g</code>表示全局安装，安装完成后可以通过<code>hexo --version</code>命令来查看版本信息，主要关注<code>hexo-cli</code>即可，到这里表示hexo已经安装好了。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">wendingding:Blog wendingding$ npm install hexo -g</div><div class="line">wendingding:Blog wendingding$ hexo --version</div><div class="line">hexo-cli: 1.1.0</div><div class="line">os: Darwin 17.4.0 darwin x64</div><div class="line">http_parser: 2.7.0</div><div class="line">node: 8.9.3</div><div class="line">v8: 6.1.534.48</div><div class="line">uv: 1.15.0</div><div class="line">zlib: 1.2.11</div><div class="line">ares: 1.10.1-DEV</div><div class="line">modules: 57</div><div class="line">nghttp2: 1.25.0</div><div class="line">openssl: 1.0.2n</div><div class="line">icu: 59.1</div><div class="line">unicode: 9.0</div><div class="line">cldr: 31.0.1</div><div class="line">tz: 2017b</div></pre></td></tr></table></figure></p><p><span style="border:1px solid #000;padding:5px 20px;"> <strong>搭建博客</strong><span></span></span></p><p>到目前为止，使用Hexo和Github搭建博客的环境已经准备好了，接下来介绍搭建博客的具体操作。</p><p><strong>搭建博客的主要流程</strong></p><blockquote><p>❏ 在本地目录中使用hexo来初始化博客仓库。<br>❏ 在Github网站使用自己的账号来创建对应的托管仓库。<br>❏ 对本地的hexo博客项目进行配置和Github官网的托管仓库对接。<br>❏ 在命令行中通过hexo命令来生成博客、预览博客和发布博客到远程仓库。</p></blockquote><p><strong>初始化操作</strong> 在当前目录中(<code>/Users/文顶顶/Blog</code>)通过命令行工具执行<code>hexo init</code>来进行初始化。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">wendingding:Blog wendingding$ <span class="built_in">pwd</span></div><div class="line">/Users/文顶顶/Desktop/Blog</div><div class="line"></div><div class="line">wendingding:Blog wendingding$ hexo init</div><div class="line"></div><div class="line">INFO  Cloning hexo-starter to ~/Desktop/Blog</div><div class="line">Cloning into <span class="string">'/Users/文顶顶/Desktop/Blog'</span>...</div><div class="line">remote: Enumerating objects: 68, <span class="keyword">done</span>.</div><div class="line">remote: Total 68 (delta 0), reused 0 (delta 0), pack-reused 68</div><div class="line">Unpacking objects: 100% (68/68), <span class="keyword">done</span>.</div><div class="line">Submodule <span class="string">'themes/landscape'</span> (https://github.com/hexojs/hexo-theme-landscape.git) registered <span class="keyword">for</span> path <span class="string">'themes/landscape'</span></div><div class="line">Cloning into <span class="string">'/Users/文顶顶/Desktop/Blog/themes/landscape'</span>...</div><div class="line">remote: Enumerating objects: 2, <span class="keyword">done</span>.</div><div class="line">remote: Counting objects: 100% (2/2), <span class="keyword">done</span>.</div><div class="line">remote: Compressing objects: 100% (2/2), <span class="keyword">done</span>.</div><div class="line">remote: Total 843 (delta 0), reused 0 (delta 0), pack-reused 841</div><div class="line">Receiving objects: 100% (843/843), 2.55 MiB | 20.00 KiB/s, <span class="keyword">done</span>.</div><div class="line">Resolving deltas: 100% (445/445), <span class="keyword">done</span>.</div><div class="line">.....省略</div><div class="line">added 488 packages <span class="keyword">in</span> 19.861s</div><div class="line">INFO  Start blogging with Hexo!</div></pre></td></tr></table></figure></p><p><strong>安装组件操作</strong> 当hexo初始化完成后，我们可以通过<code>npm install</code>命令来安装博客需要的所有组件。<br><strong>hexo的基础命令</strong> 当前面的工作完成后，就可以通过hexo的常用的命令来生成和预览我们的个人博客了。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">wendingding:Blog wendingding$ npm install</div><div class="line">up to date <span class="keyword">in</span> 2.091s</div><div class="line"></div><div class="line">wendingding:Blog wendingding$ hexo g</div><div class="line">INFO  Start processing</div><div class="line">INFO  Files loaded <span class="keyword">in</span> 234 ms</div><div class="line">INFO  Generated: index.html</div><div class="line">INFO  Generated: archives/index.html</div><div class="line">INFO  Generated: fancybox/fancybox_sprite.png</div><div class="line">......省略</div><div class="line">INFO  Generated: css/fonts/fontawesome-webfont.svg</div><div class="line">INFO  Generated: css/fonts/fontawesome-webfont.ttf</div><div class="line">INFO  Generated: 2018/10/09/hello-world/index.html</div><div class="line">INFO  28 files generated <span class="keyword">in</span> 592 ms</div><div class="line"></div><div class="line">wendingding:Blog wendingding$ hexo s</div><div class="line">INFO  Start processing</div><div class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</div></pre></td></tr></table></figure></p><p><strong>说明</strong><code>hexo g</code>命令用来生成博客文件，<code>hexo s</code>命令会在本地开启一个服务，我们可以通过在浏览器的地址栏中输入<code>http://localhost:4000</code>预览当前的博客页面，如果一切顺利那么您将能看到下面的页面展示。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/hexo.png?raw=true"></p><div class="tip"><br><p><br><strong>注意点[01]</strong> 当本地服务开启后，博客中内容的更改会实时的体现到预览的页面中，这一点非常的方便，如果需要继续执行其他的命令需要通过输入<code>Ctrl+C</code>来关闭服务。<br></p><br><p><br><strong>注意点[02]</strong> 如果上面的地址无法预览，则可能是端口被占用，可以通过<code>Ctrl+C</code>停止服务器后，输入<code>hexo server -p  端口号</code>来配置端口号，例如设置为4001。<br></p><br></div><p>现在<span style="color:#f05">我们看到的是默认生成的hexo博客，里面没有任何我们自己的文章暂时也和Github没啥关系</span>。当前面的命令都执行完后再当前目录下会生成一大堆的文件，这里我简单列出这些文件的目录结构并说明它们的用途。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">wendingding:Blog wendingding$ tree -L 2</div><div class="line">.</div><div class="line">├── _config.yml                 //整个博客的配置文件：非常重要</div><div class="line">├── db.json</div><div class="line">├── node_modules                //npm模块，可以不用关心</div><div class="line">....省略</div><div class="line">│   ├── yallist</div><div class="line">│   └── yargs</div><div class="line">├── package-lock.json</div><div class="line">├── package.json                //配置文件，暂时可以不用关心</div><div class="line">├── public                      //使用hexo命令生成后的博客内容，自动生成，不要修改</div><div class="line">│   ├── 2018</div><div class="line">│   ├── archives</div><div class="line">│   ├── css</div><div class="line">│   ├── fancybox</div><div class="line">│   ├── index.html</div><div class="line">│   └── js</div><div class="line">├── scaffolds                   //模板，新建文章时，会根据模板中对应的文件来创建文章</div><div class="line">│   ├── draft.md</div><div class="line">│   ├── page.md</div><div class="line">│   └── post.md</div><div class="line">├── <span class="built_in">source</span>                      //该目录控制博客的内容，非常重要</div><div class="line">│   └── _posts</div><div class="line">└── themes                      //该目录保存博客的主题(皮肤)，可以下载并使用自己喜欢的皮肤</div><div class="line">    └── landscape</div><div class="line"></div><div class="line">297 directories, 8 files</div></pre></td></tr></table></figure></p><p>默认生成的博客中显示的第一篇文章为<code>Blog/source/_posts/hello-world.md</code>文件发布处理后的结果，我们可以通过代码编辑器(比如<a href="https://www.jetbrains.com/webstorm/" target="_blank" rel="external">webStorm</a>)打开整个项目然后修改hello-world.md文件的内容，重新发布来观察和理解Hexo博客的运作方式。这里，我修改了文件的内容后，并在终端中执行hexo指令重新生成和发布，这里给出具体的命令行和运行结果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">wendingding:~ wendingding$ <span class="built_in">cd</span> /Users/文顶顶/Desktop/Blog</div><div class="line">wendingding:Blog wendingding$ hexo g</div><div class="line"></div><div class="line">INFO  Start processing</div><div class="line">INFO  Files loaded <span class="keyword">in</span> 232 ms</div><div class="line">INFO  Generated: archives/2018/index.html</div><div class="line">INFO  Generated: 2018/10/09/hello-world/index.html</div><div class="line">INFO  Generated: archives/index.html</div><div class="line">INFO  Generated: index.html</div><div class="line">INFO  Generated: archives/2018/10/index.html</div><div class="line">INFO  5 files generated <span class="keyword">in</span> 87 ms</div><div class="line">wendingding:Blog wendingding$ hexo s</div><div class="line">INFO  Start processing</div><div class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</div></pre></td></tr></table></figure><p><img src="https://github.com/flowerField/Source/blob/master/Blog/hexo01.png?raw=true"></p><p>简单来说要操作博客中的文章其实只需要操作<code>Blog/source/_posts</code>路径下面md后缀的文件即可,文件的内容决定了博客文章的标题、内容等信息，一个md文件就代表着一篇博客，如果需要发布多篇博客文章那么只需要提供多个md格式的文件，编写这些文件的内容就是在编辑每一篇博客文章的内容。总结一下就是<strong><code>博客的内容均由_posts目录下面的md文件决定</code></strong>，博客的样式和风格等主要由配置和主题来决定，我们稍后细讲。</p><div class="tip"><strong>备注 </strong> md其实是<code>Markdown</code>的简写，<code>Markdown</code>是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。我们可以经过简单的学习后就使用<code>Markdown</code>来编写出漂亮的文档，现在像<a href="https://www.jianshu.com/" target="_blank" rel="external">简书</a>、<a href="https://www.cnblogs.com/" target="_blank" rel="external">博客园</a>等网站都支持这种特殊的语法标记方式。Windows系统推荐使用<a href="https://typora.io/" target="_blank" rel="external">Typora</a>或<a href="https://www.zybuluo.com/cmd/" target="_blank" rel="external">Cmd Markdown 作业部落</a>来编写Markdown语法的文档，Mac OSX系统推荐使用<a href="https://maxiang.io/" target="_blank" rel="external">马克飞象</a>、<a href="http://25.io/mou/" target="_blank" rel="external">Mou</a>等工具。</div><p><span style="border:1px solid #000;padding:5px 20px;"> <strong>创建博客文章</strong><span></span></span></p><p>新建博客文章有两种方式可以创建博客文章，<code>通过hexo命令来创建</code>和<code>自己把写好的md文件存放到source/_posts目录下面</code>，选择使用什么方式可以看个人的喜好决定。</p><p><strong><code>001 通过hexo命令来创建文章</code></strong></p><p>我们可以通过执行<code>$ hexo new [layout] &lt;title&gt;</code>语法的命令来新建文章，[layout]用于指定文章的布局，默认为post,关于布局相关的更多信息可以参考<a href="https://hexo.io/zh-cn/docs/writing.html" target="_blank" rel="external">Hexo官网文档</a>的说明，在这里我们来新建一篇名为<strong><code>Base64编码基础</code></strong>的文章。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">wendingding:Blog wendingding$ hexo new Base64编码基础</div><div class="line">INFO  Created: ~/Desktop/Blog/<span class="built_in">source</span>/_posts/Base64编码基础.md</div><div class="line"></div><div class="line">wendingding:Blog wendingding$ cat ~/Desktop/Blog/<span class="built_in">source</span>/_posts/Base64编码基础.md</div><div class="line">---</div><div class="line">title: Base64编码基础</div><div class="line">date: 2018-10-10 12:01:00</div><div class="line">tags:</div><div class="line">---</div></pre></td></tr></table></figure><p>上面的命令行，<code>hexo new Base64编码基础</code>用于在<code>Blog/source/_posts/</code>路径下面根据系统模板来生成一篇名<strong>Base64编码基础</strong>的博客文章，<code>cat ~/Desktop/Blog/source/_posts/Base64编码基础.md</code>命令用于在命令行窗口输出文件的具体内容，里面包含了博客文章的标题(title)、创建日期(date)和标签(tags)等默认生成的内容。当前这个文件并没有其它额外的内容，现在我们尝试使用MarkDown语法来编辑该文件来提供一些内容，然后重新生成博客并发布。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">wendingding:Blog wendingding$ hexo g</div><div class="line">INFO  Start processing</div><div class="line">INFO  Files loaded <span class="keyword">in</span> 264 ms</div><div class="line">INFO  Generated: index.html</div><div class="line">......省略</div><div class="line">INFO  Generated: css/fonts/fontawesome-webfont.svg</div><div class="line">INFO  29 files generated <span class="keyword">in</span> 681 ms</div><div class="line">wendingding:Blog wendingding$ hexo s</div><div class="line">INFO  Start processing</div><div class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop</div></pre></td></tr></table></figure><p><img src="https://github.com/flowerField/Source/blob/master/Blog/hexo02.png?raw=true"></p><p><strong><code>002 通过在文件目录的操作直接创建文章</code></strong></p><p>这种方式更直接，我们完全可以直接在<code>Blog/source/_posts/</code>路径下面来手动创建新的md文件，按照模板规定的格式来编写标题、时间和内容，然后执行<code>hexo g</code>和<code>hexo s</code>命令来生成和发布预览。或者，更方便的做法是直接把已有的博客文章复制粘贴到当前目录，然后修改文件名称和内容后执行命令来生成。</p><p><span style="border:1px solid #000;padding:5px 20px;"> <strong>博客主题</strong><span></span></span></p><p>现在我们已经初步把博客系统搭建出来了，并且掌握了hexo生成和预览基本命令的使用，也清楚了如何来创建博客文章、编辑博客文章，接下来简单说明Hexo博客的主题。你应该已经发现了Hexo默认的主题(皮肤)很丑，我想喜欢这个默认主题的人应该真的不多。</p><p>其实Hexo搭建博客非常的灵活，您可以自己给博客来定制主题，我们可以选择从头开始自己来写一套主题(工作量稍微有点大)，也可以把别人写好的你比较喜欢的主题直接拿来使用。您可以<a href="https://hexo.io/themes/" target="_blank" rel="external">点击这里</a>找一款自己喜欢的主题，这里我以自己的博客为例来说明如何给博客设置主题，我使用的是gitHub用户<a href="https://github.com/pinggod" target="_blank" rel="external">pinggod</a>先生开源的<a href="https://github.com/pinggod/hexo-theme-apollo" target="_blank" rel="external">apollo主题</a>。</p><p><strong><code>001 命令行下载主题</code></strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">wendingding:Blog wendingding$ <span class="built_in">pwd</span></div><div class="line">/Users/文顶顶/Desktop/Blog</div><div class="line"></div><div class="line">wendingding:Blog wendingding$ npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</div><div class="line">....省略</div><div class="line">+ hexo-generator-archive@0.1.5</div><div class="line">+ hexo-generator-feed@1.2.2</div><div class="line">+ hexo-renderer-jade@0.4.1</div><div class="line">+ hexo-generator-sitemap@1.2.0</div><div class="line">+ hexo-browsersync@0.3.0</div><div class="line">added 225 packages and updated 1 package <span class="keyword">in</span> 55.931s</div><div class="line"></div><div class="line">wendingding:Blog wendingding$ git <span class="built_in">clone</span> https://github.com/pinggod/hexo-theme-apollo.git themes/apollo</div><div class="line">Cloning into <span class="string">'themes/apollo'</span>...</div><div class="line">remote: Enumerating objects: 894, <span class="keyword">done</span>.</div><div class="line">remote: Total 894 (delta 0), reused 0 (delta 0), pack-reused 894</div><div class="line">Receiving objects: 100% (894/894), 324.80 KiB | 47.00 KiB/s, <span class="keyword">done</span>.</div><div class="line">Resolving deltas: 100% (420/420), <span class="keyword">done</span>.</div></pre></td></tr></table></figure></p><p><strong>命令行说明</strong></p><p><span style="color:#195">pwd</span> 表示查看当前路径，主要需要在博客的<code>根目录(Blog)</code>下执行后面的操作。</p><p><span style="color:#195">npm install –save xxx</span> 表示使用包管理工具npm来下载和安装当前主题需要使用到的插件，具体要安装哪些插件需要参考该主题的使用文档(<code>通常是Github仓库中的ReadMe文档</code>)。</p><p><span style="color:#195">git clone xxx</span> 表示使用git命令来把Github上面的远程仓库下载到当前目录中，上面代码执行完毕后apollo主题相关的文件会保存在<code>Blog/themes目录</code>下面。</p><p><strong><code>002 切换博客的主题</code></strong></p><p>选择自己的主题下载完成之后，还需要对博客使用的主题进行配置，配置方式非常简单。我们只需要找到<code>Blog/_config.yml文件</code>并修改第76行的theme 配置项，把<code>theme: landscape</code>修改为<code>theme:apollo</code>，然后重新执行<code>hexo g &amp;&amp; hexo s</code>命令即可。</p><p><strong><code>003 对主题进行配置</code></strong></p><p>使用了新主题之后，您可能还需要对主题进行配置，比如配置导航菜单(menu)、显示的log图片等信息。<br>在<code>Blog/themes/_config.yml文件</code>中可以对整个主题都进行配置。</p><p>这里先列出原本的配置信息。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">    Blog: /</div><div class="line">    Archive: /archives/</div><div class="line">    Weibo: http://weibo.com/sunchongsheng</div><div class="line">    GitHub: https://github.com/pinggod</div><div class="line">    Rss: /atom.xml</div><div class="line"></div><div class="line">favicon: /favicon.png</div><div class="line">logo: /favicon.png</div><div class="line"></div><div class="line"># Comment</div><div class="line"># e.g disqus: seansun</div><div class="line">disqus:</div><div class="line">duoshuo:</div><div class="line"></div><div class="line"># Analytics</div><div class="line"># google-analytics:</div><div class="line"># ga: UA-xxxxxxxx-x</div><div class="line"></div><div class="line"># Copyright Infomation</div><div class="line">startyear: 2015</div></pre></td></tr></table></figure></p><p>然后在给出我自己博客中该主题的配置信息(图片素材需要先保存到<code>Blog/themes/source目录下</code>)。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">    文顶顶的Blog: /</div><div class="line">    标签: /tags/</div><div class="line">    博客园: https://www.cnblogs.com/wendingding/</div><div class="line">    微博: http://weibo.com/p/1005053800117445/home?from=page_100505&amp;mod=TAB#place</div><div class="line">    花田半亩: http://blog.sina.com.cn/u/1910914290</div><div class="line"></div><div class="line">favicon: /logo.jpeg</div><div class="line">logo: /鲸鱼.png</div></pre></td></tr></table></figure></p><p>这里给出主题配置完之后的重新预览页面效果图。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/hexo03.png?raw=true"></p><p><span style="border:1px solid #000;padding:5px 20px;"> <strong>把博客发布到Github  page</strong><span></span></span></p><p>现在我们使用Hexo搭建的个人博客还只能在您自己的电脑中访问，接下来我们尝试把博客发布到Github page上，这样任何的客户端就可以通过博客地址来访问了。这里假设您已经注册了Github的账号并且已经对Github的使用有了基本的了解，下面先列出操作的主要流程。</p><blockquote><p>❏  在gitHub上面创建项目托管仓库并进行配置。<br>❏  配置自己电脑上面的git账户并使用SSH生成密钥对设置gitHub。<br>❏  配置本地Hexo博客项目_config.yml文件中的deploy项，设置其路径为gitHub上面对应仓库的路径并发布。</p></blockquote><p><strong><code>001 创建项目托管仓库并进行配置</code></strong></p><p>打开<a href="https://github.com" target="_blank" rel="external">gitHub官网</a>用自己注册的账号登录，成功之后<code>点击 + 选择new repository</code>创建新的代码仓库。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/hexo04.png?raw=true"></p><p><strong>设置仓库</strong> 这里需要特别注意在设置仓库名称的时候一定要是<code>用户名.github.io</code>形式的，这里因为我github账户名为<code>HanGangAndHanMeimei</code>，所以我设置的仓库名称为<code>HanGangAndHanMeimei.github.io</code>。设置然仓库勾选public表明这是一个开源的项目，勾选初始化readeMe文件，然后点击create repository即可。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/hexo05.png?raw=true"></p><p><strong><code>002 配置git账户并生成SSH密钥对</code></strong></p><p>因为我们需要通过git和命令行来操作gitHub上面的仓库，所以还需要在命令行工具中对git的账户进行配置并和gitHub账户进行关联才能拥有代码上传和发布等权限。</p><p>先设置git的用户名和邮箱，<code>--global</code>表示全局设置。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">yangy@LAPTOP-A18S3A9G MINGW64 ~/Desktop/Blog</div><div class="line">$ git config --global user.name <span class="string">"wendingding"</span></div><div class="line"></div><div class="line">yangy@LAPTOP-A18S3A9G MINGW64 ~/Desktop/Blog</div><div class="line">$ git config --global user.email <span class="string">"1915158156@qq.com"</span></div><div class="line"></div><div class="line">//注意：我这里为了演示方便切换了Windows操作系统的电脑。</div></pre></td></tr></table></figure></p><p>再通过命令行工具来生成SSH公钥和私钥密钥对。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">yangy@LAPTOP-A18S3A9G MINGW64 ~/Desktop/Blog</div><div class="line">$ ssh-keygen -t rsa -b 4096 -C <span class="string">"1915158156@qq.com"</span></div><div class="line"></div><div class="line">Generating public/private rsa key pair.</div><div class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/c/Users/yangy/.ssh/id_rsa):</div><div class="line">Created directory <span class="string">'/c/Users/yangy/.ssh'</span>.</div><div class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</div><div class="line">Enter same passphrase again:</div><div class="line">Your identification has been saved <span class="keyword">in</span> /c/Users/yangy/.ssh/id_rsa.</div><div class="line">Your public key has been saved <span class="keyword">in</span> /c/Users/yangy/.ssh/id_rsa.pub.</div><div class="line">The key fingerprint is:</div><div class="line">SHA256:0nz73Hu7ZLF7+J/maWKCC6j/ekaSB6zPwJXFASzZZls 1915158156@qq.com</div><div class="line">The key<span class="string">'s randomart image is:</span></div><div class="line"><span class="string">+---[RSA 4096]----+</span></div><div class="line"><span class="string">|    +.o..        |</span></div><div class="line"><span class="string">|   o = E         |</span></div><div class="line"><span class="string">|    = =          |</span></div><div class="line"><span class="string">|     * o         |</span></div><div class="line"><span class="string">|  . o + S .    . |</span></div><div class="line"><span class="string">|   + o.+ . .    o|</span></div><div class="line"><span class="string">|    +.+.  o    = |</span></div><div class="line"><span class="string">|    .o o.. + ++o*|</span></div><div class="line"><span class="string">|   ..o=. .. = B@B|</span></div><div class="line"><span class="string">+----[SHA256]-----+</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">yangy@LAPTOP-A18S3A9G MINGW64 ~/Desktop/Blog</span></div><div class="line"><span class="string">$ cat /c/Users/yangy/.ssh/id_rsa.pub</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCxX3PA2nBsHkoAKhaBNqfcajomYnc1HMUP9Gqfebtaf2fjV+PcJTJvCJ8mV6xBiB69Fi0V0VrdX2vmkfv4sUI++6htLPLRHqUE2+9J3pYBD2NQpe5+GBfL34YxMWD8y95jCXJadcPWGyl7s2EESqMUYe8QPB5qbrhI4U2/nonoxwYRFIxbAkIN1Fy6t9A+4tRFdPinQBom2/1lBdyl+1qxPlV2kZcmNH/ZHiwIn+tT1WsIBMcaXNGBQEUKnDr0GtZCPq5tfoYNrNOmUpAuEB3CUeShsXH7lU5sedMnkEpenniPJmLS344aj8X2pbjsSd5mLcoidzqbZ2+i5j+Ds5Le3iLCSbBMkEUA8UWcp5IF0bKjsXge3lD0IRUQPJqNphQ6dOvyT4NGq61zeaDCRFUIYFbQkE07PDtL5emexJMofIDJI56tC+q2/jZmHb0rZRpur7Y73SB86iaGc5VA8s8/lisjhKgqCgjuwVBtgtb9YQjtHYB7U6jS55IQzaAE74uP3Nx7rMi88jGqRdTgc5fWDVX19h9TqnKqx6V30U6zb98g+17rza2e8zWH+pKLQkzWPg/m+rYawvUa6A9hJN1qmhmX/FtxS2yAPHJuXFWwtYeu2zhx0n5ulg7Pi6iuJOogw7YN616IIIe6BusBgqNCbwmnGTH06l+Q+zdUXjvVhw== 1915158156@qq.com</span></div></pre></td></tr></table></figure></p><p>上面的命令行中<code>$ ssh-keygen -t rsa -b 4096 -C &quot;1915158156@qq.com&quot;</code>命令行用于生成密钥对，自己在操作的时候请把最后的邮箱换成您自己的，另外$本身不是命令行的一部分。当这行命令执行完毕之后，连续键入三个回车(表示默认)，将会生成一个使用RSA技术加密的密钥对，分别为<code>id_rsa文件</code>和<code>id_rsa.pub文件</code>，前者是私钥后者是公钥。我们需要打开公钥文件(<span style="color:#195">可以找到文件直接打开，也可以使用cat命令打开</span>)并拷贝其内容保存到Github中，即私钥留给自己公钥提供给Github网站，这样我们操作博客的时候才能完成身份的验证。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/hexo06.png?raw=true"></p><p><span style="border:1px solid #000;padding:0 5px;">点击自己的头像</span> →  <span style="border:1px solid #000;padding:0 5px;">Setting</span> → <span style="border:1px solid #000;padding:0 5px;">SSH and GPG Keys </span> → new SSH key → 设置标题(名称随意)然后把公钥文件中的内容粘贴到key这个输入框中 → add SSH key即可。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/hexo07.png?raw=true"></p><p>密钥信息配置完成之后，您可以通过<code>ssh -T git@github.com</code>命令来测试配置是否成功，当提示<code>Are you sure you want to continue connecting</code>的时候输入yes,如果能够看到<code>Hi HanGangAndHanMeimei! You&#39;ve successfully authenticated</code>这样一条消息就表示已经配置成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">yangy@LAPTOP-A18S3A9G MINGW64 ~/Desktop</div><div class="line">$ ssh -T git@github.com</div><div class="line"></div><div class="line">The authenticity of host <span class="string">'github.com (192.30.253.113)'</span> can<span class="string">'t be established.</span></div><div class="line"><span class="string">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</span></div><div class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? yes</span></div><div class="line"><span class="string">Warning: Permanently added '</span>github.com,192.30.253.113<span class="string">' (RSA) to the list of known hosts.</span></div><div class="line"><span class="string">Hi HanGangAndHanMeimei! You'</span>ve successfully authenticated, but GitHub does not provide shell access.</div></pre></td></tr></table></figure><p><strong><code>003 配置_config.yml文件的deploy项</code></strong></p><p>在根目录(这里为<code>Blog</code>)中找到全局配置文件_config.yml，配置其中的deploy项。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repository: git@github.com:HanGangAndHanMeimei/HanGangAndHanMeimei.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p><p>在上面的配置项中，repository对应的值，可以直接在github上面找到对应托管仓库，点击<strong>Clone or Download</strong>弹出框中复制获取。另外需要注意冒号之后应该留有一个空格的距离，否则无法识别。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/hexo09.png?raw=true"></p><p><strong><code>004 把自己的博客发布到Github</code></strong></p><p>当前面的操作执行完毕之后，您可以通过<code>hexo d</code>命令来把自己的博客发布到Github。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">yangy@LAPTOP-A18S3A9G MINGW64 ~/Desktop</div><div class="line">$ <span class="built_in">cd</span> Blog/</div><div class="line"></div><div class="line">yangy@LAPTOP-A18S3A9G MINGW64 ~/Desktop/Blog</div><div class="line">$ hexo g</div><div class="line"></div><div class="line">INFO  Start processing</div><div class="line">INFO  Files loaded <span class="keyword">in</span> 582 ms</div><div class="line">INFO  Generated: 2018/10/10/Base64编码基础/index.html</div><div class="line">INFO  Generated: 2018/10/09/hello-world/index.html</div><div class="line">INFO  Generated: index.html</div><div class="line">INFO  3 files generated <span class="keyword">in</span> 43 ms</div><div class="line"></div><div class="line">yangy@LAPTOP-A18S3A9G MINGW64 ~/Desktop/Blog</div><div class="line">$ hexo d</div><div class="line">ERROR Deployer not found: git</div><div class="line"></div><div class="line">yangy@LAPTOP-A18S3A9G MINGW64 ~/Desktop/Blog</div><div class="line">$ npm install --save hexo-deployer-git</div><div class="line"></div><div class="line">+ hexo-deployer-git@0.3.1</div><div class="line">added 31 packages <span class="keyword">in</span> 20.396s</div><div class="line"></div><div class="line">yangy@LAPTOP-A18S3A9G MINGW64 ~/Desktop/Blog</div><div class="line">$ hexo d</div><div class="line"></div><div class="line">INFO  Deploying: git</div><div class="line">INFO  Setting up Git deployment...</div><div class="line"> ....省略</div><div class="line">[master dc63854] Site updated: 2018-10-10 17:45:37</div><div class="line"> 38 files changed, 5012 insertions(+)</div><div class="line"> create mode 100644 2018/10/09/hello-world/index.html</div><div class="line"> ....省略</div><div class="line"> create mode 100644 sitemap.xml</div><div class="line"> create mode 100644 <span class="string">"\351\262\270\351\261\274.png"</span></div><div class="line">Branch <span class="string">'master'</span> <span class="built_in">set</span> up to track remote branch <span class="string">'master'</span> from <span class="string">'git@github.com:HanGangAndHanMeimei/HanGangAndHanMeimei.github.io.git'</span>.</div><div class="line">To github.com:HanGangAndHanMeimei/HanGangAndHanMeimei.github.io.git</div><div class="line"> + 7eb4c77...dc63854 HEAD -&gt; master (forced update)</div><div class="line">INFO  Deploy <span class="keyword">done</span>: git</div></pre></td></tr></table></figure><div class="tip"><strong>注意</strong>  如果在执行<code>hexo d</code>命令的时候发现报<code>ERROR Deployer not found: git</code>错误，那是因为<code>hexo-deployer-git</code>没有安装的原因，需要执行<code>npm install --save hexo-deployer-git</code>先安装，完成之后再执行<code>hexo d</code>部署。</div><p>发布完成后就可以在任何客户端的浏览器上通过用户名.github.io来访问您的博客了(我这里的访问地址为<a href="http://HanGangAndHanMeimei.github.io" target="_blank" rel="external">http://HanGangAndHanMeimei.github.io</a>，可以点击查看效果)。</p><pre><code>hexo常用命令备注hexo generate 该命令用于生成博客，简写为hexo ghexo server   该命令用于启动服务预览，简写为hexo shexo deploy   该命令用于把博客部署到线上，简写为hexo dhexo clean    该命令用于清除缓存 网页正常情况下可以忽略此条命令</code></pre><p>其实到现在为止，您的个人博客就可以正常使用了。如果要发布新的博客文章那么就只需要在source/_posts目录下面创建md文件编写内容然后执行<code>hexo g</code>生成然后执行<code>hexo d</code>部署即可。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/hexo08.png?raw=true"></p><hr><ul><li>Posted by 博客园·<a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a> | <a href="http://wendingding.com" target="_blank" rel="external">花田半亩</a></li><li>联系作者 简书·<a href="http://www.jianshu.com/users/c5703017b9f5/latest_articleshttp://www.jianshu.com/users/c5703017b9f5/latest_articles" target="_blank" rel="external">文顶顶</a> 新浪微博·<a href="http://weibo.com/p/1005053800117445/home?from=page_100505&amp;mod=TAB#place">Coder_文顶顶</a></li><li>原创文章，版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-0-说明&quot;&gt;&lt;a href=&quot;#1-0-说明&quot; class=&quot;headerlink&quot; title=&quot;1.0 说明&quot;&gt;&lt;/a&gt;1.0 说明&lt;/h3&gt;&lt;p&gt;其实，搭建个人博客的技术方案有很多。&lt;/p&gt;
&lt;p&gt;其实，你能找到的使用&lt;code&gt;Hexo + Githu
      
    
    </summary>
    
    
      <category term="网络编程系列" scheme="https://weibo.com/u/3800117445/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序基础[10]-UI组件库的使用和封装</title>
    <link href="https://weibo.com/u/3800117445/2018/10/02/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%8F%E5%88%97%5B10%5D-UI%E7%BB%84%E4%BB%B6%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8%E5%92%8C%E5%B0%81%E8%A3%85/"/>
    <id>https://weibo.com/u/3800117445/2018/10/02/微信小程序序列[10]-UI组件库的使用和封装/</id>
    <published>2018-10-01T16:00:01.000Z</published>
    <updated>2018-11-11T13:30:01.371Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文介绍微信小程序开发中常用的第三方UI组件库的基本使用流程和如何自定义组件。</p></blockquote><h3 id="1-0-第三方UI组件库的基本使用流程"><a href="#1-0-第三方UI组件库的基本使用流程" class="headerlink" title="1.0 第三方UI组件库的基本使用流程"></a>1.0 第三方UI组件库的基本使用流程</h3><p>在<a href="http://wendingding.com/2018/09/24/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%B3%BB%E5%88%97[05]-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%A1%86%E6%9E%B6%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B601" target="_blank" rel="external">小程序框架基础组件</a>这篇文章的末尾简单列出了小程序开发中常用的一些第三方UI组件库，包括iview和Weui等,这里讲简单说明这些第三方UI组件库的基本使用流程。</p><p>通常，在使用第三方组件库之前首先需要通过<code>代码的托管仓库</code>和<code>组件库文档</code>来了解该组件库都提供哪些自定义的组件这是组件和当前项目是否匹配等信息(<code>很多的第三方组件库都提供了专门的演示小程序可以安装和体验</code>)，确定之后就只需在项目中应用了。</p><p><strong>第三方组件库的基本使用流程</strong></p><blockquote><p>❏ 在github下载完整的仓库代码。<br>❏ 把仓库代码中存放自定义组件的文件夹拷贝到项目中(<code>dist目录</code>)。<br>❏ 在项目中需要使用到的页面的json文件中对第三方组件进行配置。<br>❏ 在项目中需要使用到的页面的wxml文件中直接使用，同原生组件一致。<br>❏ 参考组件库文档来对自定义的组件传递参数(通常是以属性赋值的方式进行)。</p></blockquote><p><strong><code>ex:使用iview-weapp组件库中的i-cell组件</code></strong></p><p><strong><code>001</code></strong> 在github中找到组件库的<a href="https://github.com/TalkingData/iview-weapp" target="_blank" rel="external">仓库托管地址</a>并点击clone OR Download下载。</p><p><strong><code>002</code></strong> 下载后将仓库中的dist目录拷贝到自己的项目中，这里可以在根目录下新建components文件夹专门用来存放需要用到的所有组件，因为项目中可能用到多个UI组件库，所以把dist改名为iview目录。</p><p><strong><code>003</code></strong> 因为在项目中的<strong>mine/index.wxml</strong>文件中需要使用到iview组件库中的<span style="color:#f05">i-cell</span>、<span style="color:#f05">i-panel</span>以及<span style="color:#f05">i-cell-group</span>组件所以需要先在<strong>mine/index.json</strong>文件中进行配置，配置项如下。<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"usingComponents"</span>: &#123;</div><div class="line">    <span class="attr">"i-cell"</span>: <span class="string">"../../components/ivew/cell/index"</span>,</div><div class="line">    <span class="attr">"i-panel"</span>:<span class="string">"../../components/ivew/panel/index"</span>,</div><div class="line">    <span class="attr">"i-cell-group"</span>:<span class="string">"../../components/ivew/cell-group/index"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p><strong><code>004</code></strong> 在项目中的<strong>mine/index.wxml</strong>文件中直接使用这些组件来实现特定效果。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">i-panel</span> <span class="attr">title</span>=<span class="string">" "</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">i-cell-group</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">i-cell</span>  <span class="attr">title</span>=<span class="string">"心意卡"</span> <span class="attr">is-link</span> &gt;</span><span class="tag">&lt;/<span class="name">i-cell</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">i-cell</span>  <span class="attr">title</span>=<span class="string">"优惠券"</span> <span class="attr">is-link</span> &gt;</span><span class="tag">&lt;/<span class="name">i-cell</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">i-cell-group</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">i-panel</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">i-panel</span> <span class="attr">title</span>=<span class="string">" "</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">i-cell-group</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">i-cell</span>  <span class="attr">title</span>=<span class="string">"我的地址"</span> <span class="attr">is-link</span> <span class="attr">url</span>=<span class="string">"/pages/address/index"</span>&gt;</span><span class="tag">&lt;/<span class="name">i-cell</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">i-cell</span>  <span class="attr">title</span>=<span class="string">"我的尺寸"</span> <span class="attr">is-link</span> &gt;</span><span class="tag">&lt;/<span class="name">i-cell</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">i-cell-group</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">i-panel</span>&gt;</span></div></pre></td></tr></table></figure></p><p>如果需要对UI组件的样式进行调整那么可以选择直接到components/iview中对既定的样式进行修改，更好的方法是<span style="color:#195">给用到的组件添加新的class,并在对应的wxss文件中进行设置</span>。</p><h3 id="2-0-自定义组件的封装"><a href="#2-0-自定义组件的封装" class="headerlink" title="2.0 自定义组件的封装"></a>2.0 自定义组件的封装</h3><p>在小程序的开发中如果某些代码需要到多个地方用到(往往是视图结构相同而具体填充的数据不同)，那么可以考虑把这些代码抽取成模板或者是封装成自定义的组件，在<a href="http://wendingding.com/2018/09/27/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%B3%BB%E5%88%97[08]-%E6%A8%A1%E6%9D%BF%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E5%92%8C%E5%BC%95%E5%85%A5" target="_blank" rel="external">模板的基本使用和引入</a>这篇文章中已经介绍了模板的基本用法，这里重点说明把代码封装成自定义组件的基本流程。</p><p><strong>自定义组件和使用的基本流程</strong></p><blockquote><p>❏ 在微信提供的官方开发工具中代码目录中新建<code>Component文件</code>。<br>❏ 在自动生成的四个文件中编写组件内容、组件样式、组件逻辑控制相关的代码。<br>❏ 在项目中需要使用到自定义组件的页面的.json文件中进行配置，设置组件的名称和路径。<br>❏ 在项目中需要使用到自定义组件的页面的.wxml文件中直接像系统组件那样使用和传参即可。</p></blockquote><p><strong><code>ex:自定义组件i-address的封装和使用</code></strong></p><p>这里先给出自定义组件使用的效果图。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx21.png?raw=true"></p><p><strong><code>001</code></strong> 在项目的根目录中创建components文件夹，该目录用于存放项目中用到的所有组件。<br><strong><code>002</code></strong> 在components目录下创建addressComponent文件夹，新建<code>Component文件</code>命名为addressview，这样会在该目录下面生成四个文件，后缀分别是.wxml(控制内容)、.wxss(控制样式)、.json(控制配置，表明自己是自定义组件)和.js(控制初始化数据、属性列表和添加在组件身上的方法)。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">wendingding$ tree</div><div class="line">.</div><div class="line">└── components</div><div class="line">    └── addressComponent</div><div class="line">        ├── addressview.js</div><div class="line">        ├── addressview.json</div><div class="line">        ├── addressview.wxml</div><div class="line">        └── addressview.wxss</div></pre></td></tr></table></figure></p><p><strong><code>003</code></strong> 编写addressview.wxml文件，控制组件的结构。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'address'</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'address-top'</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">'address-top-name'</span>&gt;</span>&#123;&#123; name &#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">'delClick'</span> <span class="attr">class</span>=<span class="string">'address-top-del'</span> <span class="attr">plain</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">'address-top-edit'</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'address-bottom'</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">'address-bottom-phone'</span>&gt;</span>电话号码：&#123;&#123; phoneText &#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">'address-bottom-detail'</span>&gt;</span>联系地址：&#123;&#123; detailText &#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></div></pre></td></tr></table></figure></p><p><strong><code>004</code></strong> 编写addressview.wxss文件，控制组件的样式。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.address</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">  <span class="attribute">height</span>: <span class="number">240</span>rpx;</div><div class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</div><div class="line">  <span class="attribute">margin-top</span>: <span class="number">20</span>rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.address-top</span>&#123;</div><div class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">  <span class="attribute">height</span>: <span class="number">100</span>rpx;</div><div class="line">  <span class="attribute">line-height</span>: <span class="number">100</span>rpx;</div><div class="line">  <span class="attribute">border-bottom</span>: <span class="number">1</span>rpx solid <span class="number">#eee</span>;</div><div class="line">  <span class="attribute">position</span>: relative;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.address-bottom</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">  <span class="attribute">height</span>: <span class="number">140</span>rpx;</div><div class="line">  <span class="comment">/* background: yellowgreen */</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.address-top-name</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">padding-left</span>: <span class="number">30</span>rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.address-top-del</span>,<span class="selector-class">.address-top-edit</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">width</span>: <span class="number">130</span>rpx;</div><div class="line">  <span class="attribute">height</span>: <span class="number">60</span>rpx;</div><div class="line">  <span class="attribute">line-height</span>: <span class="number">60</span>rpx;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">30</span>rpx;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">  <span class="attribute">border-radius</span>: <span class="number">20</span>rpx;</div><div class="line">  <span class="attribute">top</span>: <span class="number">20</span>rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.address-top-edit</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">right</span>: <span class="number">30</span>rpx;</div><div class="line">  <span class="attribute">background</span>: <span class="number">#333</span>;</div><div class="line">  <span class="attribute">color</span>: <span class="number">#fff</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.address-top-del</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">right</span>: <span class="number">180</span>rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.address-bottom-phone</span>,<span class="selector-class">.address-bottom-detail</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">display</span>: block;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">30</span>rpx;</div><div class="line">  <span class="attribute">color</span>: <span class="number">#666</span>;</div><div class="line">  <span class="attribute">padding-left</span>: <span class="number">30</span>rpx;</div><div class="line">  <span class="attribute">height</span>: <span class="number">70</span>rpx;</div><div class="line">  <span class="attribute">line-height</span>: <span class="number">70</span>rpx;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p><strong><code>005</code></strong> 编写addressview.js文件的代码，控制组件的属性、初始化数据以及方法。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">Component(&#123;</div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">   * 组件的属性列表</span></div><div class="line"><span class="comment">   */</span></div><div class="line">  properties: &#123;</div><div class="line">    name:&#123;</div><div class="line">      type:<span class="built_in">String</span>,</div><div class="line">      value:<span class="string">"默认的收件人"</span></div><div class="line">    &#125;,</div><div class="line">    phoneText: &#123;</div><div class="line">      type: <span class="built_in">String</span>,</div><div class="line">      value: <span class="string">"88888888888888"</span></div><div class="line">    &#125;,</div><div class="line">    detailText: &#123;</div><div class="line">      type: <span class="built_in">String</span>,</div><div class="line">      value: <span class="string">"北京市天安门城楼"</span></div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">   * 组件的初始数据</span></div><div class="line"><span class="comment">   */</span></div><div class="line">  data: &#123;</div><div class="line"></div><div class="line">  &#125;,</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">   * 组件的方法列表</span></div><div class="line"><span class="comment">   */</span></div><div class="line">  methods: &#123;</div><div class="line">    delClick:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">      <span class="comment">//....</span></div><div class="line">      <span class="comment">//删除按钮的事件处理函数</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p><p><strong><code>006</code></strong> 在项目的address页面中需要用到这个自定义组件，那么就先在对应的json文件中进行配置，主要是设置自定义组件的名称和对应的路径，这里给出address/index.json文件内容示例。<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"usingComponents"</span>: &#123;</div><div class="line">    <span class="attr">"i-address"</span>: <span class="string">"../../components/addressComponents/addressview"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p><strong><code>007</code></strong> 在页面对应的wxml文件中直接使用自定义组件，这里给出address/index.wxml文件内容示例。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">i-address</span> <span class="attr">wx:key</span>=<span class="string">'index'</span> <span class="attr">wx:for</span>=<span class="string">'&#123;&#123; arrayData &#125;&#125;'</span><span class="attr">name</span>=<span class="string">'&#123;&#123; item.name &#125;&#125;'</span> <span class="attr">phoneText</span>=<span class="string">'&#123;&#123; item.phoneText &#125;&#125;'</span> <span class="attr">detailText</span>=<span class="string">'&#123;&#123; item.detailText &#125;&#125;'</span>&gt;</span><span class="tag">&lt;/<span class="name">i-address</span>&gt;</span></div></pre></td></tr></table></figure></p><p><strong><code>008</code></strong> 自定义组件需要接收数据，通过编写对应的js文件设置，这里给出address/index.js文件内容示例。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// pages/address/index.js</span></div><div class="line">Page(&#123;</div><div class="line">  data: &#123;</div><div class="line">    arrayData:[</div><div class="line">                    &#123;</div><div class="line">                      name: <span class="string">"小猪猪猪"</span>,</div><div class="line">                      phoneText: <span class="string">"123445455846"</span>,</div><div class="line">                      detailText: <span class="string">"广州市天河区体育中心南路水电费"</span>,</div><div class="line">                    &#125;,</div><div class="line">                    &#123;</div><div class="line">                      name: <span class="string">"熊大和赵琳"</span>,</div><div class="line">                      phoneText: <span class="string">"154546556465466"</span>,</div><div class="line">                      detailText: <span class="string">"广州市天河区体育中心南路水电费"</span>,</div><div class="line">                    &#125;,</div><div class="line">                    &#123;</div><div class="line">                      name: <span class="string">"花仙子"</span>,</div><div class="line">                      phoneText: <span class="string">"154546556465466"</span>,</div><div class="line">                      detailText: <span class="string">"广州市天河区体育中心西路"</span>,</div><div class="line">                    &#125;</div><div class="line">             ]</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p><hr><ul><li>Posted by 博客园·<a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a> | <a href="http://wendingding.com" target="_blank" rel="external">花田半亩</a></li><li>联系作者 简书·<a href="http://www.jianshu.com/users/c5703017b9f5/latest_articleshttp://www.jianshu.com/users/c5703017b9f5/latest_articles" target="_blank" rel="external">文顶顶</a> 新浪微博·<a href="http://weibo.com/p/1005053800117445/home?from=page_100505&amp;mod=TAB#place">Coder_文顶顶</a></li><li>原创文章，版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文介绍微信小程序开发中常用的第三方UI组件库的基本使用流程和如何自定义组件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;1-0-第三方UI组件库的基本使用流程&quot;&gt;&lt;a href=&quot;#1-0-第三方UI组件库的基本使用流程&quot; class=
      
    
    </summary>
    
    
      <category term="微信小程序序列" scheme="https://weibo.com/u/3800117445/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%8F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序基础[09]-小程序中的基础组件(二)</title>
    <link href="https://weibo.com/u/3800117445/2018/09/27/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%8F%E5%88%97%5B09%5D-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6(%E4%BA%8C)/"/>
    <id>https://weibo.com/u/3800117445/2018/09/27/微信小程序序列[09]-小程序中的基础组件(二)/</id>
    <published>2018-09-26T16:00:09.000Z</published>
    <updated>2018-11-11T13:30:01.359Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文介绍小程序中的基础组件，主要包括button、input等组件的基本使用和代码示例。</p></blockquote><h4 id="1-0-button组件"><a href="#1-0-button组件" class="headerlink" title="1.0 button组件"></a>1.0 button组件</h4><p>小程序中的<a href="https://developers.weixin.qq.com/miniprogram/dev/component/button.html" target="_blank" rel="external">button组件</a>就是按钮。</p><p><strong>这里列出button组件的主要属性</strong><br><span class="propWX-green bg-red">open-type</span>    微信开放能力。<br><span class="propWX-green bg-red">size</span>    按钮的大小，默认值为default，还能取值mini。<br><span class="propWX-green ">plain</span>     设置按钮是否镂空，布尔类型的值，默认为false。<br><span class="propWX-green bg-red">disabled</span>    是否禁用按钮，布尔类型的值，默认为false。<br><span class="propWX-green">loading</span>    名称的前面是否设置加载icon,默认为false。<br><span class="propWX-green bg-red">form-type</span>    用来触发form表单中的submit和reset事件。<br><span class="propWX-green">hover-class</span>    按钮被按下的样式类，none表示没有任何效果。<br><span class="propWX-green">hover-start-time</span>    按钮被按下多久出现点击态，默认为20毫秒。<br><span class="propWX-green">hover-stay-time</span>    手指松开按钮点击态的保留时间，默认为70毫秒。<br><span class="propWX-green bg-red">type</span>  按钮的样式类型，默认值为default，还能取值primary和warn。<br><span class="propWX-green">session-from</span>    会话来源，open-type=<code>&quot;contact&quot;</code>时生效。<br><span class="propWX-green">bindcontact</span>    客服消息回调，open-type=<code>&quot;contact&quot;</code>时生效。<br><span class="propWX-green">binderror</span>    使用开放能力时失败的回调，open-type=<code>&quot;launchApp&quot;</code>时生效。<br><span class="propWX-green">bindopensetting</span>    打开授权设置页面的回调，open-type=<code>&quot;openSetting&quot;</code>时生效。<br><span class="propWX-green">bindgetphonenumber</span>    获取用户手机号码回调，open-type=<code>&quot;getPhoneNumber&quot;</code>时生效。<br><span class="propWX-green">bindgetuserinfo</span>    点击时用户信息在detail中返回，open-type=<code>&quot;getUserInfo&quot;</code>时生效。<br><span class="propWX-green">app-parameter</span>    打开app时向app传递的参数，open-type=<code>&quot;launchApp&quot;</code>时生效。<br><span class="propWX-green">lang</span>    指定返回的用户信息的语言，open-type=<code>&quot;getUserInfo&quot;</code>时生效。<br><span class="propWX-green">send-message-title</span>    会话内消息卡片标题，open-type=<code>&quot;contact&quot;</code>时生效。<br><span class="propWX-green">send-message-img</span>    会话内消息卡片图片，open-type=<code>&quot;contact&quot;</code>时生效。<br><span class="propWX-green">show-message-card</span>    显示会话内消息卡片默认为false，open-type=<code>&quot;contact&quot;</code>时生效。<br><span class="propWX-green">send-message-path</span>    会话内消息卡片点击跳转小程序路径，open-type=<code>&quot;contact&quot;</code>时生效。</p><p><strong>open-type微信开放能力属性取值说明</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">cotact        打开客服会话。</div><div class="line">openSetting打开授权设置页。</div><div class="line">share        触发用户转发，使用前建议先阅读使用指引。</div><div class="line">feedback打开“意见反馈”页面，用户可提交反馈内容并上传日志。</div><div class="line">getUserInfo获取用户信息，可以从bindgetuserinfo回调中获取到用户信息。</div><div class="line">launchApp打开APP，可以通过app-parameter属性设定向APP传的参数具体说明。</div><div class="line">getPhoneNumber获取用户手机号，可以从bindgetphonenumber回调中获取到用户信息，具体说明。</div></pre></td></tr></table></figure></p><p>我们重点关注button组件非开放能力相关的属性，关于开放能力的相关知识点可以查询官方文档，这里给出button组件使用的代码示例。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line">//wxml文件中的内容</div><div class="line"><span class="comment">&lt;!-- 1.0 演示按钮的基本使用 --&gt;</span></div><div class="line"><span class="comment">&lt;!-- 001 type属性对比  取值为：defalut(默认白色) warn(红色) primary(绿色) --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">'defalut'</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">'warn'</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">'primary'</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 002 size属性：设置按钮的大小 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">size</span>=<span class="string">'mini'</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 003 plain属性：设置按钮是否镂空显示 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">plain</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 004 disabled属性：设置禁用按钮 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">disabled</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 005 loading属性：文字前面是否显示icon，布尔类型的值，默认不显示 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">loading</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 006 form-type属性：设置表单中的submit和reset --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">bindsubmit</span>=<span class="string">'submitClick'</span> <span class="attr">bindreset</span>=<span class="string">'resetClick'</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">placeholder</span>=<span class="string">'请输入用户名'</span> <span class="attr">name</span>=<span class="string">'usrname'</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span><span class="attr">placeholder</span>=<span class="string">'请输入密码'</span> <span class="attr">name</span>=<span class="string">'password'</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">form-type</span>=<span class="string">'submit'</span>&gt;</span>提交表单的数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">form-type</span>=<span class="string">'reset'</span>&gt;</span>重置表单的数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 007 hover-class属性：设置按钮按下去的样式 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">hover-class</span>=<span class="string">'btn-hover'</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 008 部分开放能力属性测试 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">open-type</span>=<span class="string">'contact'</span> <span class="attr">bindcontact</span>=<span class="string">'testClick'</span>&gt;</span>开放能力打开客服会话<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">open-type</span>=<span class="string">'getPhoneNumber'</span></span></div><div class="line"><span class="tag"><span class="attr">bindgetphonenumber</span>=<span class="string">"getPhoneNumberClick"</span>&gt;</span></div><div class="line">开放能力获取用户的手机号码</div><div class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"></div><div class="line">//js文件中的内容</div><div class="line">Page(&#123;</div><div class="line">  submitClick:function(e)&#123;</div><div class="line">    console.log("点击了表单的提交按钮",e);</div><div class="line">  &#125;,</div><div class="line">  resetClick: function (e) &#123;</div><div class="line">    console.log("点击了表单的重置按钮",e);</div><div class="line">  &#125;,</div><div class="line">  testClick:function(e)&#123;</div><div class="line">      console.log("打开客服会话",e);</div><div class="line">    &#125;,</div><div class="line">    getPhoneNumberClick:function()&#123;</div><div class="line">      console.log("获取用户的电话号码",e);</div><div class="line">    &#125;</div><div class="line"> &#125;);</div><div class="line"></div><div class="line">//wxss文件中的内容</div><div class="line">.btn-hover</div><div class="line">&#123;</div><div class="line">  background: #110e1e;</div><div class="line">  color: #fff;</div><div class="line">  font-size: 20rpx;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h4 id="2-0-input组件"><a href="#2-0-input组件" class="headerlink" title="2.0 input组件"></a>2.0 input组件</h4><p><a href="https://developers.weixin.qq.com/miniprogram/dev/component/input.html" target="_blank" rel="external">input组件</a>就是输入框，主要用来处理用户的输入和数据修改等操作。</p><p><strong>这里列出input组件的主要属性</strong></p><p><span class="propWX-green bg-red">type</span> 输入框的类型。<br><span class="propWX-green ">disabled</span>      输入框是否禁用。<br><span class="propWX-green bg-red">value</span>    输入框的初始内容。<br><span class="propWX-green ">password</span>     输入框是密码类型的。<br><span class="propWX-green ">placeholder-style    </span>     指定placeholder的样式。<br><span class="propWX-green ">placeholder-class</span>     指定placeholder的样式类。<br><span class="propWX-green bg-red">placeholder</span>     输入框为空的时候显示的占位字符。<br><span class="propWX-green ">maxlength</span>     输入框的最大输入长度，设置为-1表示没有限制默认为140。<br><span class="propWX-green bg-red">confirm-type</span>     弹出键盘的右下角的文字，默认为done，type为text时生效。<br><span class="propWX-green ">confirm-hold</span>     点击键盘右下角按钮时是否保持键盘不收起。<br><span class="propWX-green ">adjust-position</span>     键盘弹起时，是否自动上推页面,默认值为true。<br><span class="propWX-green ">focus</span>     获取焦点。<br><span class="propWX-green ">cursor</span>     指定focus时的光标位置。<br><span class="propWX-green ">selection-start</span>     光标起始位置，自动聚集时有效，需与selection-end搭配使用。<br><span class="propWX-green ">selection-end</span>     光标结束位置，自动聚集时有效，需与selection-start搭配使用。<br><span class="propWX-green bg-red">bindfocus</span>     输入框聚焦时触发。<br><span class="propWX-green ">bindblur</span>     输入框失去焦点时触发。<br><span class="propWX-green bg-red">bindconfirm</span>     点击完成按钮时触发。<br><span class="propWX-green ">bindinput</span>     键盘输入时触发，处理函数能直接return替换输入框的内容。</p><p><strong>特定属性的取值情况说明</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">type属性的取值可以是下面的四种情况，分别对应弹出不同类型的键盘。</div><div class="line">text文本输入键盘</div><div class="line">number数字输入键盘</div><div class="line">idcard身份证输入键盘</div><div class="line">digit带小数点的数字键盘</div><div class="line"></div><div class="line">confirm-type属性的有效值有下面五种，其最终表现与手机输入法本身的实现有关。</div><div class="line">send右下角按钮为“发送”</div><div class="line">search右下角按钮为“搜索”</div><div class="line">next右下角按钮为“下一个”</div><div class="line">go右下角按钮为“前往”</div><div class="line">done右下角按钮为“完成”</div></pre></td></tr></table></figure></p><p><strong>这里给出input标签使用的示例代码</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">//wxml文件内容</div><div class="line">&lt;!-- 1.0 测试type属性，有效值为text  number idcard digit --&gt;</div><div class="line">&lt;input type=&apos;text&apos; placeholder=&apos;我是文本输入框&apos;&gt;&lt;/input&gt;</div><div class="line">&lt;input type=&apos;number&apos; placeholder=&apos;我是弹出数字键盘&apos;&gt;&lt;/input&gt;</div><div class="line">&lt;input type=&apos;idcard&apos; placeholder=&apos;我弹出身份证键盘&apos;&gt;&lt;/input&gt;</div><div class="line">&lt;input type=&apos;digit&apos; placeholder=&apos;我弹出小数键盘&apos;&gt;&lt;/input&gt;</div><div class="line"></div><div class="line">&lt;!-- 2.0 测试confirm-type属性：有效值为send search next go done --&gt;</div><div class="line">&lt;input confirm-type=&apos;send&apos; placeholder=&apos;键盘右下角的文字为send-发送&apos;&gt;&lt;/input&gt;</div><div class="line">&lt;input confirm-type=&apos;search&apos; placeholder=&apos;键盘右下角的文字为search-搜索&apos;&gt;&lt;/input&gt;</div><div class="line">&lt;input confirm-type=&apos;next&apos; placeholder=&apos;键盘右下角的文字为next-下一项&apos;&gt;&lt;/input&gt;</div><div class="line">&lt;input confirm-type=&apos;go&apos; placeholder=&apos;键盘右下角的文字为go-前往&apos;&gt;&lt;/input&gt;</div><div class="line">&lt;input confirm-type=&apos;done&apos; placeholder=&apos;键盘右下角的文字为done-完成&apos;&gt;&lt;/input&gt;</div><div class="line"></div><div class="line">&lt;!-- 3.0 测试value属性：控制输入框的初始值 --&gt;</div><div class="line">&lt;input value=&apos;我是该输入框的初始值&apos;&gt;&lt;/input&gt;</div><div class="line"></div><div class="line">&lt;!-- 4.0 测试disabled属性：控制输入框是否禁用 --&gt;</div><div class="line">&lt;input disabled placeholder=&apos;禁用输入框&apos;&gt;&lt;/input&gt;</div><div class="line"></div><div class="line">&lt;!-- 5.0 测试placeholder-style：给占位的文本设置样式 --&gt;</div><div class="line">&lt;input placeholder-style=&apos;color:red;&apos; placeholder=&apos;我是占位的文本&apos;&gt;&lt;/input&gt;</div><div class="line"></div><div class="line">&lt;!-- 6.0 测试maxlength：限制输入框的最大长度 --&gt;</div><div class="line">&lt;input maxlength=&quot;10&quot; placeholder=&apos;最多只能输入10个字符&apos;&gt;&lt;/input&gt;</div><div class="line"></div><div class="line">&lt;!-- 7.0 测试事件 --&gt;</div><div class="line">&lt;input</div><div class="line">bindfocus=&apos;onbindfocus&apos;</div><div class="line">bindblur=&apos;onbindblur&apos;</div><div class="line">bindinput=&apos;onbindinput&apos;</div><div class="line">bindconfirm=&apos;onbindconfirm&apos;</div><div class="line">placeholder=&apos;输入框获取焦点的时候出发&apos;&gt;</div><div class="line">&lt;/input&gt;</div><div class="line"></div><div class="line">//js文件的内容</div><div class="line">Page(&#123;</div><div class="line">  onbindfocus:function(e)&#123;</div><div class="line">    console.log(&quot;onbindfocus-获得焦点&quot;,e);</div><div class="line">  &#125;,</div><div class="line">  onbindblur: function (e) &#123;</div><div class="line">    console.log(&quot;onbindblur-失去焦点&quot;, e);</div><div class="line">  &#125;,</div><div class="line">  onbindconfirm: function (e) &#123;</div><div class="line">    console.log(&quot;onbindconfirm-点击完成(键盘右下角)&quot;, e);</div><div class="line">  &#125;,</div><div class="line">  onbindinput: function (e) &#123;</div><div class="line">    console.log(&quot;onbindinput-监听到键盘输入&quot;, e);</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p><hr><ul><li>Posted by 博客园·<a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a> | <a href="http://wendingding.com" target="_blank" rel="external">花田半亩</a></li><li>联系作者 简书·<a href="http://www.jianshu.com/users/c5703017b9f5/latest_articleshttp://www.jianshu.com/users/c5703017b9f5/latest_articles" target="_blank" rel="external">文顶顶</a> 新浪微博·<a href="http://weibo.com/p/1005053800117445/home?from=page_100505&amp;mod=TAB#place">Coder_文顶顶</a></li><li>原创文章，版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文介绍小程序中的基础组件，主要包括button、input等组件的基本使用和代码示例。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;1-0-button组件&quot;&gt;&lt;a href=&quot;#1-0-button组件&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="微信小程序序列" scheme="https://weibo.com/u/3800117445/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%8F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序基础[08]-模板的基本使用和引入</title>
    <link href="https://weibo.com/u/3800117445/2018/09/27/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%B3%BB%E5%88%97%5B08%5D-%E6%A8%A1%E6%9D%BF%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E5%92%8C%E5%BC%95%E5%85%A5/"/>
    <id>https://weibo.com/u/3800117445/2018/09/27/微信小程序系列[08]-模板的基本使用和引入/</id>
    <published>2018-09-26T16:00:08.000Z</published>
    <updated>2018-11-11T13:30:01.247Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文介绍小程序框架中模板的基本使用，并通过一个综合案例来演绎。</p></blockquote><h4 id="1-0-模板基本说明"><a href="#1-0-模板基本说明" class="headerlink" title="1.0 模板基本说明"></a>1.0 模板基本说明</h4><p>在小程序开发过程中经常会发现有些相同的结构需要在不同的地方使用，我们没必要每次都创建代码做重复性的工作，这种情况可以考虑使用模板。我们可以把相同结构的代码放到一个模板中，需要使用的时候只需要通过模板语法来调用即可创建，而且模板语法还支持传参，灵活性很高且有利于提高效率和代码的可读性。</p><p>模板的基本用法可以简单分成两个部分：<span style="color:#e08">模板的定义</span>和<span style="color:#e08">模板的使用</span>。</p><p>定义模板非常简单，只需要把代码片段<code>使用template来包裹并设置name属性</code>即可。<br>在使用模板的时候，通过<code>设置is属性的值为指定模板的name</code>即可使用对应的模板，模板还支持传参。</p><p>这里给出模板定义和使用的基本示例代码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">//wxml文件的内容</div><div class="line"><span class="comment">&lt;!-- 1.0 模板的定义 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">name</span>=<span class="string">'template_one'</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">'http://wendingding.com/%E9%B2%B8%E9%B1%BC.png'</span> <span class="attr">class</span>=<span class="string">'imgClass'</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>我是文本标签:鲸鱼\n<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">name</span>=<span class="string">'template_two'</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>\n哈哈\n<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>嘻嘻\n<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>呵呵\n<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 2.0 模板的使用 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">'template_one'</span>&gt;</span><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">'template_two'</span>&gt;</span><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">'template_two'</span>&gt;</span><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"></div><div class="line">//xmss文件的内容</div><div class="line">style sheets</div><div class="line">.imgClass</div><div class="line">&#123;</div><div class="line">  width: 200rpx;</div><div class="line">  height: 200rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line">text&#123;</div><div class="line">  background: #593</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p><strong>模板传参</strong></p><p>小程序框架中的模板支持传参，在向模板传参的时候只需要设置template中的<code>data属性</code>即可，需要注意的是<span style="color:#195">小程序中的模板拥有独立的作用域</span>，因此不能直接使用js文件中Page函数内部的data属性。页面在进行渲染的时候，template的内容会被模板中的代码完全替换。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 1.0 模板的定义 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">name</span>=<span class="string">'template_one'</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">'&#123;&#123;srcImg&#125;&#125;'</span> <span class="attr">class</span>=<span class="string">'imgClass'</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>我是文本标签:&#123;&#123;name&#125;&#125;\n<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">name</span>=<span class="string">'template_two'</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>\n哈哈\n<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>&#123;&#123;text1&#125;&#125;\n<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>&#123;&#123;text2&#125;&#125;\n<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 2.0 模板的使用 --&gt;</span></div><div class="line">//wxml文件的内容</div><div class="line"><span class="comment">&lt;!-- 模板传参的第一种方式 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">'template_one'</span></span></div><div class="line"><span class="tag"><span class="attr">data</span>=<span class="string">'&#123;&#123;srcImg:"http://wendingding.com/%E9%B2%B8%E9%B1%BC.png",name:"鲸鱼"&#125;&#125;'</span></span></div><div class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">'template_one'</span></span></div><div class="line"><span class="tag"><span class="attr">data</span>=<span class="string">'&#123;&#123;srcImg:"http://wendingding.com/老虎.jpeg",name:"老虎"&#125;&#125;'</span></span></div><div class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 模板传参的第二种方式 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">'template_one'</span> <span class="attr">data</span>=<span class="string">'&#123;&#123;srcImg,name&#125;&#125;'</span>&gt;</span><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 模板传参的第三种方式 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">'template_one'</span> <span class="attr">data</span>=<span class="string">'&#123;&#123;...obj&#125;&#125;'</span>&gt;</span><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">'template_two'</span> <span class="attr">data</span>=<span class="string">'&#123;&#123;text1:"巴拉巴拉",text2:"溜溜"&#125;&#125;'</span>&gt;</span><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>其他的内容<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"></div><div class="line">//wxss文件的内容</div><div class="line">.imgClass</div><div class="line">&#123;</div><div class="line">  width: 200rpx;</div><div class="line">  height: 200rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line">text&#123;</div><div class="line">  background: #593</div><div class="line">&#125;</div><div class="line"></div><div class="line">//js文件的内容</div><div class="line">Page(&#123;</div><div class="line">  data: &#123;</div><div class="line">    srcImg:"http://wendingding.com/%E8%80%81%E8%99%8E.jpeg",</div><div class="line">    name:"老虎",</div><div class="line">    obj:&#123;</div><div class="line">      srcImg: "http://wendingding.com/%E8%80%81%E8%99%8E.jpeg",</div><div class="line">      name: "假老虎"</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><h4 id="2-0-综合案例"><a href="#2-0-综合案例" class="headerlink" title="2.0 综合案例"></a>2.0 综合案例</h4><p>这里给出一个模板使用的基本案例代码和对应的图示。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div></pre></td><td class="code"><pre><div class="line">//模板的定义</div><div class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">name</span>=<span class="string">'addressCardTemplate'</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'address-info-view'</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'address-info-view-top'</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">'address-name'</span>&gt;</span>杨勇老师<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'address-status'</span> <span class="attr">hidden</span>=<span class="string">'true'</span>&gt;</span>默认<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'address-del'</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'address-edit'</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'address-info-view-bottom'</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">'address-tel'</span>&gt;</span>联系电话：18689429999<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">'address-detail'</span>&gt;</span>详细地址：广州市天河区棠下大地XXXX<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"></div><div class="line">//模板对应的样式文件</div><div class="line">.address-info-view</div><div class="line">&#123;</div><div class="line">  height: 220rpx;</div><div class="line">  margin-top: 20rpx;</div><div class="line">  background: #fff;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.address-info-view-top</div><div class="line">&#123;</div><div class="line">  position: relative;</div><div class="line">  height: 100rpx;</div><div class="line">  border-bottom: 1px solid #ccc;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.address-name</div><div class="line">&#123;</div><div class="line">  display: block;</div><div class="line">  width: 200rpx;</div><div class="line">  height: 100rpx;</div><div class="line">  line-height: 100rpx;</div><div class="line">  padding-left: 30rpx;</div><div class="line">  font-size: 35rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.address-status</div><div class="line">&#123;</div><div class="line">  top: 30rpx;</div><div class="line">  left: 220rpx;</div><div class="line">  position: absolute;</div><div class="line">  width: 60rpx;</div><div class="line">  height: 40rpx;</div><div class="line">  line-height: 40rpx;</div><div class="line">  text-align: center;</div><div class="line">  font-size: 25rpx;</div><div class="line">  border-radius: 20rpx;</div><div class="line">  border: 1px solid #089;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.address-del,.address-edit</div><div class="line">&#123;</div><div class="line"></div><div class="line">  top: 20rpx;</div><div class="line">  position: absolute;</div><div class="line">  width: 140rpx;</div><div class="line">  height: 60rpx;</div><div class="line">  line-height: 60rpx;</div><div class="line">  text-align: center;</div><div class="line">  font-size: 25rpx;</div><div class="line">  border-radius: 30rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.address-edit</div><div class="line">&#123;</div><div class="line">  right: 30rpx;</div><div class="line">  background: #666;</div><div class="line">  color: #fff;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.address-del</div><div class="line">&#123;</div><div class="line">  right: 190rpx;</div><div class="line">  border: 1px solid #222;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.address-info-view-bottom</div><div class="line">&#123;</div><div class="line">  height: 120rpx;</div><div class="line">  line-height: 120rpx;</div><div class="line">  font-size: 25rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.address-tel,.address-detail</div><div class="line">&#123;</div><div class="line">  display: block;</div><div class="line">  height: 40rpx;</div><div class="line">  line-height: 40rpx;</div><div class="line">  margin-left: 30rpx;</div><div class="line">  padding-top: 10rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//模板的使用</div><div class="line">//引入外部定义的模板</div><div class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">src</span>=<span class="string">'../../templates/addressCard.wxml'</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">'addressCardTemplate'</span>&gt;</span><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">'addressCardTemplate'</span>&gt;</span><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"></div><div class="line">//引入项目中的wxss样式文件</div><div class="line">@import "../../templates/addressCard.wxss";</div><div class="line"></div><div class="line">page&#123;</div><div class="line">  min-height: 100%;</div><div class="line">  display: block;</div><div class="line">  background: #eee;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx20.png?raw=true" height="250px"></p><div class="tip">在wxss样式文件中如果需要引入其它的样式文件那么可以使用@import特性</div><p><strong>import 和 include</strong></p><p>在wxml文件中支持引入其他的wxml文件，可以使用<code>import</code>或者<code>include</code>标签。</p><blockquote><p>❏ import标签   仅仅引入wxml文件中模板定义部分。<br>❏ include标签  仅仅引入wxml文件中非模板定义部分。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">//模板的使用</div><div class="line">//引入外部定义的模板</div><div class="line">&lt;import src=&apos;../../templates/addressCard.wxml&apos;/&gt;</div><div class="line">&lt;template is=&apos;addressCardTemplate&apos;&gt;&lt;/template&gt;</div><div class="line">&lt;template is=&apos;addressCardTemplate&apos;&gt;&lt;/template&gt;</div><div class="line"></div><div class="line">//引入项目中的wxss样式文件</div><div class="line">@import &quot;../../templates/addressCard.wxss&quot;;</div><div class="line"></div><div class="line">page&#123;</div><div class="line">  min-height: 100%;</div><div class="line">  display: block;</div><div class="line">  background: #eee;</div><div class="line">&#125;</div></pre></td></tr></table></figure><div class="tip">在wxss样式文件中如果需要引入其它的样式文件那么可以使用@import特性</div><hr><ul><li>Posted by 博客园·<a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a> | <a href="http://wendingding.com" target="_blank" rel="external">花田半亩</a></li><li>联系作者 简书·<a href="http://www.jianshu.com/users/c5703017b9f5/latest_articleshttp://www.jianshu.com/users/c5703017b9f5/latest_articles" target="_blank" rel="external">文顶顶</a> 新浪微博·<a href="http://weibo.com/p/1005053800117445/home?from=page_100505&amp;mod=TAB#place">Coder_文顶顶</a></li><li>原创文章，版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文介绍小程序框架中模板的基本使用，并通过一个综合案例来演绎。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;1-0-模板基本说明&quot;&gt;&lt;a href=&quot;#1-0-模板基本说明&quot; class=&quot;headerlink&quot; title=&quot;1.0 模板
      
    
    </summary>
    
    
      <category term="微信小程序序列" scheme="https://weibo.com/u/3800117445/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%8F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序基础[07]-事件的绑定和事件对象</title>
    <link href="https://weibo.com/u/3800117445/2018/09/26/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%B3%BB%E5%88%97%5B07%5D-%E4%BA%8B%E4%BB%B6%E7%9A%84%E7%BB%91%E5%AE%9A%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%AF%B9%E8%B1%A1/"/>
    <id>https://weibo.com/u/3800117445/2018/09/26/微信小程序系列[07]-事件的绑定和事件对象/</id>
    <published>2018-09-25T16:00:07.000Z</published>
    <updated>2018-11-11T13:30:01.200Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文介绍小程序框架中的事件和事件对象，包括事件的分类，事件的绑定和事件对象的内部细节。</p></blockquote><h4 id="1-0-事件绑定"><a href="#1-0-事件绑定" class="headerlink" title="1.0 事件绑定"></a>1.0 事件绑定</h4><p><strong>小程序官方对WXML事件的定义</strong></p><blockquote><p>❏ 事件时视图层到逻辑层的通信方式。<br>❏ 事件可以将用户的行为反馈到逻辑层进行处理。<br>❏ 事件对象可以携带额外的数据信息，例如id、dataset和touches等。<br>❏ 事件可以绑定到组件上，当组件上对应事件被触发后，将执行逻辑层中对应的事件处理函数。</p></blockquote><p>小程序中的事件系统和前端开发中HTML里DOM事件系统很相像，在DOM系统通过<code>on + &quot;事件类型&quot;</code>的方式(ex：<span style="color:#195">onclick</span>)来给标签注册不同类型的事件，在小程序中我们通过<code>bind|catch + &quot;事件类型(名)</code>“的方式(ex：<span style="color:#195">bindtap</span>)来给组件绑定不同的事件。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx18.png?raw=true"></p><p>小程序中的事件分为<strong>冒泡事件</strong>和<strong>非冒泡事件</strong>，如果是冒泡事件的话，那么当组件上对应的事件被触发后该事件会向其父节点传递，直到顶层节点；如果是非冒泡事件的话，则不会向父节点传递。</p><p>绑定事件的时候可以使用<code>bind</code>或者是<code>catch</code>关键字，其中bind绑定的事件不会阻止冒泡事件向上传递，而catch绑定的事件会阻止冒泡事件向上传递。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">//wxml文件中的内容</div><div class="line"><span class="comment">&lt;!-- 1.0 使用bind绑定事件(不会阻止事件冒泡) --&gt;</span></div><div class="line"><span class="comment">&lt;!-- &lt;view class='box1' bindtap='box1click'&gt;外层标签</span></div><div class="line"><span class="comment">&lt;view class='box2' bindtap='box2click'&gt;内部标签</span></div><div class="line"><span class="comment">&lt;view class='box3' bindtap='box3click'&gt;核&lt;/view&gt;</span></div><div class="line"><span class="comment">&lt;/view&gt;</span></div><div class="line"><span class="comment">&lt;/view&gt; --&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 1.0 使用catcth绑定事件(会阻止事件冒泡) --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'box1'</span> <span class="attr">catchtap</span>=<span class="string">'box1click'</span>&gt;</span>外层标签</div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'box2'</span> <span class="attr">catchtap</span>=<span class="string">'box2click'</span>&gt;</span>内部标签</div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'box3'</span> <span class="attr">catchtap</span>=<span class="string">'box3click'</span>&gt;</span>核<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line">//wxss文件中的内容</div><div class="line">.box1&#123;</div><div class="line">  width: 500rpx;</div><div class="line">  height: 300rpx;</div><div class="line">  background: red</div><div class="line">&#125;</div><div class="line"></div><div class="line">.box2&#123;</div><div class="line">  width: 400rpx;</div><div class="line">  height: 200rpx;</div><div class="line">  background: green</div><div class="line">&#125;</div><div class="line"></div><div class="line">.box3&#123;</div><div class="line">  width: 100rpx;</div><div class="line">  height: 100rpx;</div><div class="line">  background: red</div><div class="line">&#125;</div><div class="line"></div><div class="line">//js文件中的内容</div><div class="line">Page(&#123;</div><div class="line">  data: &#123;&#125;,</div><div class="line">  box1click:function()&#123;</div><div class="line">    console.log("box1click");</div><div class="line">  &#125;,</div><div class="line">  box2click: function () &#123;</div><div class="line">    console.log("box2click");</div><div class="line">  &#125;,</div><div class="line">  box3click: function () &#123;</div><div class="line">    console.log("box3click");</div><div class="line">  &#125;</div></pre></td></tr></table></figure><h4 id="2-0-事件对象"><a href="#2-0-事件对象" class="headerlink" title="2.0 事件对象"></a>2.0 事件对象</h4><p><span style="color:#f05">当组件上绑定的事件被触发后逻辑层对应的事件处理函数将接受到一个事件对象(events)</span>,在事件处理函数中我们可以提供一个形参并通过该参数获取此事件对象。</p><p>事件对象的内容主要由<strong>基础事件对象属性(<code>BaseEvent</code>)</strong>、<strong>自定义事件对象属性(<code>CustomEvent</code>)</strong>和<strong>触摸事件对象属性(<code>TouchEvent</code>)</strong>三部分组成。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">//wxml文件</div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">bindtap</span>=<span class="string">'click'</span>&gt;</span>我是view<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line">//js文件</div><div class="line">Page(&#123;</div><div class="line">  click:function(event)&#123;</div><div class="line">    console.log(event);   //打印当前的事件对象</div><div class="line">    console.log(JSON.stringify(event,null,4));  //把当前的事件对象转换为JSON打印</div><div class="line">  &#125;</div></pre></td></tr></table></figure><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx19.png?raw=true"></p><p>这里列出通过组件中<code>data-*属性</code>来给逻辑层事件处理函数传递数据的示例代码。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">//wxml文件内容</div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">data-id</span>=<span class="string">'123'</span> <span class="attr">data-index</span>=<span class="string">'22'</span> <span class="attr">bindtap</span>=<span class="string">'click'</span>&gt;</span>我是view<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line">//js文件内容</div><div class="line">Page(&#123;</div><div class="line">  click:function(event)&#123;</div><div class="line">    console.log(JSON.stringify(event.currentTarget.dataset));</div><div class="line">  &#125;&#125;)</div><div class="line"></div><div class="line">//打印输出内容</div><div class="line">&#123;"id":"123","index":"22"&#125;</div></pre></td></tr></table></figure></p><hr><ul><li>Posted by 博客园·<a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a> | <a href="http://wendingding.com" target="_blank" rel="external">花田半亩</a></li><li>联系作者 简书·<a href="http://www.jianshu.com/users/c5703017b9f5/latest_articleshttp://www.jianshu.com/users/c5703017b9f5/latest_articles" target="_blank" rel="external">文顶顶</a> 新浪微博·<a href="http://weibo.com/p/1005053800117445/home?from=page_100505&amp;mod=TAB#place">Coder_文顶顶</a></li><li>原创文章，版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文介绍小程序框架中的事件和事件对象，包括事件的分类，事件的绑定和事件对象的内部细节。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;1-0-事件绑定&quot;&gt;&lt;a href=&quot;#1-0-事件绑定&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
    
      <category term="微信小程序序列" scheme="https://weibo.com/u/3800117445/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%8F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序基础[06]-数据的绑定和基础指令</title>
    <link href="https://weibo.com/u/3800117445/2018/09/25/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%B3%BB%E5%88%97%5B06%5D-%E6%95%B0%E6%8D%AE%E7%9A%84%E7%BB%91%E5%AE%9A%E5%92%8C%E5%9F%BA%E7%A1%80%E6%8C%87%E4%BB%A4/"/>
    <id>https://weibo.com/u/3800117445/2018/09/25/微信小程序系列[06]-数据的绑定和基础指令/</id>
    <published>2018-09-24T16:00:06.000Z</published>
    <updated>2018-11-11T13:30:01.212Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文介绍小程序框架中的数据绑定以及基本指令相关知识点。</p></blockquote><h4 id="1-0-数据绑定"><a href="#1-0-数据绑定" class="headerlink" title="1.0 数据绑定"></a>1.0 数据绑定</h4><p>我们在进行小程序开发的时候应该深刻理解数据绑定和事件响应模型，这和前端开发中面向DOM操作的编程思想截然不同。</p><p>小程序中的页面在进行渲染的时候，框架本身会将WXML文件和对应js文件中Page函数里面的data进行绑定。在WXML页面中我们可以直接使用<code>data中的属性</code>。小程序中的数据绑定使用<code>Mustache语法</code>(双大括号插值)来讲变量或者是简单的运算规则包起来。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx14.png?raw=true"></p><p><strong>简单绑定</strong></p><p>简单绑定指的是使用Mustache语法将变量包起来，在模板中直接作为字符串输出。</p><p>数据的简单绑定可作用于<strong>组件的内容</strong>、<strong>组件的属性</strong>、<strong>组件的控制属性</strong>以及<strong>关键字</strong>(按JavaScript中关键字其真值输出)等输出。</p><p>这里给出简单数据绑定的代码和运行结果示例：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">//.wxml文件的内容</div><div class="line"><span class="comment">&lt;!-- 1.0 作为组件的内容绑定 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;contentText&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 2.0 作为组件的属性绑定 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'&#123;&#123;className&#125;&#125;'</span>&gt;</span>绑定class属性<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">style</span>=<span class="string">'border:&#123;&#123;borderStyle&#125;&#125;'</span>&gt;</span>绑定style属性中border的值<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 3.0 作为控制属性绑定 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">'&#123;&#123;isShow&#125;&#125;'</span>&gt;</span>是否显示该组件<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 4.0 作为关键字直接输出 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>作为数字直接输出&#123;&#123;100&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">checked</span>=<span class="string">'&#123;&#123;false&#125;&#125;'</span>&gt;</span><span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">checked</span>&gt;</span><span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">checked</span>=<span class="string">'false'</span>&gt;</span><span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></div><div class="line"></div><div class="line">//js文件的内容</div><div class="line">Page(&#123;</div><div class="line">  data: &#123;</div><div class="line">    contentText:"曾虑多情损梵行",</div><div class="line">    className:"view-class",</div><div class="line">    borderStyle:"1px solid #000",</div><div class="line">    isShow:true</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx15.png?raw=true"></p><p><strong>运算支持</strong></p><p>小程序在进行数据绑定的时候还支持进行简单的运算，这些运算包括<strong>三元运算</strong>、<strong>算术运算</strong>、<strong>逻辑判断</strong>、<strong>字符串运算</strong>和<strong>对象取值</strong>等操作，这些运算在具体执行的时候遵从JavaScript语言的运算规则。</p><p>这里给出数据绑定运算支持的代码和运行结果示例：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">//wxml文件内容</div><div class="line"><span class="comment">&lt;!-- 1.0 三元运算符 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;isShowText ? '显示' : '不显示'&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- &lt;view&gt;&#123;&#123;isShowText ? 显示 : 不显示&#125;&#125;&lt;/view&gt; 错误的演示--&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 2.0 基本的算术运算 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123; a &#125;&#125; + 4  + &#123;&#123; b + c &#125;&#125;  = &#123;&#123;a + b + c + 4&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 3.0 逻辑运算 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span> 显示变量a&gt;3的结果：&#123;&#123;a &gt; 3&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 4.0 字符串运算 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123; "des:" + strM&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 5.0 对象取值运算 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>姓名== &#123;&#123;"name:" + objM.name&#125;&#125; 年龄== &#123;&#123;"age:" + objM.age&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line">//js文件内容</div><div class="line">Page(&#123;</div><div class="line">  data: &#123;</div><div class="line">    isShowText:true,</div><div class="line">    a:1,</div><div class="line">    b:2,</div><div class="line">    c:3,</div><div class="line">    strM:"我是拼接的字符串",</div><div class="line">    objM:&#123;</div><div class="line">      name:"文顶顶",</div><div class="line">      age:18</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  &#125;)</div></pre></td></tr></table></figure></p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx16.png?raw=true"></p><h4 id="2-0-基本指令"><a href="#2-0-基本指令" class="headerlink" title="2.0 基本指令"></a>2.0 基本指令</h4><p>在小程序开发中还有一些指令可以用来辅助数据绑定的操作，它们分别是<strong>条件渲染</strong>的指令和<strong>列表渲染</strong>的指令，负责处理<code>分支和循环</code>两种结构。</p><p><strong>条件渲染</strong></p><p>条件渲染的指令主要有：<code>wx:if</code>、<code>wx:elif</code>和<code>wx:else</code>,它们其实相当于if、else if和else。</p><p>当绑定的数据结果为true的时候显示，为false的时候不显示。<strong>注意</strong><code>wx:else</code>指令只能和<code>wx:if</code>指令配合成对使用，无法独自使用。如果需要控制多个组件的显示和隐藏又不影响布局，那么可以使用block标签来进行包裹。</p><div class="tip">注意：block不是组件，仅仅是一个包裹元素，页面渲染的时候不做任何处理。</div><p><strong><code>wx:if指令和hidden简单对比</code></strong></p><blockquote><p>❏ <code>wx:if是惰性的，当条件为真时才第一次渲染组件，否则将忽略。</code><br>❏ <code>设置hidden的组件始终会被渲染，仅通过样式控制显示或隐藏，本身不会触发销毁和重新渲染。</code></p></blockquote><p><strong>列表渲染</strong></p><p>列表渲染的指令主要有：<code>wx:for</code>、<code>wx:for-index</code>和<code>wx:for-item</code>。</p><p><code>wx:for</code>指令(控制属性)用于遍历数组根据数据的元素来重复渲染组件。默认情况下，渲染过程中数组当前渲染项的下标为index,当前项为item，它们可以通过<code>wx:for-index</code>和<code>wx:for-item</code>指令重命名。如果需要渲染的是多个组件的组合，那么可以使用block元素来进行包裹。</p><p>这里给出条件渲染和列表渲染的代码示例和运行结果：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">//js文件内容</div><div class="line">Page(&#123;</div><div class="line">  data: &#123;</div><div class="line">    isShow:true,</div><div class="line">    count:80,</div><div class="line">    arrM1:[</div><div class="line">      "哈哈",</div><div class="line">      "呵呵",</div><div class="line">      "嘻嘻"</div><div class="line">    ],</div><div class="line">    arrM2: [</div><div class="line">      &#123;name:"张三",age:18&#125;,</div><div class="line">      &#123;name:"李四",age:99&#125;</div><div class="line">    ],</div><div class="line">  &#125;</div><div class="line">&#125;)</div><div class="line"></div><div class="line">//wxml文件内容</div><div class="line"><span class="comment">&lt;!-- 1.0 控制是否显示 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">"&#123;&#123;isShow&#125;&#125;"</span>&gt;</span>是否显示<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 2.0 if..elif..else组合使用 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">"&#123;&#123;count &gt; 100&#125;&#125;"</span>&gt;</span>已经超过100块<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:elif</span>=<span class="string">"&#123;&#123;count &gt; 50&#125;&#125;"</span>&gt;</span>超过50块不足100块<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:else</span>&gt;</span>连50块都不给我<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 3.0 使用block包裹控制多个组件是否显示 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:if</span>=<span class="string">'&#123;&#123;true&#125;&#125;'</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>我是文本\n<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>我还是文本\n<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>我和它们不一样<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">block</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 4.0 隐藏标签 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">'&#123;&#123;isShow&#125;&#125;'</span>&gt;</span>哈哈哈<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 隐藏 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">hidden</span>&gt;</span>嘻嘻嘻嘻2<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 隐藏 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">hidden</span>=<span class="string">'false'</span>&gt;</span>嘻嘻嘻嘻3<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--显示--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">hidden</span>=<span class="string">'&#123;&#123;false&#125;&#125;'</span>&gt;</span>嘻嘻嘻嘻4<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 5.0 列表渲染基本 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">'&#123;&#123;arrM1&#125;&#125;'</span>&gt;</span>当前的索引和元素&#123;&#123;index + ":" + item&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 6.0 列表渲染其它指令 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">'&#123;&#123;arrM2&#125;&#125;'</span> <span class="attr">wx:for-index</span>=<span class="string">'i'</span> <span class="attr">wx:for-item</span>=<span class="string">'ele'</span>&gt;</span>当前的索引和元素信息&#123;&#123;i + "=&gt;" + ele.name + ele.age&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div></pre></td></tr></table></figure><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx17.png?raw=true"></p><div class="tip">警告：Now you can provide attr “wx:key” for a “wx:for” to improve performance。官方解释：当数据改变触发渲染层重新渲染的时候，会校正带有 key 的组件，框架会确保他们被重新排序，而不是重新创建，以确保使组件保持自身的状态，并且提高列表渲染时的效率。</div><hr><ul><li>Posted by 博客园·<a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a> | <a href="http://wendingding.com" target="_blank" rel="external">花田半亩</a></li><li>联系作者 简书·<a href="http://www.jianshu.com/users/c5703017b9f5/latest_articleshttp://www.jianshu.com/users/c5703017b9f5/latest_articles" target="_blank" rel="external">文顶顶</a> 新浪微博·<a href="http://weibo.com/p/1005053800117445/home?from=page_100505&amp;mod=TAB#place">Coder_文顶顶</a></li><li>原创文章，版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文介绍小程序框架中的数据绑定以及基本指令相关知识点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;1-0-数据绑定&quot;&gt;&lt;a href=&quot;#1-0-数据绑定&quot; class=&quot;headerlink&quot; title=&quot;1.0 数据绑定&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
    
      <category term="微信小程序序列" scheme="https://weibo.com/u/3800117445/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%8F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序基础[05]-小程序框架基础组件(一)</title>
    <link href="https://weibo.com/u/3800117445/2018/09/24/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%B3%BB%E5%88%97%5B05%5D-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%A1%86%E6%9E%B6%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B601/"/>
    <id>https://weibo.com/u/3800117445/2018/09/24/微信小程序系列[05]-小程序框架基础组件01/</id>
    <published>2018-09-23T16:00:05.000Z</published>
    <updated>2018-11-11T13:30:01.254Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文介绍小程序框架中为我们提供的组件，还专门对view、text、image等组件的基本使用进行了说明，此外还补充了为标签设置样式的几种方式并提供综合案例。</p></blockquote><h4 id="1-0-组件"><a href="#1-0-组件" class="headerlink" title="1.0 组件"></a>1.0 组件</h4><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx13.png?raw=true"></p><p><span style="color:#195">组件就是控件或者说标签。</span></p><p>小程序官方为我们提供了各种各样的组件，按照类型来划分可以分成：<strong>视图容器组件</strong>、<strong>基础内容组件</strong>、<strong>表单组件</strong>、<strong>导航组件</strong>、<strong>多媒体组件</strong>、<strong>地图组件</strong>和<strong>画布组件</strong>共<span style="color:red">七类30种</span>。</p><p>小程序中的组件和HTML中的元素差不多，一个组件是指从组件开始标签到结束标签的所有代码，因为平台的差异性所以小程序中的组件可能会被转译为不同端对应的代码，所以在进行小程序开发的时候不能使用除上述组件之外的标签。</p><p><strong>组件的定义</strong></p><blockquote><p>❏  组件是视图层的基本组成单元。<br>❏  组件会自带一些功能和微信风格的样式。<br>❏  组件通常包括开始标签和结束标签、用来修饰该组件的属性以及两个标签中间的内容。</p></blockquote><p><strong>组件的属性</strong></p><p>组件可以拥有属性，属性用于对组件进行配置。<br>组件的属性可以分为所有组件都拥有的共同属性和某些组件才有的特定属性。<br>组件的属性只能用在开始标签或者是单个自闭合标签身上，不能用于结束标签。<br>组件中可以设置多个属性，属性具有属性名称和属性值两部分内容，<span style="color:red">组件的属性名称都是小写</span>。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx10.png?raw=true"></p><p><strong><code>所有组件都拥有的共同属性</code></strong></p><blockquote><p>✧  <strong><span style="color:#27e">id</span></strong> &nbsp;&nbsp;组件的唯一标识，保持整个页面唯一。<br>✧  <strong><span style="color:#27e">style</span></strong> &nbsp;&nbsp;同HTML中的style一致，用来动态设置组件的内联样式。<br>✧  <strong><span style="color:#27e">class</span></strong> &nbsp;&nbsp;组件中的样式类，可以在WXSS文件中通过类选择器来选择标签设置样式。<br>✧  <strong><span style="color:#27e">hidden</span></strong> &nbsp;&nbsp;组件是否显示，默认所有组件均显示可通过设置该属性值为false隐藏组件。<br>✧  <strong><span style="color:#27e">bind../catch..</span></strong> &nbsp;&nbsp;用于绑定逻辑层事件的属性，其中bind为冒泡事件，catch为非冒泡事件。<br>✧  <strong><span style="color:#27e">data-</span></strong> &nbsp;&nbsp;自定义属性，事件触发时会发送给事件处理函数，函数中可通过datasl来获取对应的值。</p></blockquote><h4 id="2-0-view组件"><a href="#2-0-view组件" class="headerlink" title="2.0 view组件"></a>2.0 view组件</h4><p><span style="color:#27e"><a href="https://developers.weixin.qq.com/miniprogram/dev/component/view.html" target="_blank" rel="external">view组件</a>是视图容器组件的一种，属于块级组件(标签)。</span></p><p>view组件类似于HTML中的div标签，在小程序开发中布局展示，是小程序界面布局中最常用的UI组件，任何一种复杂的布局都可以通过嵌套view组件设置组件的样式来实现。</p><p><strong>下面列出view组件的主要属性</strong><br><span class="propWX-green">hover</span>    是否启动点击态，默认为false。<br><span class="propWX-green">hover-start-time</span> 标签按下后多久出现点击态，默认为50毫秒。<br><span class="propWX-green">hover-stay-time</span>     手指松开后点击态的保留时间，默认为400毫秒。<br><span class="propWX-green">hover-class</span>      标签被按下去的样式，默认值为<code>none</code>表示没有点击效果。</p><p>view组件的使用示例<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">//.wxml中的代码</div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">hover-class</span>=<span class="string">'view-hover-class'</span> <span class="attr">hover-start-time</span>=<span class="string">'1000'</span>&gt;</span>我是第1个View组件<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">hidden</span>=<span class="string">'&#123;&#123;true&#125;&#125;'</span>&gt;</span>我是第2个View组件<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>我是第3个View组件<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>我是第4个View组件<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line">//.wxss中的代码</div><div class="line">view&#123;</div><div class="line">  padding: 30rpx;</div><div class="line">  text-align: center;</div><div class="line">  background: #195;</div><div class="line">  margin: 20rpx;</div><div class="line">  color: #fff;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.view-hover-class</div><div class="line">&#123;</div><div class="line">  background: #9e2</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p><strong><code>给标签设置样式</code></strong></p><blockquote><p>❏  内联样式设置。<br>❏  页面样式设置。<br>❏  外部样式设置。<br>❏  全局样式设置。</p></blockquote><p>给view标签设置样式的四种方式代码示例<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">//.wxml文件</div><div class="line"><span class="comment">&lt;!-- 1.0 内联样式 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">style</span> = <span class="string">"width:300px;font-size:40rpx;background:#195;"</span>&gt;</span>我是第1个View组件<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 2.0 页面样式文件设置 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'pageStyleView'</span>&gt;</span>我是第2个View组件<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 3.0 引入外部样式文件设置 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'outPageViewClass'</span>&gt;</span>我是第3个View组件<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 4.0 使用全局样式文件设置 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'globalViewClass'</span>&gt;</span>我是第4个View组件<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>我是第5个View组件<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line">//.wxss文件</div><div class="line">@import "../../style/demo.wxss";</div><div class="line"></div><div class="line">.pageStyleView</div><div class="line">&#123;</div><div class="line">    background: #830;</div><div class="line">    color: #fff;</div><div class="line">&#125;</div><div class="line"></div><div class="line">view</div><div class="line">&#123;</div><div class="line">    margin: 30rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//demo.wxss文件</div><div class="line">.outPageViewClass</div><div class="line">&#123;</div><div class="line">  background: yellow;</div><div class="line">  color: red;</div><div class="line">  border: 1px solid #000;</div><div class="line">  width: 60%</div><div class="line">&#125;</div><div class="line"></div><div class="line">//app.wxss文件</div><div class="line">.globalViewClass&#123;</div><div class="line">  background: #503;</div><div class="line">  color: #fff;</div><div class="line">  font-family: "KaiTi";</div><div class="line">  font-size: 50rpx;</div><div class="line">  width: 90%</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx11.png?raw=true"></p><h4 id="3-0-image组件"><a href="#3-0-image组件" class="headerlink" title="3.0 image组件"></a>3.0 image组件</h4><p>小程序提供了<a href="https://developers.weixin.qq.com/miniprogram/dev/component/image.html" target="_blank" rel="external">image组件</a>来处理图片，同HTML中的img标签类型。</p><p><strong>下面列出image组件的主要属性</strong><br><span class="propWX-green">binderror</span>      加载图片失败时，发布到 AppService 的事件名。<br><span class="propWX-green">bindload</span>      加载图片完毕时，发布到 AppService 的事件名。<br><span class="propWX-green">src</span>    图片资源地址，可以是本地图片的相对路径也可以是URL地址。<br><span class="propWX-green">mode</span>  图片的缩放和剪裁模式，image组件中供提供了4中缩放和9种剪裁模式。<br><span class="propWX-green">lazy-load</span>     图片懒加载，布尔类型默认false，只对page与scroll-view下的image有效。</p><p><code>这里列出image组件中mode属性的取值范围</code><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">裁剪top不缩放图片，只显示图片的顶部区域</div><div class="line">裁剪bottom不缩放图片，只显示图片的底部区域</div><div class="line">裁剪center不缩放图片，只显示图片的中间区域</div><div class="line">裁剪left不缩放图片，只显示图片的左边区域</div><div class="line">裁剪right不缩放图片，只显示图片的右边区域</div><div class="line">裁剪top left不缩放图片，只显示图片的左上边区域</div><div class="line">裁剪top right不缩放图片，只显示图片的右上边区域</div><div class="line">裁剪bottom left不缩放图片，只显示图片的左下边区域</div><div class="line">裁剪bottom right不缩放图片，只显示图片的右下边区域</div><div class="line">缩放widthFix宽度不变，高度自动变化，保持原图宽高比不变</div><div class="line">缩放scaleToFill不保持纵横比缩放图片，使图片的宽高完全拉伸至填满 image 元素</div><div class="line">缩放aspectFit保持纵横比缩放图片，使图片的长边能完全显示。也就是说，可以完整地将图片显示出来。</div><div class="line">缩放aspectFill保持纵横比缩放图片，只保证图片短边能完全显示。图片通常只在水平或垂直方向是完整的。</div></pre></td></tr></table></figure></p><div class="tip">注意：image组件默认宽度300px、高度225px ，二维码/小程序码图片不支持长按识别。</div><h4 id="4-0-text组件"><a href="#4-0-text组件" class="headerlink" title="4.0 text组件"></a>4.0 text组件</h4><p><span style="color:#27e"><a href="https://developers.weixin.qq.com/miniprogram/dev/component/text.html" target="_blank" rel="external">text组件</a>用于文本内容的展示。</span></p><p><strong>下面列出text组件的主要属性</strong><br><span class="propWX-green">decode</span>      是否解码。<br><span class="propWX-green">selectable</span>      文本是否可选。<br><span class="propWX-green">space</span>      显示连续空格的方式，可选值有ensp、emsp和nbsp[0.5|1|自适应]</p><p><strong>text组件注意点说明</strong></p><p>[01] <code>text组件属于内联元素</code>。<br>[02] <code>text组件的内部只能嵌套text标签</code>。<br>[03] <code>小程序中只有text组件支持长按选中</code>。</p><p>这里给出text组件使用示例<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>我是text标签01\n<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">selectable</span>=<span class="string">'true'</span>&gt;</span>我是text标签02\n<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">decode</span>=<span class="string">'true'</span>&gt;</span>我是text标签03&amp;nbsp;嘻嘻\n<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">decode</span>=<span class="string">'false'</span>&gt;</span>解码&amp;nbsp;嘻嘻&amp;nbsp;(空格) &amp;lt;(小于) &amp;gt;(大于)</div><div class="line"> &amp;amp;(&amp;) &amp;apos;(') &amp;ensp;(半角空格) &amp;emsp;(全角空格)\n<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">decode</span>=<span class="string">'&#123;&#123;false&#125;&#125;'</span>&gt;</span>解码&amp;nbsp;嘻嘻&amp;nbsp;(空格) &amp;lt;(小于) &amp;gt;(大于)</div><div class="line">&amp;amp;(&amp;) &amp;apos;(') &amp;ensp;(半角空格) &amp;emsp;(全角空格)\n<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div></pre></td></tr></table></figure></p><p><strong><code>设置让标签隐藏的N中方式</code></strong></p><blockquote><p>❏  <span style="color:#27e">wx:if</span>       设置为true则显示(懒加载的)<br>❏  <span style="color:#27e">display</span>            设置为none，不占位也不显示<br>❏  <span style="color:#27e">visibility:</span>       设置为hidden，占位但是不显示<br>❏  <span style="color:#27e">hidden</span>         默认不设置该属性那么就是显示的  不占位也不显示</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;text hidden=&apos;true&apos;&gt;我是text标签05\n&lt;/text&gt;</div><div class="line">&lt;text style=&apos;display:none;&apos;&gt;我是text标签06\n&lt;/text&gt;</div><div class="line">&lt;text wx:if=&apos;&#123;&#123;true&#125;&#125;&apos;&gt;我是text标签07\n&lt;/text&gt;</div><div class="line">&lt;text style=&apos;visibility:hidden&apos;&gt;我是text标签08\n&lt;/text&gt;</div></pre></td></tr></table></figure><h4 id="5-0-综合案例"><a href="#5-0-综合案例" class="headerlink" title="5.0 综合案例"></a>5.0 综合案例</h4><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx12.png?raw=true" width="300px"></p><p>这里给出综合案例的目标效果和实现代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line">//wxml结构文件的内容</div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'info-view'</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'content info-view-left'</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">'info-name'</span>&gt;</span>杨勇嘻哈<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">'info-edit'</span> <span class="attr">src</span>=<span class="string">'../../images/编辑.png'</span> <span class="attr">bindtap</span>=<span class="string">'editClick'</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">'info-description'</span>&gt;</span>梧州学院，定制您的成功人生。<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'content info-view-right'</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">'https://wx.qlogo.cn/mmopen/vi_324a6p....Yd2FZVJSw/132'</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"></div><div class="line">//wxss样式文件的内容</div><div class="line">.info-view</div><div class="line">&#123;</div><div class="line">  width: 100%;</div><div class="line">  height: 210rpx;</div><div class="line">  line-height: 220rpx;</div><div class="line">  background: #000;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.content&#123;</div><div class="line">  top: 30rpx;</div><div class="line">  height: 150rpx;</div><div class="line">  line-height: 150rpx;</div><div class="line">  position: absolute;</div><div class="line">  color: #fff;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.info-view-left</div><div class="line">&#123;</div><div class="line">  left: 40rpx;</div><div class="line">  width: 400rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.info-view-right</div><div class="line">&#123;</div><div class="line">  right: 40rpx;</div><div class="line">  width: 150rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.info-name</div><div class="line">&#123;</div><div class="line">  display: block;</div><div class="line">  width: 200rpx;</div><div class="line">  height: 100rpx;</div><div class="line">  line-height: 100rpx;</div><div class="line">  font-size: 45rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.info-edit</div><div class="line">&#123;</div><div class="line">  display: block;</div><div class="line">  width: 50rpx;</div><div class="line">  height: 50rpx;</div><div class="line">  position: absolute;</div><div class="line">  left: 220rpx;</div><div class="line">  top: 25rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.info-description</div><div class="line">&#123;</div><div class="line">  display: block;</div><div class="line">  height: 50rpx;</div><div class="line">  line-height: 50rpx;</div><div class="line">  font-size: 30rpx;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.info-view-right image</div><div class="line">&#123;</div><div class="line">  width: 120rpx;</div><div class="line">  height: 120rpx;</div><div class="line">  border-radius: 20rpx;</div><div class="line">  margin-top: 15rpx;</div><div class="line">  margin-left: 15rpx;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h4 id="6-0-第三方UI组件库介绍"><a href="#6-0-第三方UI组件库介绍" class="headerlink" title="6.0 第三方UI组件库介绍"></a>6.0 第三方UI组件库介绍</h4><p> <a href="https://github.com/xiaolin3303/wx-charts" target="_blank" rel="external">wx-charts</a> [<strong><code>stars 2500+</code></strong>]<br>        微信小程序图表charts组件</p><p> <a href="https://github.com/TalkingData/iview-weapp" target="_blank" rel="external">iview-weapp</a> [<strong><code>stars 2400+</code></strong>]<br>        高质量的微信小程序 UI 组件库<br>        官网和文档地址(<a href="https://weapp.iviewui.com/" target="_blank" rel="external">https://weapp.iviewui.com/</a>)<br> <a href="https://github.com/youzan/vant-weapp" target="_blank" rel="external">vant-weapp</a> [<strong><code>stars 6500+</code></strong>]<br>        轻量、可靠的小程序 UI 组件库。<br>        官网和文档地址(<a href="https://youzan.github.io/vant-weapp/#/intro" target="_blank" rel="external">https://youzan.github.io/vant-weapp/#/intro</a>)</p><p><a href="https://github.com/wux-weapp/wux-weapp" target="_blank" rel="external">wux-weapp</a>[<strong><code>stars 2000+</code></strong>]<br>        微信小程序自定义 UI 组件<br>        官网和文档地址(<a href="https://wux-weapp.github.io/wux-weapp-docs/#/list" target="_blank" rel="external">https://wux-weapp.github.io/wux-weapp-docs/#/list</a>)</p><p> <a href="https://github.com/Tencent/weui-wxss" target="_blank" rel="external">weui-wxss</a> [<strong><code>stars 7000+</code></strong>]<br>         WeUI 是一套同微信原生视觉体验一致的基础样式库，由微信官方设计团队为微信内网页和微信小程序量身设计，包含button、cell、dialog、 progress、 toast、article、icon等各式元素。<br>         官网和文档地址(<a href="https://weui.io/" target="_blank" rel="external">https://weui.io/</a>)</p><hr><ul><li>Posted by 博客园·<a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a> | <a href="http://wendingding.com" target="_blank" rel="external">花田半亩</a></li><li>联系作者 简书·<a href="http://www.jianshu.com/users/c5703017b9f5/latest_articleshttp://www.jianshu.com/users/c5703017b9f5/latest_articles" target="_blank" rel="external">文顶顶</a> 新浪微博·<a href="http://weibo.com/p/1005053800117445/home?from=page_100505&amp;mod=TAB#place">Coder_文顶顶</a></li><li>原创文章，版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文介绍小程序框架中为我们提供的组件，还专门对view、text、image等组件的基本使用进行了说明，此外还补充了为标签设置样式的几种方式并提供综合案例。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;1-0-组件&quot;&gt;&lt;a href=&quot;#1
      
    
    </summary>
    
    
      <category term="微信小程序序列" scheme="https://weibo.com/u/3800117445/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%8F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序基础[04]-小程序框架页面级文件</title>
    <link href="https://weibo.com/u/3800117445/2018/09/23/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%B3%BB%E5%88%97%5B04%5D-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%A1%86%E6%9E%B6%E9%A1%B5%E9%9D%A2%E7%BA%A7%E6%96%87%E4%BB%B6/"/>
    <id>https://weibo.com/u/3800117445/2018/09/23/微信小程序系列[04]-小程序框架页面级文件/</id>
    <published>2018-09-22T16:00:04.000Z</published>
    <updated>2018-11-11T13:30:01.219Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文介绍小程序项目中的页面级文件，这些文件的作用，以及具体的配置字段和使用方式。</p></blockquote><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx07.png?raw=true"></p><p><span style="color:#f05">小程序中的页面级文件主要有四种类型，即每个页面都应该由4个文件组成。</span></p><p>小程序中同一框架页面的这四个文件必须具有相同的路径和文件名，当小程序启动进入或页面跳转的时候，小程序内部会自动根据app.json配置路径来找到对应的资源进行加载和渲染。单个页面的四个文件分别是：</p><blockquote><p>❏  <strong>控制页面逻辑的.js文件，必要的</strong><br>❏  <strong>控制页面结构的.wxml文件，必要的。</strong><br>❏  <strong>控制页面样式的.wxss文件，非必要的。</strong><br>❏  <strong>控制页面配置的.json文件，非必要的(如果创建那么使用{}表示空)。</strong></p></blockquote><h3 id="1-0-配置文件-json"><a href="#1-0-配置文件-json" class="headerlink" title="1.0 配置文件(.json)"></a>1.0 配置文件(.json)</h3><p>每个页面均可以拥有一个页面配置文件，该文件是json格式的，在进行配置的时候一定要严格遵守json数据的规范。</p><p>如果我们在小程序项目中新建-page,那么会自动创建默认的json文件({})，但该文件并非是必须的。</p><p>页面级别JSON文件配置项等同于app.json文件中的window配置项，它只能控制当前页面的窗口表现。</p><p><span style="color:#f75">在渲染页面的时候，页面级文件中的window配置项会覆盖app.json中相同的配置项。</span></p><p>这里列出页面配置文件中的部分配置项：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"backgroundTextStyle"</span>: <span class="string">"light"</span>,</div><div class="line">    <span class="attr">"navigationBarBackgroundColor"</span>: <span class="string">"#110e1e"</span>,</div><div class="line">    <span class="attr">"navigationBarTitleText"</span>: <span class="string">"我的页面"</span>,</div><div class="line">    <span class="attr">"navigationBarTextStyle"</span>: <span class="string">"white"</span>,</div><div class="line">    <span class="attr">"backgroundTextStyle"</span>:<span class="string">"#e02"</span></div><div class="line">  &#125;</div></pre></td></tr></table></figure><h3 id="2-0-样式文件-wxss"><a href="#2-0-样式文件-wxss" class="headerlink" title="2.0 样式文件(.wxss)"></a>2.0 样式文件(.wxss)</h3><p>小程序中的样式文件后缀名称是.wxss。</p><p>WXSS(WeiXin Style sheets)是基于CSS扩展的样式语言，用于描述WXML的组件样式。WXSS决定WXML的组件应该怎么显示，它具有CSS的大部分特性，并在CSS的基础上扩展了尺寸单位和样式导入等特性。</p><p><strong>尺寸单位</strong></p><p>因为CSS中原有的尺寸单位在不同尺寸的屏幕中不能完美的实现元素的按比例缩放，所有WXSS在CSS尺寸单位的基础上拓展了两种尺寸单位。rem和rpx这两种单位本身都是相对单位，在渲染的时候最终会被换算为px。</p><blockquote><p>❏ rem ，全称为root em<br>❏ rpx ，全称为reponsive pixel</p></blockquote><p>WXSS规定所有屏幕的宽度均为20rem。</p><pre><code>iphone6 屏幕实际宽度为375px，则20rem = 375px，那么在iphone6中，1rem = 18.75px iPhoneXS Max屏幕实际宽度为414px,则20rem = 414px，那么在iPhoneXS Max中，1rem = 20.7px</code></pre><p>WXSS规定所有屏幕的宽度均为750rpx。</p><pre><code>iphone6 屏幕实际宽度为375px，则750rpx = 375px，那么在iphone6中，1rpx = 0.5px iPhoneXS Max屏幕实际宽度为414px,则750rpx = 414px，那么在iPhoneXS Max中，1rpx = 0.552px</code></pre><p><strong>选择器</strong></p><p>CSS选择器用于选择需要应用样式的元素。<br>WXSS仅实现了CSS中的部分选择器，使用规则和CSS选择器基本一致，目前支持的选择器有：</p><table><thead><tr><th>选择器</th><th>样例</th><th>样例描述</th></tr></thead><tbody><tr><td>.class</td><td><code>.intro</code></td><td>选择所有拥有 class=”intro” 的组件（类选择器）</td></tr><tr><td>#id</td><td><code>#firstname</code></td><td>选择拥有 id=”firstname” 的组件（id 选择器）</td></tr><tr><td>element</td><td><code>view</code></td><td>选择所有 view 组件（标签选择器）</td></tr><tr><td>element, element</td><td><code>view, checkbox</code></td><td>选择所有的 view 组件和所有的 checkbox 组件（并列）</td></tr><tr><td>::after</td><td><code>view::after</code></td><td>在 view 组件后边插入内容(  伪元素选着器  )</td></tr><tr><td>::before</td><td><code>view::before</code></td><td>在 view 组件前边插入内容(  伪元素选着器  )</td></tr></tbody></table><h3 id="3-0-结构文件-wxml"><a href="#3-0-结构文件-wxml" class="headerlink" title="3.0 结构文件(.wxml)"></a>3.0 结构文件(.wxml)</h3><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx08.png?raw=true"></p><p>WXML（<code>WeiXin Markup Language</code>）是小程序专用的一套标记语言，同html类似用于展示并渲染界面。<br>WXML的渲染原理和React Native基本一致，它用一套标记语言在不同平台被解析为不同端的渲染文件。</p><p>WXML标记语言最终总是会转换为宿主端对应的语言，所以<span style="color:#195">在小程序开发中WXML里使用的标签(组件)只能是小程序定义的而不能使用自定义标签</span>，如此才能够保证页面在转译的时候能够被正确处理。</p><h3 id="4-0-逻辑文件-js"><a href="#4-0-逻辑文件-js" class="headerlink" title="4.0 逻辑文件(.js)"></a>4.0 逻辑文件(.js)</h3><p>这是一个JavaScript文件，里面写JavaScript代码。</p><p>页面的逻辑文件主要负责：<strong>设置初始化数据</strong>、<strong>注册当前页面生命周期函数</strong>，<strong>注册事件处理函数等</strong>。</p><p>小程序的逻辑层文件都是JavaScript文件，整个项目中所有的这些JavaScript文件包括app.js最终都将被打包成一个js文件，该文件在小程序启动的时候运行，直到小程序销毁。<span style="color:#195">小程序中每个页面的逻辑文件都拥有独立的作用域，这些JavaScript文件运行在独立的JavaScript引擎中。</span></p><div class="tip">因为小程序中的JavaScript文件在独立的JavaScript引擎中运行，所以不能使用前端开发中的DOM操作，没有document和window等对象，自然也无法使用jQuery等框架。</div><p>这里列出页面中默认生成的JavaScript代码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">    Page(&#123;</div><div class="line">      //页面的初始数据</div><div class="line">      data: &#123;&#125;,</div><div class="line">      //生命周期函数--监听页面加载</div><div class="line">      onLoad: <span class="keyword">function</span> (options) &#123; &#125;,</div><div class="line">      //生命周期函数--监听页面初次渲染完成</div><div class="line">      onReady: <span class="function"><span class="title">function</span></span> () &#123; &#125;,</div><div class="line">      //生命周期函数--监听页面显示</div><div class="line">      onShow: <span class="function"><span class="title">function</span></span> () &#123;&#125;,</div><div class="line">      //生命周期函数--监听页面隐藏</div><div class="line">      onHide: <span class="function"><span class="title">function</span></span> () &#123; &#125;,</div><div class="line">      //生命周期函数--监听页面卸载</div><div class="line">      onUnload: <span class="function"><span class="title">function</span></span> () &#123;&#125;,</div><div class="line">      //页面相关事件处理函数--监听用户下拉动作</div><div class="line">      onPullDownRefresh: <span class="function"><span class="title">function</span></span> () &#123; &#125;,</div><div class="line">      //页面上拉触底事件的处理函数</div><div class="line">      onReachBottom: <span class="function"><span class="title">function</span></span> () &#123; &#125;,</div><div class="line">      //用户点击右上角分享</div><div class="line">      onShareAppMessage: <span class="function"><span class="title">function</span></span> () &#123; &#125;</div><div class="line">    &#125;)</div><div class="line">`</div></pre></td></tr></table></figure><p>在页面的js文件中，通过Page函数来注册页面，该函数接收一个Object类型的参数，该对象中的内容主要分成页面的初始数据(<code>data属性</code>)、生命周期函数和事件处理函数等。</p><p>在页面的js文件中，可以通过<code>var app = getApp()</code>的方式来获取全局的小程序实例对象(<span style="color:#195">在app.js文件中通过App函数注册的对象</span>)。小程序框架以页面栈的形式维护了当前的所有页面，可以通过<code>getCountPages</code>函数来获取当前页面栈的实例，该实例以数组形式按照栈的顺序给出，第一个元素为首页最后一个元素为当前页(可以通过索引来获取)。</p><hr><ul><li>Posted by 博客园·<a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a> | <a href="http://wendingding.com" target="_blank" rel="external">花田半亩</a></li><li>联系作者 简书·<a href="http://www.jianshu.com/users/c5703017b9f5/latest_articleshttp://www.jianshu.com/users/c5703017b9f5/latest_articles" target="_blank" rel="external">文顶顶</a> 新浪微博·<a href="http://weibo.com/p/1005053800117445/home?from=page_100505&amp;mod=TAB#place">Coder_文顶顶</a></li><li>原创文章，版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文介绍小程序项目中的页面级文件，这些文件的作用，以及具体的配置字段和使用方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/flowerField/Source/blob/master/Bl
      
    
    </summary>
    
    
      <category term="微信小程序序列" scheme="https://weibo.com/u/3800117445/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%8F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序基础[03]-小程序框架系统级文件</title>
    <link href="https://weibo.com/u/3800117445/2018/09/22/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%B3%BB%E5%88%97%5B03%5D-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%A1%86%E6%9E%B6%E7%B3%BB%E7%BB%9F%E7%BA%A7%E6%96%87%E4%BB%B6/"/>
    <id>https://weibo.com/u/3800117445/2018/09/22/微信小程序系列[03]-小程序框架系统级文件/</id>
    <published>2018-09-21T16:00:02.000Z</published>
    <updated>2018-11-11T13:30:01.272Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文介绍开发微信小程序项目中的主体文件，这些文件的作用，以及具体的配置字段。</p></blockquote><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx04.png?raw=true"></p><h3 id="1-0-配置文件-app-json"><a href="#1-0-配置文件-app-json" class="headerlink" title="1.0 配置文件(app.json)"></a>1.0 配置文件(app.json)</h3><h4 id="app-json文件说明"><a href="#app-json文件说明" class="headerlink" title="app.json文件说明"></a>app.json文件说明</h4><p>该文件是小程序的配置文件，编写的时候需要严格遵循json的格式规范(关于JSON的知识点请参考<a href="http://wendingding.com/2018/04/16/javaScript%E7%B3%BB%E5%88%97%20[05]-javaScript%E5%92%8CJSON/" target="_blank" rel="external">javaScript系列 [05]-javaScript和JSON</a>)，在程序加载的时候负责对小程序的全局进行配置，配置项如下：</p><p>☑︎ <span style="color:#f50">page</span>:设置页面路径。<br>◻︎ <span style="color:#f50">tabBar</span>:设置tab的表现。<br>◻︎ <span style="color:#f50">window</span>:设置默认页面的窗口表现。<br>◻︎ <span style="color:#f50">networkTimeout</span>:设置网络超时时间。<br>◻︎ <span style="color:#f50">debug</span>:设置是否开启debug模式，可选项为true或false，默认关闭。</p><p>列出app.json文件内容的整体结构<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"pages"</span>:[],</div><div class="line">  <span class="attr">"window"</span>:&#123;&#125;,</div><div class="line">  <span class="attr">"tabBar"</span>:&#123;&#125;,</div><div class="line">  <span class="attr">"networkTimeout"</span>:&#123;&#125;,</div><div class="line">  <span class="attr">"debug"</span>:<span class="literal">false</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h4 id="pages配置项"><a href="#pages配置项" class="headerlink" title="pages配置项"></a>pages配置项</h4><p>pages配置选项负责注册小程序的页面，是必须要填写的，当我们使用开发工具来创建页面的时候默认会自动生成对应的配置信息。</p><p>pages配置项的value值是一个包含多有页面路径的数组，用来指定小程序由哪些页面构成，其中每一项均有“<code>路径+文件名</code>”组成，下面给出示例：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line"><span class="attr">"pages"</span>: [</div><div class="line">  <span class="string">"pages/home/home"</span>,</div><div class="line">  <span class="string">"pages/cart/cart"</span>,</div><div class="line">  <span class="string">"pages/category/category"</span>,</div><div class="line">  <span class="string">"pages/mine/mine"</span>,</div><div class="line">  <span class="string">"pages/index/index"</span>,</div><div class="line">  <span class="string">"pages/logs/logs"</span>,</div><div class="line">  <span class="string">"pages/login/login"</span>,</div><div class="line">  <span class="string">"component/wdd-component/block/index"</span>,</div><div class="line">  <span class="string">"pages/mine/coupon/coupon"</span>,</div><div class="line">  <span class="string">"component/wdd-component/addresscard/index"</span></div><div class="line">]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><div class="tip"><br>说明：pages配置项中的第一个元素(上面为home)默认为小程序的首页，路径中不需要填写文件后缀名，渲染页面的时候框架会自动寻找路径并把同名的.json、.wxml、.wxss和.js文件进行整合。<br></div><h4 id="window配置项"><a href="#window配置项" class="headerlink" title="window配置项"></a>window配置项</h4><p>window配置项负责设置小程序<span style="color:"#195"">状态栏、导航条、标题、窗口背景色等系统级样式。</span></p><p><span class="propWX">navigationBarBackgroundColor</span>    导航栏背景颜色     [<code>HexColor类型</code>]<br><span class="propWX">navigationBarTextStyle</span>          导航栏标题颜色     [<code>String类型</code>],black或white(默认)<br><span class="propWX">navigationBarTitleText</span>          导航栏标题文字内容  [<code>String类型</code>]<br><span class="propWX">navigationStyle</span>                    导航栏样式         [<code>String类型</code>]，default(默认)或custom<br><span class="propWX">backgroundColor</span>                  窗口的背景色       [<code>HexColor类型</code>]<br><span class="propWX">backgroundTextStyle</span>              下拉加载的样式     [<code>String类型</code>]，dark(默认)和light<br><span class="propWX">backgroundColorTop    </span>           顶部窗口的背景色    [<code>HexColor类型</code>]     ，仅 iOS 支持<br><span class="propWX">backgroundColorBottom</span>            底部窗口的背景色    [<code>HexColor类型</code>]     ，仅 iOS 支持<br><span class="propWX">enablePullDownRefresh</span>            全局开启下拉刷新    [<code>Boolean类型值</code>]，true和false(默认)<br><span class="propWX">onReachBottomDistance</span>            上拉触底事件触发时距底部距离 [<code>Number类型</code>]，默认值为50px</p><p>这里给出一个小程序项目中的window配置项示例<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"window"</span>: &#123;</div><div class="line">    <span class="attr">"backgroundTextStyle"</span>: <span class="string">"light"</span>,</div><div class="line">    <span class="attr">"navigationBarBackgroundColor"</span>: <span class="string">"#000"</span>,</div><div class="line">    <span class="attr">"navigationBarTitleText"</span>: <span class="string">"文顶顶的小程序"</span>,</div><div class="line">    <span class="attr">"navigationBarTextStyle"</span>: <span class="string">"white"</span>,</div><div class="line">    <span class="attr">"backgroundColor"</span>: <span class="string">"#eeeeee"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h4 id="tabBar配置项"><a href="#tabBar配置项" class="headerlink" title="tabBar配置项"></a>tabBar配置项</h4><p><strong><code>tabBar配置项</code></strong> 用于设置小程序中的tabBar选项卡，在商业小程序中使用频率很高。tabBar配置项的可配置属性如下：</p><p>☑︎ <span class="propWX-green">color</span>                   tab 上的文字默认颜色[<code>HexColor类型</code>]<br>☑︎ <span class="propWX-green">selectedColor</span>         tab 上的文字选中时的颜色[<code>HexColor类型</code>]<br>☑︎ <span class="propWX-green">backgroundColor</span>         tab 的背景色[<code>HexColor类型</code>]<br>◻︎ <span class="propWX-green">borderStyle</span>             tabbar上边框的颜色， 仅支持 black / white(默认)<br>◻︎ <span class="propWX-green">position</span>                 tabBar的位置，仅支持 bottom / top[<code>String类型</code>]<br>☑︎ <span class="propWX-green">list</span>                     tab 的列表最少2个、最多5个元素[<code>Array类型</code>]</p><p><strong><code>list配置项</code></strong> 中的每一项都应该是一个对象，代表着一个tab的相关配置。list配置项的课配置属性如下：<br>☑︎ <span class="propWX-green">text    </span>            tab 上按钮文字<br>☑︎ <span class="propWX-green">pagePath</span>            页面路径，必须在 pages 中先定义<br>◻︎ <span class="propWX-green">iconPath</span>            图片的相对路径，icon 大小限制为40kb，不支持网络图片。<br>◻︎ <span class="propWX-green">selectedIconPath</span>    选中时的图片相对路径，icon 大小限制为40kb，不支持网络图片。</p><p>这里给出一个小程序项目中的tabBar配置项的示例和最终显示结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"tabBar"</span>: &#123;</div><div class="line">    <span class="attr">"selectedColor"</span>: <span class="string">"#000000"</span>,</div><div class="line">    <span class="attr">"list"</span>: [</div><div class="line">      &#123;</div><div class="line">        <span class="attr">"pagePath"</span>: <span class="string">"pages/home/home"</span>,</div><div class="line">        <span class="attr">"text"</span>: <span class="string">"首页"</span>,</div><div class="line">        <span class="attr">"iconPath"</span>: <span class="string">"img/tabbar/home.png"</span>,</div><div class="line">        <span class="attr">"selectedIconPath"</span>: <span class="string">"img/tabbar/homeSelected.png"</span></div><div class="line">      &#125;,</div><div class="line">      &#123;</div><div class="line">        <span class="attr">"pagePath"</span>: <span class="string">"pages/login/login"</span>,</div><div class="line">        <span class="attr">"text"</span>: <span class="string">"分类"</span>,</div><div class="line">        <span class="attr">"iconPath"</span>: <span class="string">"img/tabbar/category.png"</span>,</div><div class="line">        <span class="attr">"selectedIconPath"</span>: <span class="string">"img/tabbar/categorySelected.png"</span></div><div class="line">      &#125;,</div><div class="line">      &#123;</div><div class="line">        <span class="attr">"pagePath"</span>: <span class="string">"pages/cart/cart"</span>,</div><div class="line">        <span class="attr">"text"</span>: <span class="string">"购物车"</span>,</div><div class="line">        <span class="attr">"iconPath"</span>: <span class="string">"img/tabbar/cart.png"</span>,</div><div class="line">        <span class="attr">"selectedIconPath"</span>: <span class="string">"img/tabbar/cartSelected.png"</span></div><div class="line">      &#125;,</div><div class="line">      &#123;</div><div class="line">        <span class="attr">"pagePath"</span>: <span class="string">"pages/mine/mine"</span>,</div><div class="line">        <span class="attr">"text"</span>: <span class="string">"我的"</span>,</div><div class="line">        <span class="attr">"iconPath"</span>: <span class="string">"img/tabbar/mine.png"</span>,</div><div class="line">        <span class="attr">"selectedIconPath"</span>: <span class="string">"img/tabbar/mineSelected.png"</span></div><div class="line">      &#125; ]</div><div class="line">  &#125;&#125;</div></pre></td></tr></table></figure><p>上面配置项的显示效果如下图<br><img src="https://github.com/flowerField/Source/blob/master/Blog/wx05.png?raw=true" width="450px"></p><div></div><h4 id="请求超时和debug模式"><a href="#请求超时和debug模式" class="headerlink" title="请求超时和debug模式"></a>请求超时和debug模式</h4><p><strong><code>networkTimeout</code></strong>用于控制小程序中所有网络请求的超时时间(只能通过该配置项统一的配置)。</p><p><strong><code>debug配置项</code></strong>用于控制是否开启debug模式，默认情况下是关闭的，当debug模式设置为true之后在开发者工具的控制面板，所有的调试信息将以info的形式输。</p><div class="tip">说明：需要注意全局配置文件和页面配置文件的关系，当路由到对应页面的时候，页面配置文件的配置项将会覆盖全局配置</div><h3 id="2-0-逻辑控制文件-app-js"><a href="#2-0-逻辑控制文件-app-js" class="headerlink" title="2.0 逻辑控制文件(app.js)"></a>2.0 逻辑控制文件(app.js)</h3><p>app.js是小程序的整体逻辑控制文件，在该文件中通过<span style="color:#f82">App()函数</span>来注册小程序的生命周期函数、全局方法和全局属性，而且已经注册的小程序实例可以在其他的逻辑层代码中通过getApp()函数获取。</p><strong>App()函数用于注册一个微信小程序。</strong><br><strong>App()函数必须在app.js中注册，且不能注册多个。</strong><br><strong>App()函数的Object参数对象主要包括<code>生命周期函数</code>和其它数据，生命周期函数用于程序监听。</strong><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx06.png?raw=true"></p><p><strong>生命周期函数说明</strong></p><p>当启动一个微信小程序的时候，会首先依次触发<code>onLaunch</code>和<code>onShow方法</code>，然后通过app.json配置文件中的pages配置项来注册相应的页面，最后根据默认路径加载首页。当用户点击关闭标签或点击了设备的Home按钮离开微信的时候小程序并不会直接销毁，而是进入后台，这两种情况都会触发<code>onHide方法</code>，当再次打开微信小程序的时候会触发<code>onShow方法</code>。当小程序进入后台一定时间或者系统资源占用过高的时候会被真正的销毁。</p><p>注册小程序的示例代码(该代码可以在app.js文件通过敲入<code>App + Tab键</code>的方式生成)<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">App(&#123;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">   * 当小程序初始化完成时，会触发 onLaunch（全局只触发一次）</span></div><div class="line"><span class="comment">   */</span></div><div class="line">  onLaunch: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;,</div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">   * 当小程序启动，或从后台进入前台显示，会触发 onShow</span></div><div class="line"><span class="comment">   */</span></div><div class="line">  onShow: <span class="function"><span class="keyword">function</span> (<span class="params">options</span>) </span>&#123;&#125;,</div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">   * 当小程序从前台进入后台，会触发 onHide</span></div><div class="line"><span class="comment">   */</span></div><div class="line">  onHide: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;,</div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">   * 当小程序发生脚本错误，或者 api 调用失败时，会触发 onError 并带上错误信息</span></div><div class="line"><span class="comment">   */</span></div><div class="line">  onError: <span class="function"><span class="keyword">function</span> (<span class="params">msg</span>) </span>&#123;&#125;,</div><div class="line">  otherDate:<span class="string">'存放其他数据'</span></div><div class="line">&#125;)</div></pre></td></tr></table></figure></p><h3 id="3-0-全局样式文件-app-wxss"><a href="#3-0-全局样式文件-app-wxss" class="headerlink" title="3.0 全局样式文件(app.wxss)"></a>3.0 全局样式文件(app.wxss)</h3><p>WXSS是小程序基于CSS拓展的一套样式语言，它实现了CSS大部分规则。<br><strong>app.wxss是全局样式表，对项目中每个页面都有效</strong>，可以将一些系统级别的样式统一写入到该文件中。</p><div class="tip">注意：页面在渲染的时候，页面中的.wxss文件样式会覆盖app.wxss中相同的选择器样式。</div><hr><ul><li>Posted by 博客园·<a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a> | <a href="http://wendingding.com" target="_blank" rel="external">花田半亩</a></li><li>联系作者 简书·<a href="http://www.jianshu.com/users/c5703017b9f5/latest_articleshttp://www.jianshu.com/users/c5703017b9f5/latest_articles" target="_blank" rel="external">文顶顶</a> 新浪微博·<a href="http://weibo.com/p/1005053800117445/home?from=page_100505&amp;mod=TAB#place">Coder_文顶顶</a></li><li>原创文章，版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文介绍开发微信小程序项目中的主体文件，这些文件的作用，以及具体的配置字段。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/flowerField/Source/blob/master/Blog
      
    
    </summary>
    
    
      <category term="微信小程序序列" scheme="https://weibo.com/u/3800117445/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%8F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序基础[02]-小程序框架的文件体系</title>
    <link href="https://weibo.com/u/3800117445/2018/09/21/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%B3%BB%E5%88%97%5B02%5D-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%A1%86%E6%9E%B6%E7%9A%84%E6%96%87%E4%BB%B6%E4%BD%93%E7%B3%BB/"/>
    <id>https://weibo.com/u/3800117445/2018/09/21/微信小程序系列[02]-小程序框架的文件体系/</id>
    <published>2018-09-20T16:00:01.000Z</published>
    <updated>2018-11-11T13:30:01.236Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文介绍开发微信小程序项目中的体系结构和组成部分。</p></blockquote><h4 id="1-0-微信小程序框架体系"><a href="#1-0-微信小程序框架体系" class="headerlink" title="1.0 微信小程序框架体系"></a>1.0 微信小程序框架体系</h4><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx03.png?raw=true" height="300px"></p><p>微信小程序框架体系由两部分组成，分别是视图层和逻辑层。</p><p>视图层由<code>WXML</code>和<code>WXSS</code>组成，类似于前端开发中的HTML(标签)和CSS(样式)。</p><p>逻辑层是一套运行在本地JavaScript引擎中的JavaScript代码，负责调用数据处理方法来驱动视图更新。</p><p>微信小程序的整体开发流程非常接近前端<span style="color:#195">HTML + CSS + JavaScript</span>的模式,需要注意的是在小程序开发中没有DOM的概念的，本地也没有document和window等对象，更不能使用jQuery等类似的框架。</p><p>微信小程序中视图层和逻辑层的交互主要通过数据绑定和事件响应来实现，采用了单向绑定的机制。</p><p><strong>微信小程序的单向绑定机制</strong></p><p><span style="color:#f40">单向绑定机制需要先将逻辑层和视图层的数据与事件进行绑定，当页面需要修改的时候，逻辑层只需要调用特定的setData方法修改已经绑定的数据即可，这时候框架会自动触发WXML来重新渲染整个视图，当框架接收到用户的交互操作时会根据视图层绑定的事件执行逻辑层中对应的事件函数以进行响应</span>。</p><h4 id="2-0-微信小程序的结构"><a href="#2-0-微信小程序的结构" class="headerlink" title="2.0 微信小程序的结构"></a>2.0 微信小程序的结构</h4><p>微信小程序的开发工具下载并安装之后，我们可以来开始创建一个新的项目，如果没有appID那么可以选择使用测试账号。</p><p>项目初始化完成后，我们能够看到下面的界面。</p><p><img src="https://github.com/flowerField/Source/blob/master/Blog/wx02.png?raw=true" height="300px"></p><p>整个开发界面大概可以分成工具选项区、模拟器显示区、调试区、代码目录和工作区，其中工作区、模拟器显示区和调试区均可以选择在关闭在打开中进行切换，这里我们主要关注项目初始化后的代码目录。</p><p>打印项目文件的目录结构(使用命令行操作，具体请参考<a href="http://wendingding.com/2018/04/11/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E7%B3%BB%E5%88%97%20Mac%E7%B3%BB%E7%BB%9F%E4%B8%ADTree%E7%9A%84%E4%BD%BF%E7%94%A8/" target="_blank" rel="external">网络编程系列 Mac系统中Tree的使用</a>)如下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── app.js</div><div class="line">├── app.json</div><div class="line">├── app.wxss</div><div class="line">├── pages</div><div class="line">│   ├── index</div><div class="line">│   │   ├── index.js</div><div class="line">│   │   ├── index.wxml</div><div class="line">│   │   └── index.wxss</div><div class="line">│   └── logs</div><div class="line">│       ├── logs.js</div><div class="line">│       ├── logs.json</div><div class="line">│       ├── logs.wxml</div><div class="line">│       └── logs.wxss</div><div class="line">├── project.config.json</div><div class="line">└── utils</div><div class="line">    └── util.js</div></pre></td></tr></table></figure><p>在一个完成的小程序项目中，所有的文件可以划分为<strong><code>小程序框架主体文件</code></strong>和<strong><code>页面文件</code></strong>两类。</p><p><strong>① 小程序框架主体文件</strong>是系统级文件，每个项目中只有一份，他们分别是：</p><pre>  app.js文件      控制小程序整体逻辑，主要用于注册小程序全局实例。  app.json文件    控制小程序整体配置，配置小程序整体设置。  app.wxss文件    控制小程序整体样式，对所有页面的布局文件都有效。  project.config.json文件     整个项目的配置信息</pre><p><strong>② 页面文件</strong> 通常由四个文件组成，分别是<span style="color:#195">.wxml（结构）.wxss（样式）.js（逻辑）和.json（配置）</span>。框架规定，同一个页面的这四个文件必须具有相同的路径和文件名，在编译的时候它们将自动关联。在初始化后的项目中，pages文件夹下面拥有两个默认的页面，分别是index页面和logs页面。</p><hr><ul><li>Posted by 博客园·<a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a> | <a href="http://wendingding.com" target="_blank" rel="external">花田半亩</a></li><li>联系作者 简书·<a href="http://www.jianshu.com/users/c5703017b9f5/latest_articleshttp://www.jianshu.com/users/c5703017b9f5/latest_articles" target="_blank" rel="external">文顶顶</a> 新浪微博·<a href="http://weibo.com/p/1005053800117445/home?from=page_100505&amp;mod=TAB#place">Coder_文顶顶</a></li><li>原创文章，版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://www.cnblogs.com/wendingding/" target="_blank" rel="external">文顶顶</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文介绍开发微信小程序项目中的体系结构和组成部分。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;1-0-微信小程序框架体系&quot;&gt;&lt;a href=&quot;#1-0-微信小程序框架体系&quot; class=&quot;headerlink&quot; title=&quot;1.0 微信
      
    
    </summary>
    
    
      <category term="微信小程序序列" scheme="https://weibo.com/u/3800117445/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BA%8F%E5%88%97/"/>
    
  </entry>
  
</feed>
